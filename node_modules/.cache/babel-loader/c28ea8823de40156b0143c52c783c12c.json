{"ast":null,"code":"var _jsxFileName = \"C:\\\\Fund\\\\soft-ui-dashboard-pro-react-v2.0.0\\\\admin\\\\src\\\\examples\\\\Charts\\\\LineCharts\\\\MiniGradientLineChart\\\\index.js\",\n    _s = $RefreshSig$();\n\n/**\n=========================================================\n* Soft UI Dashboard PRO React - v2.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/soft-ui-dashboard-pro-material-ui\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\nimport { useRef, useEffect, useState, useMemo } from \"react\"; // porp-types is a library for typechecking of props\n\nimport PropTypes from \"prop-types\"; // react-chartjs-2 components\n\nimport { Line } from \"react-chartjs-2\"; // @mui material components\n\nimport Card from \"@mui/material/Card\"; // Soft UI Dashboard PRO React components\n\nimport SuiBox from \"components/SuiBox\";\nimport SuiTypography from \"components/SuiTypography\";\nimport gradientChartLine from \"assets/theme/functions/gradientChartLine\"; // MiniGradientLineChart configurations\n\nimport configs from \"examples/Charts/LineCharts/MiniGradientLineChart/configs\"; // Soft UI Dashboard PRO React base styles\n\nimport colors from \"assets/theme/base/colors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction MiniGradientLineChart(_ref) {\n  _s();\n\n  let {\n    title,\n    description,\n    height,\n    chart\n  } = _ref;\n  const chartRef = useRef(null);\n  const [chartData, setChartData] = useState({});\n  const {\n    data,\n    options\n  } = chartData;\n  useEffect(() => {\n    const chartDatasets = chart.datasets.map(dataset => ({ ...dataset,\n      tension: 0.5,\n      pointRadius: 0,\n      borderWidth: 2,\n      borderColor: colors[dataset.color].main,\n      fill: true,\n      maxBarThickness: 6,\n      backgroundColor: gradientChartLine(chartRef.current.children[0], colors[dataset.color].main, 0.02)\n    }));\n    setChartData(configs(chart.labels, chartDatasets, chart.customTick));\n  }, [chart]);\n\n  const renderChart = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [title || description ? /*#__PURE__*/_jsxDEV(SuiBox, {\n      pt: 2,\n      px: 2,\n      children: [title && /*#__PURE__*/_jsxDEV(SuiTypography, {\n        variant: \"button\",\n        textColor: \"text\",\n        fontWeight: \"medium\",\n        textTransform: \"capitalize\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this), description]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this) : null, useMemo(() => /*#__PURE__*/_jsxDEV(SuiBox, {\n      ref: chartRef,\n      sx: {\n        height\n      },\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: data,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }, this), [chartData, height])]\n  }, void 0, true);\n\n  return title || description ? /*#__PURE__*/_jsxDEV(Card, {\n    children: renderChart\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 33\n  }, this) : renderChart;\n} // Setting default values for the props of MiniGradientLineChart\n\n\n_s(MiniGradientLineChart, \"n3wPcHgMRERcqUWkVtpcWGQ3sy8=\");\n\n_c = MiniGradientLineChart;\nMiniGradientLineChart.defaultProps = {\n  title: \"\",\n  description: \"\",\n  height: \"6.25rem\"\n}; // Typechecking props for the MiniGradientLineChart\n\nMiniGradientLineChart.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  chart: PropTypes.objectOf(PropTypes.oneOfType([PropTypes.string, PropTypes.array])).isRequired\n};\nexport default MiniGradientLineChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"MiniGradientLineChart\");","map":{"version":3,"sources":["C:/Fund/soft-ui-dashboard-pro-react-v2.0.0/admin/src/examples/Charts/LineCharts/MiniGradientLineChart/index.js"],"names":["useRef","useEffect","useState","useMemo","PropTypes","Line","Card","SuiBox","SuiTypography","gradientChartLine","configs","colors","MiniGradientLineChart","title","description","height","chart","chartRef","chartData","setChartData","data","options","chartDatasets","datasets","map","dataset","tension","pointRadius","borderWidth","borderColor","color","main","fill","maxBarThickness","backgroundColor","current","children","labels","customTick","renderChart","defaultProps","propTypes","string","oneOfType","node","number","objectOf","array","isRequired"],"mappings":"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","sourcesContent":["/**\n=========================================================\n* Soft UI Dashboard PRO React - v2.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/soft-ui-dashboard-pro-material-ui\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n\nimport { useRef, useEffect, useState, useMemo } from \"react\";\n\n// porp-types is a library for typechecking of props\nimport PropTypes from \"prop-types\";\n\n// react-chartjs-2 components\nimport { Line } from \"react-chartjs-2\";\n\n// @mui material components\nimport Card from \"@mui/material/Card\";\n\n// Soft UI Dashboard PRO React components\nimport SuiBox from \"components/SuiBox\";\nimport SuiTypography from \"components/SuiTypography\";\n\nimport gradientChartLine from \"assets/theme/functions/gradientChartLine\";\n\n// MiniGradientLineChart configurations\nimport configs from \"examples/Charts/LineCharts/MiniGradientLineChart/configs\";\n\n// Soft UI Dashboard PRO React base styles\nimport colors from \"assets/theme/base/colors\";\n\nfunction MiniGradientLineChart({ title, description, height, chart }) {\n  const chartRef = useRef(null);\n  const [chartData, setChartData] = useState({});\n  const { data, options } = chartData;\n\n  useEffect(() => {\n    const chartDatasets = chart.datasets.map((dataset) => ({\n      ...dataset,\n      tension: 0.5,\n      pointRadius: 0,\n      borderWidth: 2,\n      borderColor: colors[dataset.color].main,\n      fill: true,\n      maxBarThickness: 6,\n      backgroundColor: gradientChartLine(\n        chartRef.current.children[0],\n        colors[dataset.color].main,\n        0.02\n      ),\n    }));\n\n    setChartData(configs(chart.labels, chartDatasets, chart.customTick));\n  }, [chart]);\n\n  const renderChart = (\n    <>\n      {title || description ? (\n        <SuiBox pt={2} px={2}>\n          {title && (\n            <SuiTypography\n              variant=\"button\"\n              textColor=\"text\"\n              fontWeight=\"medium\"\n              textTransform=\"capitalize\"\n            >\n              {title}\n            </SuiTypography>\n          )}\n          {description}\n        </SuiBox>\n      ) : null}\n      {useMemo(\n        () => (\n          <SuiBox ref={chartRef} sx={{ height }}>\n            <Line data={data} options={options} />\n          </SuiBox>\n        ),\n        [chartData, height]\n      )}\n    </>\n  );\n\n  return title || description ? <Card>{renderChart}</Card> : renderChart;\n}\n\n// Setting default values for the props of MiniGradientLineChart\nMiniGradientLineChart.defaultProps = {\n  title: \"\",\n  description: \"\",\n  height: \"6.25rem\",\n};\n\n// Typechecking props for the MiniGradientLineChart\nMiniGradientLineChart.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  chart: PropTypes.objectOf(PropTypes.oneOfType([PropTypes.string, PropTypes.array])).isRequired,\n};\n\nexport default MiniGradientLineChart;\n"]},"metadata":{},"sourceType":"module"}