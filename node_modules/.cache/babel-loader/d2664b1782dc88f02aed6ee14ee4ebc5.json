{"ast":null,"code":"var _jsxFileName = \"C:\\\\Fund\\\\soft\\\\admin\\\\src\\\\layouts\\\\applications\\\\kanban\\\\index.js\",\n    _s = $RefreshSig$();\n\n/**\n=========================================================\n* Soft UI Dashboard PRO React - v2.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/soft-ui-dashboard-pro-material-ui\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\nimport { useState } from \"react\"; // @asseinfo/react-kanban components\n\nimport Board from \"@asseinfo/react-kanban\"; // react-html-parser components\n\nimport ReactHtmlParser from \"react-html-parser\"; // uuid is a library for generating unique id\n\nimport { v4 as uuidv4 } from \"uuid\"; // @mui material components\n\nimport Icon from \"@mui/material/Icon\"; // Soft UI Dashboard PRO React components\n\nimport SuiBox from \"components/SuiBox\";\nimport SuiButton from \"components/SuiButton\";\nimport SuiTypography from \"components/SuiTypography\";\nimport SuiInput from \"components/SuiInput\"; // Soft UI Dashboard PRO React example components\n\nimport DashboardLayout from \"examples/LayoutContainers/DashboardLayout\";\nimport DashboardNavbar from \"examples/Navbars/DashboardNavbar\";\nimport Footer from \"examples/Footer\"; // Kanban application components\n\nimport Header from \"layouts/applications/kanban/components/Header\"; // Custom styles for the Kanban\n\nimport styles from \"layouts/applications/kanban/styles\"; // Data\n\nimport boards from \"layouts/applications/kanban/data\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Kanban() {\n  _s();\n\n  const [newCardForm, setNewCardForm] = useState(false);\n  const [formValue, setFormValue] = useState(\"\");\n  const classes = styles();\n\n  const openNewCardForm = (event, id) => setNewCardForm(id);\n\n  const closeNewCardForm = () => setNewCardForm(false);\n\n  const handeSetFormValue = _ref => {\n    let {\n      currentTarget\n    } = _ref;\n    return setFormValue(currentTarget.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(DashboardLayout, {\n    children: [/*#__PURE__*/_jsxDEV(DashboardNavbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SuiBox, {\n      py: 3,\n      children: [/*#__PURE__*/_jsxDEV(SuiBox, {\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n        m: 2,\n        children: /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SuiBox, {\n        customClass: classes.kanban,\n        children: /*#__PURE__*/_jsxDEV(Board, {\n          initialBoard: boards,\n          allowAddCard: true,\n          allowAddColumn: true,\n          renderColumnHeader: (_ref2, _ref3) => {\n            let {\n              id,\n              title\n            } = _ref2;\n            let {\n              addCard\n            } = _ref3;\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(SuiBox, {\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n                mb: 3,\n                children: [/*#__PURE__*/_jsxDEV(SuiTypography, {\n                  variant: \"h6\",\n                  children: title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(SuiButton, {\n                  size: \"small\",\n                  onClick: event => openNewCardForm(event, id),\n                  children: /*#__PURE__*/_jsxDEV(Icon, {\n                    className: \" font-bold text-dark\",\n                    children: \"add\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 76,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 17\n              }, this), newCardForm === id ? /*#__PURE__*/_jsxDEV(SuiBox, {\n                my: 2.5,\n                children: [/*#__PURE__*/_jsxDEV(SuiInput, {\n                  value: formValue,\n                  inputProps: {\n                    rows: 2\n                  },\n                  onChange: handeSetFormValue,\n                  multiline: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(SuiBox, {\n                  display: \"flex\",\n                  mt: 2,\n                  children: [/*#__PURE__*/_jsxDEV(SuiButton, {\n                    variant: \"gradient\",\n                    buttonColor: \"success\",\n                    size: \"small\",\n                    onClick: () => {\n                      addCard({\n                        id: uuidv4(),\n                        template: formValue\n                      });\n                      setFormValue(\"\");\n                    },\n                    children: \"add\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 88,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(SuiBox, {\n                    ml: 1,\n                    children: /*#__PURE__*/_jsxDEV(SuiButton, {\n                      variant: \"gradient\",\n                      buttonColor: \"light\",\n                      size: \"small\",\n                      onClick: closeNewCardForm,\n                      children: \"cancel\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 100,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 99,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 19\n              }, this) : null]\n            }, void 0, true);\n          },\n          renderCard: (_ref4, _ref5) => {\n            let {\n              id,\n              template\n            } = _ref4;\n            let {\n              dragging\n            } = _ref5;\n            return /*#__PURE__*/_jsxDEV(SuiBox, {\n              customClass: classes.kanban_card,\n              dragging: dragging.toString() || undefined,\n              children: typeof template === \"string\" ? ReactHtmlParser(template) : template\n            }, id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this);\n          },\n          onCardNew: () => null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Kanban, \"CMo5TMGsdX9SJzDbFWpnF7LttWM=\");\n\n_c = Kanban;\nexport default Kanban;\n\nvar _c;\n\n$RefreshReg$(_c, \"Kanban\");","map":{"version":3,"sources":["C:/Fund/soft/admin/src/layouts/applications/kanban/index.js"],"names":["useState","Board","ReactHtmlParser","v4","uuidv4","Icon","SuiBox","SuiButton","SuiTypography","SuiInput","DashboardLayout","DashboardNavbar","Footer","Header","styles","boards","Kanban","newCardForm","setNewCardForm","formValue","setFormValue","classes","openNewCardForm","event","id","closeNewCardForm","handeSetFormValue","currentTarget","value","kanban","title","addCard","rows","template","dragging","kanban_card","toString","undefined"],"mappings":"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","sourcesContent":["/**\n=========================================================\n* Soft UI Dashboard PRO React - v2.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/soft-ui-dashboard-pro-material-ui\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n\nimport { useState } from \"react\";\n\n// @asseinfo/react-kanban components\nimport Board from \"@asseinfo/react-kanban\";\n\n// react-html-parser components\nimport ReactHtmlParser from \"react-html-parser\";\n\n// uuid is a library for generating unique id\nimport { v4 as uuidv4 } from \"uuid\";\n\n// @mui material components\nimport Icon from \"@mui/material/Icon\";\n\n// Soft UI Dashboard PRO React components\nimport SuiBox from \"components/SuiBox\";\nimport SuiButton from \"components/SuiButton\";\nimport SuiTypography from \"components/SuiTypography\";\nimport SuiInput from \"components/SuiInput\";\n\n// Soft UI Dashboard PRO React example components\nimport DashboardLayout from \"examples/LayoutContainers/DashboardLayout\";\nimport DashboardNavbar from \"examples/Navbars/DashboardNavbar\";\nimport Footer from \"examples/Footer\";\n\n// Kanban application components\nimport Header from \"layouts/applications/kanban/components/Header\";\n\n// Custom styles for the Kanban\nimport styles from \"layouts/applications/kanban/styles\";\n\n// Data\nimport boards from \"layouts/applications/kanban/data\";\n\nfunction Kanban() {\n  const [newCardForm, setNewCardForm] = useState(false);\n  const [formValue, setFormValue] = useState(\"\");\n  const classes = styles();\n\n  const openNewCardForm = (event, id) => setNewCardForm(id);\n  const closeNewCardForm = () => setNewCardForm(false);\n  const handeSetFormValue = ({ currentTarget }) => setFormValue(currentTarget.value);\n\n  return (\n    <DashboardLayout>\n      <DashboardNavbar />\n      <SuiBox py={3}>\n        <SuiBox display=\"flex\" justifyContent=\"flex-end\" m={2}>\n          <Header />\n        </SuiBox>\n        <SuiBox customClass={classes.kanban}>\n          <Board\n            initialBoard={boards}\n            allowAddCard\n            allowAddColumn\n            renderColumnHeader={({ id, title }, { addCard }) => (\n              <>\n                <SuiBox display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={3}>\n                  <SuiTypography variant=\"h6\">{title}</SuiTypography>\n                  <SuiButton size=\"small\" onClick={(event) => openNewCardForm(event, id)}>\n                    <Icon className=\" font-bold text-dark\">add</Icon>\n                  </SuiButton>\n                </SuiBox>\n                {newCardForm === id ? (\n                  <SuiBox my={2.5}>\n                    <SuiInput\n                      value={formValue}\n                      inputProps={{ rows: 2 }}\n                      onChange={handeSetFormValue}\n                      multiline\n                    />\n                    <SuiBox display=\"flex\" mt={2}>\n                      <SuiButton\n                        variant=\"gradient\"\n                        buttonColor=\"success\"\n                        size=\"small\"\n                        onClick={() => {\n                          addCard({ id: uuidv4(), template: formValue });\n                          setFormValue(\"\");\n                        }}\n                      >\n                        add\n                      </SuiButton>\n                      <SuiBox ml={1}>\n                        <SuiButton\n                          variant=\"gradient\"\n                          buttonColor=\"light\"\n                          size=\"small\"\n                          onClick={closeNewCardForm}\n                        >\n                          cancel\n                        </SuiButton>\n                      </SuiBox>\n                    </SuiBox>\n                  </SuiBox>\n                ) : null}\n              </>\n            )}\n            renderCard={({ id, template }, { dragging }) => (\n              <SuiBox\n                key={id}\n                customClass={classes.kanban_card}\n                dragging={dragging.toString() || undefined}\n              >\n                {typeof template === \"string\" ? ReactHtmlParser(template) : template}\n              </SuiBox>\n            )}\n            onCardNew={() => null}\n          />\n        </SuiBox>\n      </SuiBox>\n      <Footer />\n    </DashboardLayout>\n  );\n}\n\nexport default Kanban;\n"]},"metadata":{},"sourceType":"module"}