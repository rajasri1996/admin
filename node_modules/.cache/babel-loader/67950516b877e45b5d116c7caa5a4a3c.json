{"ast":null,"code":"var _jsxFileName = \"C:\\\\Fund\\\\soft-ui-dashboard-pro-react-v2.0.0\\\\admin\\\\src\\\\examples\\\\Sidenav\\\\index.js\",\n    _s = $RefreshSig$();\n\n/**\n=========================================================\n* Soft UI Dashboard PRO React - v2.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/soft-ui-dashboard-pro-material-ui\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\nimport { useEffect, useState } from \"react\"; // react-router-dom components\n\nimport { useLocation, NavLink } from \"react-router-dom\"; // prop-types is a library for typechecking of props.\n\nimport PropTypes from \"prop-types\"; // clsx is a utility for constructing className strings conditionally\n\nimport clsx from \"clsx\"; // @mui material components\n\nimport Drawer from \"@mui/material/Drawer\";\nimport List from \"@mui/material/List\";\nimport Divider from \"@mui/material/Divider\";\nimport Link from \"@mui/material/Link\";\nimport Icon from \"@mui/material/Icon\"; // Soft UI Dashboard PRO React components\n\nimport SuiBox from \"components/SuiBox\";\nimport SuiTypography from \"components/SuiTypography\"; // Soft UI Dashboard PRO React example components\n\nimport SidenavCollapse from \"examples/Sidenav/SidenavCollapse\";\nimport SidenavList from \"examples/Sidenav/SidenavList\";\nimport SidenavItem from \"examples/Sidenav/SidenavItem\";\nimport SidenavCard from \"examples/Sidenav/SidenavCard\"; // Custom styles for the Sidenav\n\nimport styles from \"examples/Sidenav/styles/sidenav\"; // Images\n// import SoftUILogo from \"assets/images/logo-ct.png\";\n// Soft UI Dashboard PRO React context\n\nimport { useSoftUIController } from \"context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Sidenav(_ref) {\n  _s();\n\n  let {\n    routes,\n    ...rest\n  } = _ref;\n  const [openCollapse, setOpenCollapse] = useState(false);\n  const [openNestedCollapse, setOpenNestedCollapse] = useState(false);\n  const [controller, dispatch] = useSoftUIController();\n  const {\n    miniSidenav,\n    transparentSidenav\n  } = controller;\n  const classes = styles({\n    miniSidenav,\n    transparentSidenav\n  });\n  const location = useLocation();\n  const {\n    pathname\n  } = location;\n  const collapseName = pathname.split(\"/\").slice(1)[0];\n  const itemName = pathname.split(\"/\").slice(1)[1];\n\n  const closeSizenav = () => dispatch({\n    type: \"MINI_SIDENAV\",\n    value: true\n  });\n\n  useEffect(() => {\n    // A function that sets the mini state of the sidenav.\n    function handleMiniSidenav() {\n      dispatch({\n        type: \"MINI_SIDENAV\",\n        value: window.innerWidth < 1200\n      });\n    }\n    /** \n     The event listener that's calling the handleMiniSidenav function when resizing the window.\n    */\n\n\n    window.addEventListener(\"resize\", handleMiniSidenav); // Call the handleMiniSidenav function to set the state with the initial value.\n\n    handleMiniSidenav(); // Remove event listener on cleanup\n\n    return () => window.removeEventListener(\"resize\", handleMiniSidenav);\n  }, [dispatch, location]); // Render all the nested collapse items from the routes.js\n\n  const renderNestedCollapse = collapse => {\n    const template = collapse.map(_ref2 => {\n      let {\n        name,\n        route,\n        key,\n        href\n      } = _ref2;\n      return href ? /*#__PURE__*/_jsxDEV(Link, {\n        href: href,\n        target: \"_blank\",\n        rel: \"noreferrer\",\n        className: classes.sidenav_navlink,\n        children: /*#__PURE__*/_jsxDEV(SidenavItem, {\n          name: name,\n          nested: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(NavLink, {\n        to: route,\n        className: classes.sidenav_navlink,\n        children: /*#__PURE__*/_jsxDEV(SidenavItem, {\n          name: name,\n          active: route === pathname,\n          nested: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this);\n    });\n    return template;\n  }; // Render the all the collpases from the routes.js\n\n\n  const renderCollapse = collapses => collapses.map(_ref3 => {\n    let {\n      name,\n      collapse,\n      route,\n      href,\n      key\n    } = _ref3;\n    let returnValue;\n\n    if (collapse) {\n      returnValue = /*#__PURE__*/_jsxDEV(SidenavItem, {\n        name: name,\n        active: key === itemName,\n        open: openNestedCollapse === name,\n        onClick: () => openNestedCollapse === name ? setOpenNestedCollapse(false) : setOpenNestedCollapse(name),\n        children: renderNestedCollapse(collapse)\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this);\n    } else {\n      returnValue = href ? /*#__PURE__*/_jsxDEV(Link, {\n        href: href,\n        target: \"_blank\",\n        rel: \"noreferrer\",\n        className: classes.sidenav_navlink,\n        children: /*#__PURE__*/_jsxDEV(SidenavItem, {\n          name: name,\n          active: key === itemName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this)\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(NavLink, {\n        to: route,\n        className: classes.sidenav_navlink,\n        children: /*#__PURE__*/_jsxDEV(SidenavItem, {\n          name: name,\n          active: key === itemName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this)\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(SidenavList, {\n      children: returnValue\n    }, key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 14\n    }, this);\n  }); // Render all the routes from the routes.js (All the visible items on the Sidenav)\n\n\n  const renderRoutes = routes.map(_ref4 => {\n    let {\n      type,\n      name,\n      icon,\n      title,\n      collapse,\n      noCollapse,\n      key,\n      route\n    } = _ref4;\n    let returnValue;\n\n    if (type === \"collapse\") {\n      returnValue = route ? /*#__PURE__*/_jsxDEV(Link, {\n        href: route,\n        target: \"_blank\",\n        rel: \"noreferrer\",\n        className: classes.sidenav_navlink,\n        children: /*#__PURE__*/_jsxDEV(SidenavCollapse, {\n          name: name,\n          icon: icon,\n          active: key === collapseName,\n          noCollapse: noCollapse\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this)\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(SidenavCollapse, {\n        name: name,\n        icon: icon,\n        active: key === collapseName,\n        open: openCollapse === name,\n        onClick: () => openCollapse === name ? setOpenCollapse(false) : setOpenCollapse(name),\n        children: collapse ? renderCollapse(collapse) : null\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }, this);\n    } else if (type === \"title\") {\n      returnValue = /*#__PURE__*/_jsxDEV(SuiTypography, {\n        variant: \"caption\",\n        fontWeight: \"bold\",\n        textTransform: \"uppercase\",\n        customClass: classes.sidenav_title,\n        children: title\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }, this);\n    } else if (type === \"divider\") {\n      returnValue = /*#__PURE__*/_jsxDEV(Divider, {}, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 23\n      }, this);\n    }\n\n    return returnValue;\n  });\n  return /*#__PURE__*/_jsxDEV(Drawer, { ...rest,\n    variant: \"permanent\",\n    classes: {\n      paper: clsx(classes.sidenav, {\n        [classes.sidenav_open]: !miniSidenav,\n        [classes.sidenav_close]: miniSidenav\n      })\n    },\n    children: [/*#__PURE__*/_jsxDEV(SuiBox, {\n      customClass: classes.sidenav_header,\n      children: [/*#__PURE__*/_jsxDEV(SuiBox, {\n        display: {\n          xs: \"block\",\n          xl: \"none\"\n        },\n        position: \"absolute\",\n        top: 0,\n        right: 0,\n        p: 1.625,\n        customClass: \"cursor-pointer\",\n        onClick: closeSizenav,\n        children: /*#__PURE__*/_jsxDEV(SuiTypography, {\n          variant: \"h6\",\n          textColor: \"secondary\",\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            className: \" font-bold\",\n            children: \"close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n        to: \"/\",\n        children: /*#__PURE__*/_jsxDEV(SuiBox, {\n          customClass: classes.sidenav_logoLabel,\n          children: \"Fundexpert Fintech\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: renderRoutes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SuiBox, {\n      customClass: classes.sidenav_footer,\n      children: /*#__PURE__*/_jsxDEV(SidenavCard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 5\n  }, this);\n} // Typechecking props for the Sidenav\n\n\n_s(Sidenav, \"TWjR/0vClpgSG0T+LZjPML/Y1bc=\", false, function () {\n  return [useSoftUIController, useLocation];\n});\n\n_c = Sidenav;\nSidenav.propTypes = {\n  routes: PropTypes.arrayOf(PropTypes.object).isRequired\n};\nexport default Sidenav;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidenav\");","map":{"version":3,"sources":["C:/Fund/soft-ui-dashboard-pro-react-v2.0.0/admin/src/examples/Sidenav/index.js"],"names":["useEffect","useState","useLocation","NavLink","PropTypes","clsx","Drawer","List","Divider","Link","Icon","SuiBox","SuiTypography","SidenavCollapse","SidenavList","SidenavItem","SidenavCard","styles","useSoftUIController","Sidenav","routes","rest","openCollapse","setOpenCollapse","openNestedCollapse","setOpenNestedCollapse","controller","dispatch","miniSidenav","transparentSidenav","classes","location","pathname","collapseName","split","slice","itemName","closeSizenav","type","value","handleMiniSidenav","window","innerWidth","addEventListener","removeEventListener","renderNestedCollapse","collapse","template","map","name","route","key","href","sidenav_navlink","renderCollapse","collapses","returnValue","renderRoutes","icon","title","noCollapse","sidenav_title","paper","sidenav","sidenav_open","sidenav_close","sidenav_header","xs","xl","sidenav_logoLabel","sidenav_footer","propTypes","arrayOf","object","isRequired"],"mappings":"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","sourcesContent":["/**\n=========================================================\n* Soft UI Dashboard PRO React - v2.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/soft-ui-dashboard-pro-material-ui\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n\nimport { useEffect, useState } from \"react\";\n\n// react-router-dom components\nimport { useLocation, NavLink } from \"react-router-dom\";\n\n// prop-types is a library for typechecking of props.\nimport PropTypes from \"prop-types\";\n\n// clsx is a utility for constructing className strings conditionally\nimport clsx from \"clsx\";\n\n// @mui material components\nimport Drawer from \"@mui/material/Drawer\";\nimport List from \"@mui/material/List\";\nimport Divider from \"@mui/material/Divider\";\nimport Link from \"@mui/material/Link\";\nimport Icon from \"@mui/material/Icon\";\n\n// Soft UI Dashboard PRO React components\nimport SuiBox from \"components/SuiBox\";\nimport SuiTypography from \"components/SuiTypography\";\n\n// Soft UI Dashboard PRO React example components\nimport SidenavCollapse from \"examples/Sidenav/SidenavCollapse\";\nimport SidenavList from \"examples/Sidenav/SidenavList\";\nimport SidenavItem from \"examples/Sidenav/SidenavItem\";\nimport SidenavCard from \"examples/Sidenav/SidenavCard\";\n\n// Custom styles for the Sidenav\nimport styles from \"examples/Sidenav/styles/sidenav\";\n\n// Images\n// import SoftUILogo from \"assets/images/logo-ct.png\";\n\n// Soft UI Dashboard PRO React context\nimport { useSoftUIController } from \"context\";\n\nfunction Sidenav({ routes, ...rest }) {\n  const [openCollapse, setOpenCollapse] = useState(false);\n  const [openNestedCollapse, setOpenNestedCollapse] = useState(false);\n  const [controller, dispatch] = useSoftUIController();\n  const { miniSidenav, transparentSidenav } = controller;\n  const classes = styles({ miniSidenav, transparentSidenav });\n  const location = useLocation();\n  const { pathname } = location;\n  const collapseName = pathname.split(\"/\").slice(1)[0];\n  const itemName = pathname.split(\"/\").slice(1)[1];\n\n  const closeSizenav = () => dispatch({ type: \"MINI_SIDENAV\", value: true });\n\n  useEffect(() => {\n    // A function that sets the mini state of the sidenav.\n    function handleMiniSidenav() {\n      dispatch({\n        type: \"MINI_SIDENAV\",\n        value: window.innerWidth < 1200,\n      });\n    }\n\n    /** \n     The event listener that's calling the handleMiniSidenav function when resizing the window.\n    */\n    window.addEventListener(\"resize\", handleMiniSidenav);\n\n    // Call the handleMiniSidenav function to set the state with the initial value.\n    handleMiniSidenav();\n\n    // Remove event listener on cleanup\n    return () => window.removeEventListener(\"resize\", handleMiniSidenav);\n  }, [dispatch, location]);\n\n  // Render all the nested collapse items from the routes.js\n  const renderNestedCollapse = (collapse) => {\n    const template = collapse.map(({ name, route, key, href }) =>\n      href ? (\n        <Link\n          key={key}\n          href={href}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          className={classes.sidenav_navlink}\n        >\n          <SidenavItem name={name} nested />\n        </Link>\n      ) : (\n        <NavLink to={route} key={key} className={classes.sidenav_navlink}>\n          <SidenavItem name={name} active={route === pathname} nested />\n        </NavLink>\n      )\n    );\n\n    return template;\n  };\n\n  // Render the all the collpases from the routes.js\n  const renderCollapse = (collapses) =>\n    collapses.map(({ name, collapse, route, href, key }) => {\n      let returnValue;\n\n      if (collapse) {\n        returnValue = (\n          <SidenavItem\n            key={key}\n            name={name}\n            active={key === itemName}\n            open={openNestedCollapse === name}\n            onClick={() =>\n              openNestedCollapse === name\n                ? setOpenNestedCollapse(false)\n                : setOpenNestedCollapse(name)\n            }\n          >\n            {renderNestedCollapse(collapse)}\n          </SidenavItem>\n        );\n      } else {\n        returnValue = href ? (\n          <Link\n            href={href}\n            key={key}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            className={classes.sidenav_navlink}\n          >\n            <SidenavItem name={name} active={key === itemName} />\n          </Link>\n        ) : (\n          <NavLink to={route} key={key} className={classes.sidenav_navlink}>\n            <SidenavItem name={name} active={key === itemName} />\n          </NavLink>\n        );\n      }\n      return <SidenavList key={key}>{returnValue}</SidenavList>;\n    });\n\n  // Render all the routes from the routes.js (All the visible items on the Sidenav)\n  const renderRoutes = routes.map(\n    ({ type, name, icon, title, collapse, noCollapse, key, route }) => {\n      let returnValue;\n\n      if (type === \"collapse\") {\n        returnValue = route ? (\n          <Link\n            href={route}\n            key={key}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            className={classes.sidenav_navlink}\n          >\n            <SidenavCollapse\n              name={name}\n              icon={icon}\n              active={key === collapseName}\n              noCollapse={noCollapse}\n            />\n          </Link>\n        ) : (\n          <SidenavCollapse\n            key={key}\n            name={name}\n            icon={icon}\n            active={key === collapseName}\n            open={openCollapse === name}\n            onClick={() => (openCollapse === name ? setOpenCollapse(false) : setOpenCollapse(name))}\n          >\n            {collapse ? renderCollapse(collapse) : null}\n          </SidenavCollapse>\n        );\n      } else if (type === \"title\") {\n        returnValue = (\n          <SuiTypography\n            key={key}\n            variant=\"caption\"\n            fontWeight=\"bold\"\n            textTransform=\"uppercase\"\n            customClass={classes.sidenav_title}\n          >\n            {title}\n          </SuiTypography>\n        );\n      } else if (type === \"divider\") {\n        returnValue = <Divider key={key} />;\n      }\n\n      return returnValue;\n    }\n  );\n\n  return (\n    <Drawer\n      {...rest}\n      variant=\"permanent\"\n      classes={{\n        paper: clsx(classes.sidenav, {\n          [classes.sidenav_open]: !miniSidenav,\n          [classes.sidenav_close]: miniSidenav,\n        }),\n      }}\n    >\n      <SuiBox customClass={classes.sidenav_header}>\n        <SuiBox\n          display={{ xs: \"block\", xl: \"none\" }}\n          position=\"absolute\"\n          top={0}\n          right={0}\n          p={1.625}\n          customClass=\"cursor-pointer\"\n          onClick={closeSizenav}\n        >\n          <SuiTypography variant=\"h6\" textColor=\"secondary\">\n            <Icon className=\" font-bold\">close</Icon>\n          </SuiTypography>\n        </SuiBox>\n        <NavLink to=\"/\">\n          {/* <SuiBox\n            component=\"\"\n            src={SoftUILogo}\n            alt=\"\"\n            customClass={classes.sidenav_logo}\n          /> */}\n          <SuiBox customClass={classes.sidenav_logoLabel}>\n            {/* <SuiTypography component=\"\" variant=\"\" fontWeight=\"\"> */}\n            Fundexpert Fintech\n            {/* </SuiTypography> */}\n          </SuiBox>\n        </NavLink>\n      </SuiBox>\n      <Divider />\n      <List>{renderRoutes}</List>\n\n      <SuiBox customClass={classes.sidenav_footer}>\n        <SidenavCard />\n      </SuiBox>\n    </Drawer>\n  );\n}\n\n// Typechecking props for the Sidenav\nSidenav.propTypes = {\n  routes: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default Sidenav;\n"]},"metadata":{},"sourceType":"module"}