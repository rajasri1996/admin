{"ast":null,"code":"var _jsxFileName = \"C:\\\\Fund\\\\soft-ui-dashboard-pro-react-v2.0.0\\\\admin\\\\src\\\\examples\\\\Tables\\\\DataTable\\\\index.js\",\n    _s = $RefreshSig$();\n\n/**\n=========================================================\n* Soft UI Dashboard PRO React - v2.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/soft-ui-dashboard-pro-material-ui\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\nimport { useMemo, useEffect, useState } from \"react\"; // prop-types is a library for typechecking of props\n\nimport PropTypes from \"prop-types\"; // react-table components\n\nimport { useTable, usePagination, useGlobalFilter, useAsyncDebounce, useSortBy } from \"react-table\"; // @mui material components\n\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Icon from \"@mui/material/Icon\"; // Soft UI Dashboard PRO React components\n\nimport SuiBox from \"components/SuiBox\";\nimport SuiTypography from \"components/SuiTypography\";\nimport SuiSelect from \"components/SuiSelect\";\nimport SuiInput from \"components/SuiInput\";\nimport SuiPagination from \"components/SuiPagination\"; // Soft UI Dashboard PRO React example components\n\nimport DataTableHeadCell from \"examples/Tables/DataTable/DataTableHeadCell\";\nimport DataTableBodyCell from \"examples/Tables/DataTable/DataTableBodyCell\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DataTable(_ref) {\n  _s();\n\n  let {\n    entriesPerPage,\n    canSearch,\n    showTotalEntries,\n    table,\n    pagination,\n    isSorted,\n    noEndBorder\n  } = _ref;\n  const {\n    defaultValue,\n    entries\n  } = entriesPerPage;\n  const columns = useMemo(() => table.columns, [table]);\n  const data = useMemo(() => table.rows, [table]);\n  const tableInstance = useTable({\n    columns,\n    data,\n    initialState: {\n      pageIndex: 0\n    }\n  }, useGlobalFilter, useSortBy, usePagination);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    rows,\n    page,\n    pageOptions,\n    canPreviousPage,\n    canNextPage,\n    gotoPage,\n    nextPage,\n    previousPage,\n    setPageSize,\n    setGlobalFilter,\n    state: {\n      pageIndex,\n      pageSize,\n      globalFilter\n    }\n  } = tableInstance; // Set the default value for the entries per page when component mounts\n\n  useEffect(() => setPageSize(defaultValue || 10), [defaultValue]); // Set the entries per page value based on the select value\n\n  const setEntriesPerPage = _ref2 => {\n    let {\n      value\n    } = _ref2;\n    return setPageSize(value);\n  }; // Render the paginations\n\n\n  const renderPagination = pageOptions.map(option => /*#__PURE__*/_jsxDEV(SuiPagination, {\n    item: true,\n    onClick: () => gotoPage(Number(option)),\n    active: pageIndex === option,\n    children: option + 1\n  }, option, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this)); // Handler for the input to set the pagination index\n\n  const handleInputPagination = _ref3 => {\n    let {\n      target: {\n        value\n      }\n    } = _ref3;\n    return value > pageOptions.length || value < 0 ? gotoPage(0) : gotoPage(Number(value));\n  }; // Customized page options starting from 1\n\n\n  const customizedPageOptions = pageOptions.map(option => option + 1); // Setting value for the pagination input\n\n  const handleInputPaginationValue = _ref4 => {\n    let {\n      target: value\n    } = _ref4;\n    return gotoPage(Number(value.value - 1));\n  }; // Search input value state\n\n\n  const [search, setSearch] = useState(globalFilter); // Search input state handle\n\n  const onSearchChange = useAsyncDebounce(value => {\n    setGlobalFilter(value || undefined);\n  }, 100); // A function that sets the sorted value for the table\n\n  const setSortedValue = column => {\n    let sortedValue;\n\n    if (isSorted && column.isSorted) {\n      sortedValue = column.isSortedDesc ? \"desc\" : \"asce\";\n    } else if (isSorted) {\n      sortedValue = \"none\";\n    } else {\n      sortedValue = false;\n    }\n\n    return sortedValue;\n  }; // Setting the entries starting point\n\n\n  const entriesStart = pageIndex === 0 ? pageIndex + 1 : pageIndex * pageSize + 1; // Setting the entries ending point\n\n  let entriesEnd;\n\n  if (pageIndex === 0) {\n    entriesEnd = pageSize;\n  } else if (pageIndex === pageOptions.length - 1) {\n    entriesEnd = rows.length;\n  } else {\n    entriesEnd = pageSize * (pageIndex + 1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    className: \"shadow-none\",\n    children: [entriesPerPage || canSearch ? /*#__PURE__*/_jsxDEV(SuiBox, {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      p: 3,\n      children: [entriesPerPage && /*#__PURE__*/_jsxDEV(SuiBox, {\n        display: \"flex\",\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(SuiSelect, {\n          defaultValue: {\n            value: defaultValue,\n            label: defaultValue\n          },\n          options: entries.map(entry => ({\n            value: entry,\n            label: entry\n          })),\n          onChange: setEntriesPerPage,\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(SuiTypography, {\n          variant: \"caption\",\n          textColor: \"secondary\",\n          children: \"\\xA0\\xA0entries per page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }, this), canSearch && /*#__PURE__*/_jsxDEV(SuiBox, {\n        width: \"12rem\",\n        ml: \"auto\",\n        children: /*#__PURE__*/_jsxDEV(SuiInput, {\n          placeholder: \"Search...\",\n          value: search,\n          onChange: _ref5 => {\n            let {\n              currentTarget\n            } = _ref5;\n            setSearch(search);\n            onSearchChange(currentTarget.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(Table, { ...getTableProps(),\n      children: [/*#__PURE__*/_jsxDEV(SuiBox, {\n        component: \"thead\",\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(TableRow, { ...headerGroup.getHeaderGroupProps(),\n          children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(DataTableHeadCell, { ...column.getHeaderProps(isSorted && column.getSortByToggleProps()),\n            width: column.width ? column.width : \"auto\",\n            align: column.align ? column.align : \"left\",\n            sorted: setSortedValue(column),\n            children: column.render(\"Header\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, { ...getTableBodyProps(),\n        children: page.map((row, key) => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(TableRow, { ...row.getRowProps(),\n            children: row.cells.map(cell => /*#__PURE__*/_jsxDEV(DataTableBodyCell, {\n              noBorder: noEndBorder && rows.length - 1 === key,\n              align: cell.column.align ? cell.column.align : \"left\",\n              ...cell.getCellProps(),\n              children: cell.render(\"Cell\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SuiBox, {\n      display: \"flex\",\n      flexDirection: {\n        xs: \"column\",\n        sm: \"row\"\n      },\n      justifyContent: \"space-between\",\n      alignItems: {\n        xs: \"flex-start\",\n        sm: \"center\"\n      },\n      p: !showTotalEntries && pageOptions.length === 1 ? 0 : 3,\n      children: [showTotalEntries && /*#__PURE__*/_jsxDEV(SuiBox, {\n        mb: {\n          xs: 3,\n          sm: 0\n        },\n        children: /*#__PURE__*/_jsxDEV(SuiTypography, {\n          variant: \"button\",\n          textColor: \"secondary\",\n          fontWeight: \"regular\",\n          children: [\"Showing \", entriesStart, \" to \", entriesEnd, \" of \", rows.length, \" entries\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }, this), pageOptions.length > 1 && /*#__PURE__*/_jsxDEV(SuiPagination, {\n        variant: pagination.variant ? pagination.variant : \"gradient\",\n        color: pagination.color ? pagination.color : \"info\",\n        children: [canPreviousPage && /*#__PURE__*/_jsxDEV(SuiPagination, {\n          item: true,\n          onClick: () => previousPage(),\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            className: \" bold\",\n            children: \"chevron_left\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 15\n        }, this), renderPagination.length > 6 ? /*#__PURE__*/_jsxDEV(SuiBox, {\n          width: \"5rem\",\n          mx: 1,\n          children: /*#__PURE__*/_jsxDEV(SuiInput, {\n            inputProps: {\n              type: \"number\",\n              min: 1,\n              max: customizedPageOptions.length\n            },\n            value: customizedPageOptions[pageIndex],\n            onChange: (handleInputPagination, handleInputPaginationValue)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 15\n        }, this) : renderPagination, canNextPage && /*#__PURE__*/_jsxDEV(SuiPagination, {\n          item: true,\n          onClick: () => nextPage(),\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            className: \" font-bold\",\n            children: \"chevron_right\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n} // Setting default values for the props of DataTable\n\n\n_s(DataTable, \"IYbC+rVs4ijQpcmqpgERsPu+480=\", false, function () {\n  return [useTable, useAsyncDebounce];\n});\n\n_c = DataTable;\nDataTable.defaultProps = {\n  entriesPerPage: {\n    defaultValue: 10,\n    entries: [5, 10, 15, 20, 25]\n  },\n  canSearch: false,\n  showTotalEntries: true,\n  pagination: {\n    variant: \"gradient\",\n    color: \"info\"\n  },\n  isSorted: true,\n  noEndBorder: false\n}; // Typechecking props for the DataTable\n\nDataTable.propTypes = {\n  entriesPerPage: PropTypes.oneOfType([PropTypes.shape({\n    defaultValue: PropTypes.number,\n    entries: PropTypes.arrayOf(PropTypes.number)\n  }), PropTypes.bool]),\n  canSearch: PropTypes.bool,\n  showTotalEntries: PropTypes.bool,\n  table: PropTypes.objectOf(PropTypes.array).isRequired,\n  pagination: PropTypes.shape({\n    variant: PropTypes.oneOf([\"contained\", \"gradient\"]),\n    color: PropTypes.oneOf([\"primary\", \"secondary\", \"info\", \"success\", \"warning\", \"error\", \"dark\", \"light\"])\n  }),\n  isSorted: PropTypes.bool,\n  noEndBorder: PropTypes.bool\n};\nexport default DataTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataTable\");","map":{"version":3,"sources":["C:/Fund/soft-ui-dashboard-pro-react-v2.0.0/admin/src/examples/Tables/DataTable/index.js"],"names":["useMemo","useEffect","useState","PropTypes","useTable","usePagination","useGlobalFilter","useAsyncDebounce","useSortBy","Table","TableBody","TableContainer","TableRow","Icon","SuiBox","SuiTypography","SuiSelect","SuiInput","SuiPagination","DataTableHeadCell","DataTableBodyCell","DataTable","entriesPerPage","canSearch","showTotalEntries","table","pagination","isSorted","noEndBorder","defaultValue","entries","columns","data","rows","tableInstance","initialState","pageIndex","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","pageOptions","canPreviousPage","canNextPage","gotoPage","nextPage","previousPage","setPageSize","setGlobalFilter","state","pageSize","globalFilter","setEntriesPerPage","value","renderPagination","map","option","Number","handleInputPagination","target","length","customizedPageOptions","handleInputPaginationValue","search","setSearch","onSearchChange","undefined","setSortedValue","column","sortedValue","isSortedDesc","entriesStart","entriesEnd","label","entry","currentTarget","headerGroup","getHeaderGroupProps","headers","getHeaderProps","getSortByToggleProps","width","align","render","row","key","getRowProps","cells","cell","getCellProps","xs","sm","variant","color","type","min","max","defaultProps","propTypes","oneOfType","shape","number","arrayOf","bool","objectOf","array","isRequired","oneOf"],"mappings":"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","sourcesContent":["/**\n=========================================================\n* Soft UI Dashboard PRO React - v2.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/soft-ui-dashboard-pro-material-ui\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n\nimport { useMemo, useEffect, useState } from \"react\";\n\n// prop-types is a library for typechecking of props\nimport PropTypes from \"prop-types\";\n\n// react-table components\nimport { useTable, usePagination, useGlobalFilter, useAsyncDebounce, useSortBy } from \"react-table\";\n\n// @mui material components\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Icon from \"@mui/material/Icon\";\n\n// Soft UI Dashboard PRO React components\nimport SuiBox from \"components/SuiBox\";\nimport SuiTypography from \"components/SuiTypography\";\nimport SuiSelect from \"components/SuiSelect\";\nimport SuiInput from \"components/SuiInput\";\nimport SuiPagination from \"components/SuiPagination\";\n\n// Soft UI Dashboard PRO React example components\nimport DataTableHeadCell from \"examples/Tables/DataTable/DataTableHeadCell\";\nimport DataTableBodyCell from \"examples/Tables/DataTable/DataTableBodyCell\";\n\nfunction DataTable({\n  entriesPerPage,\n  canSearch,\n  showTotalEntries,\n  table,\n  pagination,\n  isSorted,\n  noEndBorder,\n}) {\n  const { defaultValue, entries } = entriesPerPage;\n  const columns = useMemo(() => table.columns, [table]);\n  const data = useMemo(() => table.rows, [table]);\n\n  const tableInstance = useTable(\n    { columns, data, initialState: { pageIndex: 0 } },\n    useGlobalFilter,\n    useSortBy,\n    usePagination\n  );\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    rows,\n    page,\n    pageOptions,\n    canPreviousPage,\n    canNextPage,\n    gotoPage,\n    nextPage,\n    previousPage,\n    setPageSize,\n    setGlobalFilter,\n    state: { pageIndex, pageSize, globalFilter },\n  } = tableInstance;\n\n  // Set the default value for the entries per page when component mounts\n  useEffect(() => setPageSize(defaultValue || 10), [defaultValue]);\n\n  // Set the entries per page value based on the select value\n  const setEntriesPerPage = ({ value }) => setPageSize(value);\n\n  // Render the paginations\n  const renderPagination = pageOptions.map((option) => (\n    <SuiPagination\n      item\n      key={option}\n      onClick={() => gotoPage(Number(option))}\n      active={pageIndex === option}\n    >\n      {option + 1}\n    </SuiPagination>\n  ));\n\n  // Handler for the input to set the pagination index\n  const handleInputPagination = ({ target: { value } }) =>\n    value > pageOptions.length || value < 0 ? gotoPage(0) : gotoPage(Number(value));\n\n  // Customized page options starting from 1\n  const customizedPageOptions = pageOptions.map((option) => option + 1);\n\n  // Setting value for the pagination input\n  const handleInputPaginationValue = ({ target: value }) => gotoPage(Number(value.value - 1));\n\n  // Search input value state\n  const [search, setSearch] = useState(globalFilter);\n\n  // Search input state handle\n  const onSearchChange = useAsyncDebounce((value) => {\n    setGlobalFilter(value || undefined);\n  }, 100);\n\n  // A function that sets the sorted value for the table\n  const setSortedValue = (column) => {\n    let sortedValue;\n\n    if (isSorted && column.isSorted) {\n      sortedValue = column.isSortedDesc ? \"desc\" : \"asce\";\n    } else if (isSorted) {\n      sortedValue = \"none\";\n    } else {\n      sortedValue = false;\n    }\n\n    return sortedValue;\n  };\n\n  // Setting the entries starting point\n  const entriesStart = pageIndex === 0 ? pageIndex + 1 : pageIndex * pageSize + 1;\n\n  // Setting the entries ending point\n  let entriesEnd;\n\n  if (pageIndex === 0) {\n    entriesEnd = pageSize;\n  } else if (pageIndex === pageOptions.length - 1) {\n    entriesEnd = rows.length;\n  } else {\n    entriesEnd = pageSize * (pageIndex + 1);\n  }\n\n  return (\n    <TableContainer className=\"shadow-none\">\n      {entriesPerPage || canSearch ? (\n        <SuiBox display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" p={3}>\n          {entriesPerPage && (\n            <SuiBox display=\"flex\" alignItems=\"center\">\n              <SuiSelect\n                defaultValue={{ value: defaultValue, label: defaultValue }}\n                options={entries.map((entry) => ({ value: entry, label: entry }))}\n                onChange={setEntriesPerPage}\n                size=\"small\"\n              />\n              <SuiTypography variant=\"caption\" textColor=\"secondary\">\n                &nbsp;&nbsp;entries per page\n              </SuiTypography>\n            </SuiBox>\n          )}\n          {canSearch && (\n            <SuiBox width=\"12rem\" ml=\"auto\">\n              <SuiInput\n                placeholder=\"Search...\"\n                value={search}\n                onChange={({ currentTarget }) => {\n                  setSearch(search);\n                  onSearchChange(currentTarget.value);\n                }}\n              />\n            </SuiBox>\n          )}\n        </SuiBox>\n      ) : null}\n      <Table {...getTableProps()}>\n        <SuiBox component=\"thead\">\n          {headerGroups.map((headerGroup) => (\n            <TableRow {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                <DataTableHeadCell\n                  {...column.getHeaderProps(isSorted && column.getSortByToggleProps())}\n                  width={column.width ? column.width : \"auto\"}\n                  align={column.align ? column.align : \"left\"}\n                  sorted={setSortedValue(column)}\n                >\n                  {column.render(\"Header\")}\n                </DataTableHeadCell>\n              ))}\n            </TableRow>\n          ))}\n        </SuiBox>\n        <TableBody {...getTableBodyProps()}>\n          {page.map((row, key) => {\n            prepareRow(row);\n            return (\n              <TableRow {...row.getRowProps()}>\n                {row.cells.map((cell) => (\n                  <DataTableBodyCell\n                    noBorder={noEndBorder && rows.length - 1 === key}\n                    align={cell.column.align ? cell.column.align : \"left\"}\n                    {...cell.getCellProps()}\n                  >\n                    {cell.render(\"Cell\")}\n                  </DataTableBodyCell>\n                ))}\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </Table>\n\n      <SuiBox\n        display=\"flex\"\n        flexDirection={{ xs: \"column\", sm: \"row\" }}\n        justifyContent=\"space-between\"\n        alignItems={{ xs: \"flex-start\", sm: \"center\" }}\n        p={!showTotalEntries && pageOptions.length === 1 ? 0 : 3}\n      >\n        {showTotalEntries && (\n          <SuiBox mb={{ xs: 3, sm: 0 }}>\n            <SuiTypography variant=\"button\" textColor=\"secondary\" fontWeight=\"regular\">\n              Showing {entriesStart} to {entriesEnd} of {rows.length} entries\n            </SuiTypography>\n          </SuiBox>\n        )}\n        {pageOptions.length > 1 && (\n          <SuiPagination\n            variant={pagination.variant ? pagination.variant : \"gradient\"}\n            color={pagination.color ? pagination.color : \"info\"}\n          >\n            {canPreviousPage && (\n              <SuiPagination item onClick={() => previousPage()}>\n                <Icon className=\" bold\">chevron_left</Icon>\n              </SuiPagination>\n            )}\n            {renderPagination.length > 6 ? (\n              <SuiBox width=\"5rem\" mx={1}>\n                <SuiInput\n                  inputProps={{ type: \"number\", min: 1, max: customizedPageOptions.length }}\n                  value={customizedPageOptions[pageIndex]}\n                  onChange={(handleInputPagination, handleInputPaginationValue)}\n                />\n              </SuiBox>\n            ) : (\n              renderPagination\n            )}\n            {canNextPage && (\n              <SuiPagination item onClick={() => nextPage()}>\n                <Icon className=\" font-bold\">chevron_right</Icon>\n              </SuiPagination>\n            )}\n          </SuiPagination>\n        )}\n      </SuiBox>\n    </TableContainer>\n  );\n}\n\n// Setting default values for the props of DataTable\nDataTable.defaultProps = {\n  entriesPerPage: { defaultValue: 10, entries: [5, 10, 15, 20, 25] },\n  canSearch: false,\n  showTotalEntries: true,\n  pagination: { variant: \"gradient\", color: \"info\" },\n  isSorted: true,\n  noEndBorder: false,\n};\n\n// Typechecking props for the DataTable\nDataTable.propTypes = {\n  entriesPerPage: PropTypes.oneOfType([\n    PropTypes.shape({\n      defaultValue: PropTypes.number,\n      entries: PropTypes.arrayOf(PropTypes.number),\n    }),\n    PropTypes.bool,\n  ]),\n  canSearch: PropTypes.bool,\n  showTotalEntries: PropTypes.bool,\n  table: PropTypes.objectOf(PropTypes.array).isRequired,\n  pagination: PropTypes.shape({\n    variant: PropTypes.oneOf([\"contained\", \"gradient\"]),\n    color: PropTypes.oneOf([\n      \"primary\",\n      \"secondary\",\n      \"info\",\n      \"success\",\n      \"warning\",\n      \"error\",\n      \"dark\",\n      \"light\",\n    ]),\n  }),\n  isSorted: PropTypes.bool,\n  noEndBorder: PropTypes.bool,\n};\n\nexport default DataTable;\n"]},"metadata":{},"sourceType":"module"}