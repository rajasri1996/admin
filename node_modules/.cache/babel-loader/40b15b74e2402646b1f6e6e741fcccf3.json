{"ast":null,"code":"var _jsxFileName = \"C:\\\\Fund\\\\soft\\\\admin\\\\src\\\\components\\\\SuiButton\\\\index.js\";\n\n/**\n=========================================================\n* Soft UI Dashboard PRO React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/soft-ui-dashboard-pro-material-ui\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\nimport { forwardRef } from \"react\"; // prop-types is a library for typechecking of props\n\nimport PropTypes from \"prop-types\"; // clsx is a utility for constructing className strings conditionally\n\nimport clsx from \"clsx\"; // @mui material components\n\nimport Button from \"@mui/material/Button\"; // Custom styles for SuiButton\n\nimport styles from \"components/SuiButton/styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SuiButton = /*#__PURE__*/forwardRef(_c = (_ref, ref) => {\n  let {\n    buttonColor,\n    variant,\n    size,\n    circular,\n    iconOnly,\n    children,\n    customClass,\n    ...rest\n  } = _ref;\n  const classes = styles({\n    buttonColor,\n    variant,\n    size,\n    iconOnly\n  });\n  return /*#__PURE__*/_jsxDEV(Button, { ...rest,\n    ref: ref,\n    color: \"primary\",\n    variant: variant === \"gradient\" ? \"contained\" : variant,\n    size: size,\n    className: clsx(classes[variant], customClass, {\n      [classes.circular]: circular,\n      [classes.iconOnly]: iconOnly\n    }),\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 7\n  }, this);\n}); // Setting default values for the props of SuiButton\n\n_c2 = SuiButton;\nSuiButton.defaultProps = {\n  size: \"medium\",\n  variant: \"contained\",\n  buttonColor: \"white\",\n  circular: false,\n  iconOnly: false,\n  customClass: \"\"\n}; // Typechecking props for the SuiButton\n\nSuiButton.propTypes = {\n  size: PropTypes.oneOf([\"small\", \"medium\", \"large\"]),\n  variant: PropTypes.oneOf([\"text\", \"contained\", \"outlined\", \"gradient\"]),\n  buttonColor: PropTypes.oneOf([\"white\", \"primary\", \"secondary\", \"info\", \"success\", \"warning\", \"error\", \"light\", \"dark\"]),\n  circular: PropTypes.bool,\n  iconOnly: PropTypes.bool,\n  children: PropTypes.node.isRequired,\n  customClass: PropTypes.string\n};\nexport default SuiButton;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SuiButton$forwardRef\");\n$RefreshReg$(_c2, \"SuiButton\");","map":{"version":3,"sources":["C:/Fund/soft/admin/src/components/SuiButton/index.js"],"names":["forwardRef","PropTypes","clsx","Button","styles","SuiButton","ref","buttonColor","variant","size","circular","iconOnly","children","customClass","rest","classes","defaultProps","propTypes","oneOf","bool","node","isRequired","string"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,UAAT,QAA2B,OAA3B,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,OAAOC,IAAP,MAAiB,MAAjB,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,sBAAnB,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,6BAAnB;;AAEA,MAAMC,SAAS,gBAAGL,UAAU,MAC1B,OAAqFM,GAArF,KAA6F;AAAA,MAA5F;AAAEC,IAAAA,WAAF;AAAeC,IAAAA,OAAf;AAAwBC,IAAAA,IAAxB;AAA8BC,IAAAA,QAA9B;AAAwCC,IAAAA,QAAxC;AAAkDC,IAAAA,QAAlD;AAA4DC,IAAAA,WAA5D;AAAyE,OAAGC;AAA5E,GAA4F;AAC3F,QAAMC,OAAO,GAAGX,MAAM,CAAC;AAAEG,IAAAA,WAAF;AAAeC,IAAAA,OAAf;AAAwBC,IAAAA,IAAxB;AAA8BE,IAAAA;AAA9B,GAAD,CAAtB;AACA,sBACE,QAAC,MAAD,OACMG,IADN;AAEE,IAAA,GAAG,EAAER,GAFP;AAGE,IAAA,KAAK,EAAC,SAHR;AAIE,IAAA,OAAO,EAAEE,OAAO,KAAK,UAAZ,GAAyB,WAAzB,GAAuCA,OAJlD;AAKE,IAAA,IAAI,EAAEC,IALR;AAME,IAAA,SAAS,EAAEP,IAAI,CAACa,OAAO,CAACP,OAAD,CAAR,EAAmBK,WAAnB,EAAgC;AAC7C,OAACE,OAAO,CAACL,QAAT,GAAoBA,QADyB;AAE7C,OAACK,OAAO,CAACJ,QAAT,GAAoBA;AAFyB,KAAhC,CANjB;AAAA,cAWGC;AAXH;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAlByB,CAA5B,C,CAqBA;;MArBMP,S;AAsBNA,SAAS,CAACW,YAAV,GAAyB;AACvBP,EAAAA,IAAI,EAAE,QADiB;AAEvBD,EAAAA,OAAO,EAAE,WAFc;AAGvBD,EAAAA,WAAW,EAAE,OAHU;AAIvBG,EAAAA,QAAQ,EAAE,KAJa;AAKvBC,EAAAA,QAAQ,EAAE,KALa;AAMvBE,EAAAA,WAAW,EAAE;AANU,CAAzB,C,CASA;;AACAR,SAAS,CAACY,SAAV,GAAsB;AACpBR,EAAAA,IAAI,EAAER,SAAS,CAACiB,KAAV,CAAgB,CAAC,OAAD,EAAU,QAAV,EAAoB,OAApB,CAAhB,CADc;AAEpBV,EAAAA,OAAO,EAAEP,SAAS,CAACiB,KAAV,CAAgB,CAAC,MAAD,EAAS,WAAT,EAAsB,UAAtB,EAAkC,UAAlC,CAAhB,CAFW;AAGpBX,EAAAA,WAAW,EAAEN,SAAS,CAACiB,KAAV,CAAgB,CAC3B,OAD2B,EAE3B,SAF2B,EAG3B,WAH2B,EAI3B,MAJ2B,EAK3B,SAL2B,EAM3B,SAN2B,EAO3B,OAP2B,EAQ3B,OAR2B,EAS3B,MAT2B,CAAhB,CAHO;AAcpBR,EAAAA,QAAQ,EAAET,SAAS,CAACkB,IAdA;AAepBR,EAAAA,QAAQ,EAAEV,SAAS,CAACkB,IAfA;AAgBpBP,EAAAA,QAAQ,EAAEX,SAAS,CAACmB,IAAV,CAAeC,UAhBL;AAiBpBR,EAAAA,WAAW,EAAEZ,SAAS,CAACqB;AAjBH,CAAtB;AAoBA,eAAejB,SAAf","sourcesContent":["/**\n=========================================================\n* Soft UI Dashboard PRO React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/soft-ui-dashboard-pro-material-ui\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n\nimport { forwardRef } from \"react\";\n\n// prop-types is a library for typechecking of props\nimport PropTypes from \"prop-types\";\n\n// clsx is a utility for constructing className strings conditionally\nimport clsx from \"clsx\";\n\n// @mui material components\nimport Button from \"@mui/material/Button\";\n\n// Custom styles for SuiButton\nimport styles from \"components/SuiButton/styles\";\n\nconst SuiButton = forwardRef(\n  ({ buttonColor, variant, size, circular, iconOnly, children, customClass, ...rest }, ref) => {\n    const classes = styles({ buttonColor, variant, size, iconOnly });\n    return (\n      <Button\n        {...rest}\n        ref={ref}\n        color=\"primary\"\n        variant={variant === \"gradient\" ? \"contained\" : variant}\n        size={size}\n        className={clsx(classes[variant], customClass, {\n          [classes.circular]: circular,\n          [classes.iconOnly]: iconOnly,\n        })}\n      >\n        {children}\n      </Button>\n    );\n  }\n);\n\n// Setting default values for the props of SuiButton\nSuiButton.defaultProps = {\n  size: \"medium\",\n  variant: \"contained\",\n  buttonColor: \"white\",\n  circular: false,\n  iconOnly: false,\n  customClass: \"\",\n};\n\n// Typechecking props for the SuiButton\nSuiButton.propTypes = {\n  size: PropTypes.oneOf([\"small\", \"medium\", \"large\"]),\n  variant: PropTypes.oneOf([\"text\", \"contained\", \"outlined\", \"gradient\"]),\n  buttonColor: PropTypes.oneOf([\n    \"white\",\n    \"primary\",\n    \"secondary\",\n    \"info\",\n    \"success\",\n    \"warning\",\n    \"error\",\n    \"light\",\n    \"dark\",\n  ]),\n  circular: PropTypes.bool,\n  iconOnly: PropTypes.bool,\n  children: PropTypes.node.isRequired,\n  customClass: PropTypes.string,\n};\n\nexport default SuiButton;\n"]},"metadata":{},"sourceType":"module"}