{"ast":null,"code":"var _jsxFileName = \"C:\\\\Fund\\\\soft\\\\admin\\\\src\\\\examples\\\\Cards\\\\StatisticsCards\\\\DefaultStatisticsCard\\\\index.js\";\n\n/**\n=========================================================\n* Soft UI Dashboard PRO React - v2.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/soft-ui-dashboard-pro-material-ui\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n// prop-types is a library for typechecking of props\nimport PropTypes from \"prop-types\"; // @mui material components\n\nimport Card from \"@mui/material/Card\";\nimport Grid from \"@mui/material/Grid\"; // Soft UI Dashboard PRO React components\n\nimport SuiBox from \"components/SuiBox\";\nimport SuiTypography from \"components/SuiTypography\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DefaultStatisticsCard(_ref) {\n  let {\n    title,\n    count,\n    percentage,\n    dropdown\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(SuiBox, {\n      p: 2,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 7,\n          children: [/*#__PURE__*/_jsxDEV(SuiBox, {\n            mb: 0.5,\n            lineHeight: 1,\n            children: /*#__PURE__*/_jsxDEV(SuiTypography, {\n              variant: \"button\",\n              fontWeight: \"medium\",\n              textColor: \"text\",\n              textTransform: \"capitalize\",\n              children: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SuiBox, {\n            lineHeight: 1,\n            children: [/*#__PURE__*/_jsxDEV(SuiTypography, {\n              variant: \"h5\",\n              fontWeight: \"bold\",\n              children: count\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(SuiTypography, {\n              variant: \"button\",\n              fontWeight: \"bold\",\n              textColor: percentage.color,\n              children: [percentage.value, \"\\xA0\", /*#__PURE__*/_jsxDEV(SuiTypography, {\n                variant: \"button\",\n                fontWeight: \"regular\",\n                textColor: \"secondary\",\n                children: percentage.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 5,\n          children: dropdown && /*#__PURE__*/_jsxDEV(SuiBox, {\n            width: \"100%\",\n            textAlign: \"right\",\n            lineHeight: 1,\n            children: [/*#__PURE__*/_jsxDEV(SuiTypography, {\n              variant: \"caption\",\n              textColor: \"secondary\",\n              customClass: \"cursor-pointer\",\n              onClick: dropdown.action,\n              children: dropdown.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this), dropdown.menu]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n} // Setting default values for the props of DefaultStatisticsCard\n\n\n_c = DefaultStatisticsCard;\nDefaultStatisticsCard.defaultProps = {\n  percentage: {\n    color: \"success\",\n    value: \"\",\n    label: \"\"\n  },\n  dropdown: false\n}; // Typechecking props for the DefaultStatisticsCard\n\nDefaultStatisticsCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  count: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  percentage: PropTypes.shape({\n    color: PropTypes.oneOf([\"primary\", \"secondary\", \"info\", \"success\", \"warning\", \"error\", \"dark\", \"white\"]),\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    label: PropTypes.string\n  }),\n  dropdown: PropTypes.oneOfType([PropTypes.bool, PropTypes.shape({\n    action: PropTypes.func,\n    menu: PropTypes.node,\n    value: PropTypes.string\n  })])\n};\nexport default DefaultStatisticsCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"DefaultStatisticsCard\");","map":{"version":3,"sources":["C:/Fund/soft/admin/src/examples/Cards/StatisticsCards/DefaultStatisticsCard/index.js"],"names":["PropTypes","Card","Grid","SuiBox","SuiTypography","DefaultStatisticsCard","title","count","percentage","dropdown","color","value","label","action","menu","defaultProps","propTypes","string","isRequired","oneOfType","number","shape","oneOf","bool","func","node"],"mappings":"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","sourcesContent":["/**\n=========================================================\n* Soft UI Dashboard PRO React - v2.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/soft-ui-dashboard-pro-material-ui\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n\n// prop-types is a library for typechecking of props\nimport PropTypes from \"prop-types\";\n\n// @mui material components\nimport Card from \"@mui/material/Card\";\nimport Grid from \"@mui/material/Grid\";\n\n// Soft UI Dashboard PRO React components\nimport SuiBox from \"components/SuiBox\";\nimport SuiTypography from \"components/SuiTypography\";\n\nfunction DefaultStatisticsCard({ title, count, percentage, dropdown }) {\n  return (\n    <Card>\n      <SuiBox p={2}>\n        <Grid container>\n          <Grid item xs={7}>\n            <SuiBox mb={0.5} lineHeight={1}>\n              <SuiTypography\n                variant=\"button\"\n                fontWeight=\"medium\"\n                textColor=\"text\"\n                textTransform=\"capitalize\"\n              >\n                {title}\n              </SuiTypography>\n            </SuiBox>\n            <SuiBox lineHeight={1}>\n              <SuiTypography variant=\"h5\" fontWeight=\"bold\">\n                {count}\n              </SuiTypography>\n              <SuiTypography variant=\"button\" fontWeight=\"bold\" textColor={percentage.color}>\n                {percentage.value}&nbsp;\n                <SuiTypography variant=\"button\" fontWeight=\"regular\" textColor=\"secondary\">\n                  {percentage.label}\n                </SuiTypography>\n              </SuiTypography>\n            </SuiBox>\n          </Grid>\n          <Grid item xs={5}>\n            {dropdown && (\n              <SuiBox width=\"100%\" textAlign=\"right\" lineHeight={1}>\n                <SuiTypography\n                  variant=\"caption\"\n                  textColor=\"secondary\"\n                  customClass=\"cursor-pointer\"\n                  onClick={dropdown.action}\n                >\n                  {dropdown.value}\n                </SuiTypography>\n                {dropdown.menu}\n              </SuiBox>\n            )}\n          </Grid>\n        </Grid>\n      </SuiBox>\n    </Card>\n  );\n}\n\n// Setting default values for the props of DefaultStatisticsCard\nDefaultStatisticsCard.defaultProps = {\n  percentage: {\n    color: \"success\",\n    value: \"\",\n    label: \"\",\n  },\n  dropdown: false,\n};\n\n// Typechecking props for the DefaultStatisticsCard\nDefaultStatisticsCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  count: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  percentage: PropTypes.shape({\n    color: PropTypes.oneOf([\n      \"primary\",\n      \"secondary\",\n      \"info\",\n      \"success\",\n      \"warning\",\n      \"error\",\n      \"dark\",\n      \"white\",\n    ]),\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    label: PropTypes.string,\n  }),\n  dropdown: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.shape({\n      action: PropTypes.func,\n      menu: PropTypes.node,\n      value: PropTypes.string,\n    }),\n  ]),\n};\n\nexport default DefaultStatisticsCard;\n"]},"metadata":{},"sourceType":"module"}