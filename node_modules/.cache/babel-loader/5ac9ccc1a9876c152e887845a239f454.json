{"ast":null,"code":"var _jsxFileName = \"C:\\\\Fund\\\\soft-ui-dashboard-pro-react-v2.0.0\\\\admin\\\\src\\\\layouts\\\\pages\\\\sweet-alerts\\\\components\\\\GithubAvatarRequest\\\\index.js\";\n\n/**\n=========================================================\n* Soft UI Dashboard PRO React - v2.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/soft-ui-dashboard-pro-material-ui\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n\n/* eslint-disable no-dupe-keys */\n// sweetalert2 components\nimport Swal from \"sweetalert2\"; // Sweet Alerts page components\n\nimport Template from \"layouts/pages/sweet-alerts/components/Template\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction GithubAvatarRequest() {\n  const showAlert = () => {\n    const newSwal = Swal.mixin({\n      customClass: {\n        confirmButton: \"button button-success\",\n        cancelButton: \"button button-error\"\n      }\n    });\n    newSwal.fire({\n      title: \"Submit your Github username\",\n      input: \"text\",\n      inputAttributes: {\n        autocapitalize: \"off\"\n      },\n      showCancelButton: true,\n      confirmButtonText: \"Look up\",\n      showLoaderOnConfirm: true,\n      preConfirm: login => fetch(`//api.github.com/users/${login}`).then(response => {\n        if (!response.ok) {\n          throw new Error(response.statusText);\n        }\n\n        return response.json();\n      }).catch(error => {\n        Swal.showValidationMessage(`Request failed: ${error}`);\n      }),\n      title: \"Submit your Github username\",\n      input: \"text\",\n      inputAttributes: {\n        autocapitalize: \"off\"\n      },\n      showCancelButton: true,\n      confirmButtonText: \"Look up\",\n      showLoaderOnConfirm: true,\n      preConfirm: login => fetch(`//api.github.com/users/${login}`).then(response => {\n        if (!response.ok) {\n          throw new Error(response.statusText);\n        }\n\n        return response.json();\n      }).catch(error => {\n        Swal.showValidationMessage(`Request failed: ${error}`);\n      }),\n      allowOutsideClick: () => !Swal.isLoading()\n    }).then(result => {\n      if (result.isConfirmed) {\n        Swal.fire({\n          title: `${result.value.login}'s avatar`,\n          imageUrl: result.value.avatar_url\n        });\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Template, {\n    title: \"A success message\",\n    action: showAlert\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 10\n  }, this);\n}\n\n_c = GithubAvatarRequest;\nexport default GithubAvatarRequest;\n\nvar _c;\n\n$RefreshReg$(_c, \"GithubAvatarRequest\");","map":{"version":3,"sources":["C:/Fund/soft-ui-dashboard-pro-react-v2.0.0/admin/src/layouts/pages/sweet-alerts/components/GithubAvatarRequest/index.js"],"names":["Swal","Template","GithubAvatarRequest","showAlert","newSwal","mixin","customClass","confirmButton","cancelButton","fire","title","input","inputAttributes","autocapitalize","showCancelButton","confirmButtonText","showLoaderOnConfirm","preConfirm","login","fetch","then","response","ok","Error","statusText","json","catch","error","showValidationMessage","allowOutsideClick","isLoading","result","isConfirmed","value","imageUrl","avatar_url"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAOA,IAAP,MAAiB,aAAjB,C,CAEA;;AACA,OAAOC,QAAP,MAAqB,gDAArB;;;AAEA,SAASC,mBAAT,GAA+B;AAC7B,QAAMC,SAAS,GAAG,MAAM;AACtB,UAAMC,OAAO,GAAGJ,IAAI,CAACK,KAAL,CAAW;AACzBC,MAAAA,WAAW,EAAE;AACXC,QAAAA,aAAa,EAAE,uBADJ;AAEXC,QAAAA,YAAY,EAAE;AAFH;AADY,KAAX,CAAhB;AAMAJ,IAAAA,OAAO,CACJK,IADH,CACQ;AACJC,MAAAA,KAAK,EAAE,6BADH;AAEJC,MAAAA,KAAK,EAAE,MAFH;AAGJC,MAAAA,eAAe,EAAE;AACfC,QAAAA,cAAc,EAAE;AADD,OAHb;AAMJC,MAAAA,gBAAgB,EAAE,IANd;AAOJC,MAAAA,iBAAiB,EAAE,SAPf;AAQJC,MAAAA,mBAAmB,EAAE,IARjB;AASJC,MAAAA,UAAU,EAAGC,KAAD,IACVC,KAAK,CAAE,0BAAyBD,KAAM,EAAjC,CAAL,CACGE,IADH,CACSC,QAAD,IAAc;AAClB,YAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;AAChB,gBAAM,IAAIC,KAAJ,CAAUF,QAAQ,CAACG,UAAnB,CAAN;AACD;;AACD,eAAOH,QAAQ,CAACI,IAAT,EAAP;AACD,OANH,EAOGC,KAPH,CAOUC,KAAD,IAAW;AAChB3B,QAAAA,IAAI,CAAC4B,qBAAL,CAA4B,mBAAkBD,KAAM,EAApD;AACD,OATH,CAVE;AAoBJjB,MAAAA,KAAK,EAAE,6BApBH;AAqBJC,MAAAA,KAAK,EAAE,MArBH;AAsBJC,MAAAA,eAAe,EAAE;AACfC,QAAAA,cAAc,EAAE;AADD,OAtBb;AAyBJC,MAAAA,gBAAgB,EAAE,IAzBd;AA0BJC,MAAAA,iBAAiB,EAAE,SA1Bf;AA2BJC,MAAAA,mBAAmB,EAAE,IA3BjB;AA4BJC,MAAAA,UAAU,EAAGC,KAAD,IACVC,KAAK,CAAE,0BAAyBD,KAAM,EAAjC,CAAL,CACGE,IADH,CACSC,QAAD,IAAc;AAClB,YAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;AAChB,gBAAM,IAAIC,KAAJ,CAAUF,QAAQ,CAACG,UAAnB,CAAN;AACD;;AACD,eAAOH,QAAQ,CAACI,IAAT,EAAP;AACD,OANH,EAOGC,KAPH,CAOUC,KAAD,IAAW;AAChB3B,QAAAA,IAAI,CAAC4B,qBAAL,CAA4B,mBAAkBD,KAAM,EAApD;AACD,OATH,CA7BE;AAuCJE,MAAAA,iBAAiB,EAAE,MAAM,CAAC7B,IAAI,CAAC8B,SAAL;AAvCtB,KADR,EA0CGV,IA1CH,CA0CSW,MAAD,IAAY;AAChB,UAAIA,MAAM,CAACC,WAAX,EAAwB;AACtBhC,QAAAA,IAAI,CAACS,IAAL,CAAU;AACRC,UAAAA,KAAK,EAAG,GAAEqB,MAAM,CAACE,KAAP,CAAaf,KAAM,WADrB;AAERgB,UAAAA,QAAQ,EAAEH,MAAM,CAACE,KAAP,CAAaE;AAFf,SAAV;AAID;AACF,KAjDH;AAkDD,GAzDD;;AA2DA,sBAAO,QAAC,QAAD;AAAU,IAAA,KAAK,EAAC,mBAAhB;AAAoC,IAAA,MAAM,EAAEhC;AAA5C;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;KA7DQD,mB;AA+DT,eAAeA,mBAAf","sourcesContent":["/**\n=========================================================\n* Soft UI Dashboard PRO React - v2.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/soft-ui-dashboard-pro-material-ui\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n\n/* eslint-disable no-dupe-keys */\n// sweetalert2 components\nimport Swal from \"sweetalert2\";\n\n// Sweet Alerts page components\nimport Template from \"layouts/pages/sweet-alerts/components/Template\";\n\nfunction GithubAvatarRequest() {\n  const showAlert = () => {\n    const newSwal = Swal.mixin({\n      customClass: {\n        confirmButton: \"button button-success\",\n        cancelButton: \"button button-error\",\n      },\n    });\n    newSwal\n      .fire({\n        title: \"Submit your Github username\",\n        input: \"text\",\n        inputAttributes: {\n          autocapitalize: \"off\",\n        },\n        showCancelButton: true,\n        confirmButtonText: \"Look up\",\n        showLoaderOnConfirm: true,\n        preConfirm: (login) =>\n          fetch(`//api.github.com/users/${login}`)\n            .then((response) => {\n              if (!response.ok) {\n                throw new Error(response.statusText);\n              }\n              return response.json();\n            })\n            .catch((error) => {\n              Swal.showValidationMessage(`Request failed: ${error}`);\n            }),\n        title: \"Submit your Github username\",\n        input: \"text\",\n        inputAttributes: {\n          autocapitalize: \"off\",\n        },\n        showCancelButton: true,\n        confirmButtonText: \"Look up\",\n        showLoaderOnConfirm: true,\n        preConfirm: (login) =>\n          fetch(`//api.github.com/users/${login}`)\n            .then((response) => {\n              if (!response.ok) {\n                throw new Error(response.statusText);\n              }\n              return response.json();\n            })\n            .catch((error) => {\n              Swal.showValidationMessage(`Request failed: ${error}`);\n            }),\n        allowOutsideClick: () => !Swal.isLoading(),\n      })\n      .then((result) => {\n        if (result.isConfirmed) {\n          Swal.fire({\n            title: `${result.value.login}'s avatar`,\n            imageUrl: result.value.avatar_url,\n          });\n        }\n      });\n  };\n\n  return <Template title=\"A success message\" action={showAlert} />;\n}\n\nexport default GithubAvatarRequest;\n"]},"metadata":{},"sourceType":"module"}