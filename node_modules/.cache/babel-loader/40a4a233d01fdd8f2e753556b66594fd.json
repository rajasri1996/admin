{"ast":null,"code":"var _jsxFileName = \"C:\\\\Fund\\\\soft\\\\admin\\\\src\\\\examples\\\\Navbars\\\\DashboardNavbar\\\\index.js\",\n    _s = $RefreshSig$();\n\n// /**\n// =========================================================\n// * Soft UI Dashboard PRO React - v2.0.0\n// =========================================================\n// * Product Page: https://www.creative-tim.com/product/soft-ui-dashboard-pro-material-ui\n// * Copyright 2021 Creative Tim (https://www.creative-tim.com)\n// Coded by www.creative-tim.com\n//  =========================================================\n// * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n// */\n// import { useState, useEffect } from \"react\";\n// // react-router components\n// import {  Link } from \"react-router-dom\";\n// // prop-types is a library for typechecking of props.\n// import PropTypes from \"prop-types\";\n// // @material-ui core components\n// import AppBar from \"@mui/material/AppBar\";\n// import Toolbar from \"@mui/material/Toolbar\";\n// import IconButton from \"@mui/material/IconButton\";\n// import Menu from \"@mui/material/Menu\";\n// import Icon from \"@mui/material/Icon\";\n// // Soft UI Dashboard PRO React components\n// import SuiBox from \"components/SuiBox\";\n// import SuiTypography from \"components/SuiTypography\";\n// import SuiInput from \"components/SuiInput\";\n// // Soft UI Dashboard PRO React example components\n// // import Breadcrumbs from \"examples/Breadcrumbs\";\n// import NotificationItem from \"examples/Items/NotificationItem\";\n// // Custom styles for DashboardNavbar\n// import styles from \"examples/Navbars/DashboardNavbar/styles\";\n// // Soft UI Dashboard PRO React context\n// import { useSoftUIController } from \"context\";\n// // Images\n// import team2 from \"assets/images/team-2.jpg\";\n// import logoSpotify from \"assets/images/small-logos/logo-spotify.svg\";\n// function DashboardNavbar({ absolute, light, isMini }) {\n//   const [navbarType, setNavbarType] = useState();\n//   const [controller, dispatch] = useSoftUIController();\n//   const { miniSidenav, transparentNavbar, fixedNavbar, openConfigurator } = controller;\n//   const [openMenu, setOpenMenu] = useState(false);\n//   const classes = styles({ transparentNavbar, absolute, light, isMini });\n//   // const route = useLocation().pathname.split(\"/\").slice(1);\n//   useEffect(() => {\n//     // Setting the navbar type\n//     if (fixedNavbar) {\n//       setNavbarType(\"sticky\");\n//     } else {\n//       setNavbarType(\"static\");\n//     }\n//     // A function that sets the transparent state of the navbar.\n//     function handleTransparentNavbar() {\n//       dispatch({\n//         type: \"TRANSPARENT_NAVBAR\",\n//         value: (fixedNavbar && window.scrollY === 0) || !fixedNavbar,\n//       });\n//     }\n//     /** \n//      The event listener that's calling the handleTransparentNavbar function when \n//      scrolling the window.\n//     */\n//     window.addEventListener(\"scroll\", handleTransparentNavbar);\n//     // Call the handleTransparentNavbar function to set the state with the initial value.\n//     handleTransparentNavbar();\n//     // Remove event listener on cleanup\n//     return () => window.removeEventListener(\"scroll\", handleTransparentNavbar);\n//   }, [dispatch, fixedNavbar]);\n//   const handleMiniSidenav = () => dispatch({ type: \"MINI_SIDENAV\", value: !miniSidenav });\n//   const handleConfiguratorOpen = () =>\n//     dispatch({ type: \"OPEN_CONFIGURATOR\", value: !openConfigurator });\n//   // const handleOpenMenu = (event) => setOpenMenu(event.currentTarget);\n//   const handleCloseMenu = () => setOpenMenu(false);\n//   // Render the notifications menu\n//   const renderMenu = () => (\n//     <Menu\n//       anchorEl={openMenu}\n//       anchorReference={null}\n//       anchorOrigin={{\n//         vertical: \"bottom\",\n//         horizontal: \"left\",\n//       }}\n//       open={Boolean(openMenu)}\n//       onClose={handleCloseMenu}\n//       sx={{ marginTop: \"1rem\" }}\n//     >\n//       <NotificationItem\n//         image={<img src={team2} alt=\"person\" />}\n//         title={[\"New message\", \"from Laur\"]}\n//         date=\"13 minutes ago\"\n//         onClick={handleCloseMenu}\n//       />\n//       <NotificationItem\n//         image={<img src={logoSpotify} alt=\"person\" />}\n//         title={[\"New album\", \"by Travis Scott\"]}\n//         date=\"1 day\"\n//         onClick={handleCloseMenu}\n//       />\n//       <NotificationItem\n//         color=\"secondary\"\n//         image={\n//           <Icon fontSize=\"small\" className=\"material-icon-round text-white\">\n//             payment\n//           </Icon>\n//         }\n//         title={[\"\", \"Payment successfully completed\"]}\n//         date=\"2 days\"\n//         onClick={handleCloseMenu}\n//       />\n//     </Menu>\n//   );\n//   return (\n//     <AppBar\n//       position={absolute ? \"absolute\" : navbarType}\n//       color=\"inherit\"\n//       className={classes.navbar}\n//       // style={{backgroundColor:\"rgb(249, 249, 249)\"}}\n//     >\n//       <Toolbar className={classes.navbar_container}  >\n//         {/* <SuiBox customClass={classes.navbar_row} color=\"inherit\" mb={{ xs: 1, md: 0 }}>\n//           <Breadcrumbs icon=\"home\" title={route[route.length - 1]} route={route} light={light} />\n//           <Icon\n//             className={classes.navbar_desktop_menu}\n//             fontSize=\"medium\"\n//             onClick={handleMiniSidenav}\n//           >\n//             {miniSidenav ? \"menu_open\" : \"menu\"}\n//           </Icon>\n//         </SuiBox> */}\n//         {isMini ? null : (\n//           <SuiBox customClass={classes.navbar_row}>\n//             <SuiBox pr={1} >\n//               <SuiInput\n//                 placeholder=\"Type here...\"\n//                 withIcon={{ icon: \"search\", direction: \"right\" ,  }}\n//                 customClass={classes.navbar_input}\n//               />\n//             </SuiBox>\n//             <SuiBox\n//               color={light ? \"white\" : \"inherit\"}\n//               customClass={classes.navbar_section_desktop}\n//             >\n//               <Link to=\"/authentication/sign-in/basic\">\n//                 <IconButton className={classes.navbar_icon_button} size=\"small\">\n//                   <Icon className={light ? \"text-white\" : \"text-dark\"}>account_circle</Icon>\n//                   <SuiTypography\n//                     variant=\"button\"\n//                     fontWeight=\"medium\"\n//                     textColor={light ? \"white\" : \"dark\"}\n//                   >\n//                     Sign in\n//                   </SuiTypography>\n//                 </IconButton>\n//               </Link>\n//               <IconButton\n//                 size=\"small\"\n//                 color=\"inherit\"\n//                 className={classes.navbar_mobile_menu}\n//                 onClick={handleMiniSidenav}\n//               >\n//                 <Icon className={light ? \"text-white\" : \"text-dark\"}>\n//                   {miniSidenav ? \"menu_open\" : \"menu\"}\n//                 </Icon>\n//               </IconButton>\n//               <IconButton\n//                 size=\"small\"\n//                 color=\"inherit\"\n//                 className={classes.navbar_icon_button}\n//                 onClick={handleConfiguratorOpen}\n//               >\n//                 {/* <Icon>settings</Icon> */}\n//               </IconButton>\n//               {/* <IconButton\n//                 size=\"small\"\n//                 color=\"inherit\"\n//                 className={classes.navbar_icon_button}\n//                 aria-controls=\"notification-menu\"\n//                 aria-haspopup=\"true\"\n//                 variant=\"contained\"\n//                 onClick={handleOpenMenu}\n//               >\n//                 <Icon className={light ? \"text-white\" : \"text-dark\"}     styles={{marginLeft:\"200px\"}}>notifications</Icon>\n//               </IconButton> */}\n//               {renderMenu()}\n//             </SuiBox>\n//           </SuiBox>\n//         )}\n//       </Toolbar>\n//     </AppBar>\n//   );\n// }\n// // Setting default values for the props of DashboardNavbar\n// DashboardNavbar.defaultProps = {\n//   absolute: false,\n//   light: false,\n//   isMini: false,\n// };\n// // Typechecking props for the DashboardNavbar\n// DashboardNavbar.propTypes = {\n//   absolute: PropTypes.bool,\n//   light: PropTypes.bool,\n//   isMini: PropTypes.bool,\n// };\n// export default DashboardNavbar;\n\n/**\n=========================================================\n* Soft UI Dashboard PRO React - v2.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/soft-ui-dashboard-pro-material-ui\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\nimport { useState, useEffect } from \"react\"; // react-router components\n\nimport { useLocation, Link } from \"react-router-dom\"; // prop-types is a library for typechecking of props.\n\nimport PropTypes from \"prop-types\"; // @material-ui core components\n\nimport AppBar from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Menu from \"@mui/material/Menu\";\nimport Icon from \"@mui/material/Icon\"; // Soft UI Dashboard PRO React components\n\nimport SuiBox from \"components/SuiBox\";\nimport SuiTypography from \"components/SuiTypography\";\nimport SuiInput from \"components/SuiInput\"; // Soft UI Dashboard PRO React example components\n\nimport Breadcrumbs from \"examples/Breadcrumbs\";\nimport NotificationItem from \"examples/Items/NotificationItem\"; // Custom styles for DashboardNavbar\n\nimport styles from \"examples/Navbars/DashboardNavbar/styles\"; // Soft UI Dashboard PRO React context\n\nimport { useSoftUIController } from \"context\"; // Images\n\nimport team2 from \"assets/images/team-2.jpg\";\nimport logoSpotify from \"assets/images/small-logos/logo-spotify.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DashboardNavbar(_ref) {\n  _s();\n\n  let {\n    absolute,\n    light,\n    isMini\n  } = _ref;\n  const [navbarType, setNavbarType] = useState();\n  const [controller, dispatch] = useSoftUIController();\n  const {\n    miniSidenav,\n    transparentNavbar,\n    fixedNavbar,\n    openConfigurator\n  } = controller;\n  const [openMenu, setOpenMenu] = useState(false);\n  const classes = styles({\n    transparentNavbar,\n    absolute,\n    light,\n    isMini\n  });\n  const route = useLocation().pathname.split(\"/\").slice(1);\n  useEffect(() => {\n    // Setting the navbar type\n    if (fixedNavbar) {\n      setNavbarType(\"sticky\");\n    } else {\n      setNavbarType(\"static\");\n    } // A function that sets the transparent state of the navbar.\n\n\n    function handleTransparentNavbar() {\n      dispatch({\n        type: \"TRANSPARENT_NAVBAR\",\n        value: fixedNavbar && window.scrollY === 0 || !fixedNavbar\n      });\n    }\n    /** \n     The event listener that's calling the handleTransparentNavbar function when \n     scrolling the window.\n    */\n\n\n    window.addEventListener(\"scroll\", handleTransparentNavbar); // Call the handleTransparentNavbar function to set the state with the initial value.\n\n    handleTransparentNavbar(); // Remove event listener on cleanup\n\n    return () => window.removeEventListener(\"scroll\", handleTransparentNavbar);\n  }, [dispatch, fixedNavbar]);\n\n  const handleMiniSidenav = () => dispatch({\n    type: \"MINI_SIDENAV\",\n    value: !miniSidenav\n  });\n\n  const handleConfiguratorOpen = () => dispatch({\n    type: \"OPEN_CONFIGURATOR\",\n    value: !openConfigurator\n  });\n\n  const handleOpenMenu = event => setOpenMenu(event.currentTarget);\n\n  const handleCloseMenu = () => setOpenMenu(false); // Render the notifications menu\n\n\n  const renderMenu = () => /*#__PURE__*/_jsxDEV(Menu, {\n    anchorEl: openMenu,\n    anchorReference: null,\n    anchorOrigin: {\n      vertical: \"bottom\",\n      horizontal: \"left\"\n    },\n    open: Boolean(openMenu),\n    onClose: handleCloseMenu,\n    sx: {\n      marginTop: \"1rem\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(NotificationItem, {\n      image: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: team2,\n        alt: \"person\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 16\n      }, this),\n      title: [\"New message\", \"from Laur\"],\n      date: \"13 minutes ago\",\n      onClick: handleCloseMenu\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NotificationItem, {\n      image: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: logoSpotify,\n        alt: \"person\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 16\n      }, this),\n      title: [\"New album\", \"by Travis Scott\"],\n      date: \"1 day\",\n      onClick: handleCloseMenu\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NotificationItem, {\n      color: \"secondary\",\n      image: /*#__PURE__*/_jsxDEV(Icon, {\n        fontSize: \"small\",\n        className: \"material-icon-round text-white\",\n        children: \"payment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 11\n      }, this),\n      title: [\"\", \"Payment successfully completed\"],\n      date: \"2 days\",\n      onClick: handleCloseMenu\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 324,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(AppBar, {\n    position: absolute ? \"absolute\" : navbarType,\n    color: \"inherit\",\n    className: classes.navbar,\n    children: /*#__PURE__*/_jsxDEV(Toolbar, {\n      className: classes.navbar_container,\n      children: [/*#__PURE__*/_jsxDEV(SuiBox, {\n        customClass: classes.navbar_row,\n        color: \"inherit\",\n        mb: {\n          xs: 1,\n          md: 0\n        },\n        children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n          icon: \"home\",\n          title: route[route.length - 1],\n          route: route,\n          light: light\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Icon, {\n          className: classes.navbar_desktop_menu,\n          fontSize: \"medium\",\n          onClick: handleMiniSidenav,\n          children: miniSidenav ? \"menu_open\" : \"menu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 9\n      }, this), isMini ? null : /*#__PURE__*/_jsxDEV(SuiBox, {\n        customClass: classes.navbar_row,\n        children: [/*#__PURE__*/_jsxDEV(SuiBox, {\n          pr: 1,\n          children: /*#__PURE__*/_jsxDEV(SuiInput, {\n            placeholder: \"Type here...\",\n            withIcon: {\n              icon: \"search\",\n              direction: \"left\"\n            },\n            customClass: classes.navbar_input\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(SuiBox, {\n          color: light ? \"white\" : \"inherit\",\n          customClass: classes.navbar_section_desktop,\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: \"/authentication/sign-in/basic\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              className: classes.navbar_icon_button,\n              size: \"small\",\n              children: [/*#__PURE__*/_jsxDEV(Icon, {\n                className: light ? \"text-white\" : \"text-dark\",\n                children: \"account_circle\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(SuiTypography, {\n                variant: \"button\",\n                fontWeight: \"medium\",\n                textColor: light ? \"white\" : \"dark\",\n                children: \"Sign in\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 394,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            size: \"small\",\n            color: \"inherit\",\n            className: classes.navbar_mobile_menu,\n            onClick: handleMiniSidenav,\n            children: /*#__PURE__*/_jsxDEV(Icon, {\n              className: light ? \"text-white\" : \"text-dark\",\n              children: miniSidenav ? \"menu_open\" : \"menu\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            size: \"small\",\n            color: \"inherit\",\n            className: classes.navbar_icon_button,\n            onClick: handleConfiguratorOpen,\n            children: /*#__PURE__*/_jsxDEV(Icon, {\n              children: \"settings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            size: \"small\",\n            color: \"inherit\",\n            className: classes.navbar_icon_button,\n            \"aria-controls\": \"notification-menu\",\n            \"aria-haspopup\": \"true\",\n            variant: \"contained\",\n            onClick: handleOpenMenu,\n            children: /*#__PURE__*/_jsxDEV(Icon, {\n              className: light ? \"text-white\" : \"text-dark\",\n              children: \"notifications\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 15\n          }, this), renderMenu()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 362,\n    columnNumber: 5\n  }, this);\n} // Setting default values for the props of DashboardNavbar\n\n\n_s(DashboardNavbar, \"T+lPVuE0xH5NGUnnjGjEVsWQUlY=\", false, function () {\n  return [useSoftUIController, useLocation];\n});\n\n_c = DashboardNavbar;\nDashboardNavbar.defaultProps = {\n  absolute: false,\n  light: false,\n  isMini: false\n}; // Typechecking props for the DashboardNavbar\n\nDashboardNavbar.propTypes = {\n  absolute: PropTypes.bool,\n  light: PropTypes.bool,\n  isMini: PropTypes.bool\n};\nexport default DashboardNavbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"DashboardNavbar\");","map":{"version":3,"sources":["C:/Fund/soft/admin/src/examples/Navbars/DashboardNavbar/index.js"],"names":["useState","useEffect","useLocation","Link","PropTypes","AppBar","Toolbar","IconButton","Menu","Icon","SuiBox","SuiTypography","SuiInput","Breadcrumbs","NotificationItem","styles","useSoftUIController","team2","DashboardNavbar","absolute","light","isMini","navbarType","setNavbarType","controller","dispatch","miniSidenav","transparentNavbar","fixedNavbar","openConfigurator","openMenu","setOpenMenu","classes","route","pathname","split","slice","handleTransparentNavbar","type","value","window","scrollY","addEventListener","removeEventListener","handleMiniSidenav","handleConfiguratorOpen","handleOpenMenu","event","currentTarget","handleCloseMenu","renderMenu","vertical","horizontal","Boolean","marginTop","logoSpotify","navbar","navbar_container","navbar_row","xs","md","length","navbar_desktop_menu","icon","direction","navbar_input","navbar_section_desktop","navbar_icon_button","navbar_mobile_menu","defaultProps","propTypes","bool"],"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","sourcesContent":["// /**\n// =========================================================\n// * Soft UI Dashboard PRO React - v2.0.0\n// =========================================================\n\n// * Product Page: https://www.creative-tim.com/product/soft-ui-dashboard-pro-material-ui\n// * Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\n// Coded by www.creative-tim.com\n\n//  =========================================================\n\n// * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n// */\n\n// import { useState, useEffect } from \"react\";\n\n// // react-router components\n// import {  Link } from \"react-router-dom\";\n\n// // prop-types is a library for typechecking of props.\n// import PropTypes from \"prop-types\";\n\n// // @material-ui core components\n// import AppBar from \"@mui/material/AppBar\";\n// import Toolbar from \"@mui/material/Toolbar\";\n// import IconButton from \"@mui/material/IconButton\";\n// import Menu from \"@mui/material/Menu\";\n// import Icon from \"@mui/material/Icon\";\n\n// // Soft UI Dashboard PRO React components\n// import SuiBox from \"components/SuiBox\";\n// import SuiTypography from \"components/SuiTypography\";\n// import SuiInput from \"components/SuiInput\";\n\n// // Soft UI Dashboard PRO React example components\n// // import Breadcrumbs from \"examples/Breadcrumbs\";\n// import NotificationItem from \"examples/Items/NotificationItem\";\n\n// // Custom styles for DashboardNavbar\n// import styles from \"examples/Navbars/DashboardNavbar/styles\";\n\n// // Soft UI Dashboard PRO React context\n// import { useSoftUIController } from \"context\";\n\n// // Images\n// import team2 from \"assets/images/team-2.jpg\";\n// import logoSpotify from \"assets/images/small-logos/logo-spotify.svg\";\n\n// function DashboardNavbar({ absolute, light, isMini }) {\n//   const [navbarType, setNavbarType] = useState();\n//   const [controller, dispatch] = useSoftUIController();\n//   const { miniSidenav, transparentNavbar, fixedNavbar, openConfigurator } = controller;\n//   const [openMenu, setOpenMenu] = useState(false);\n//   const classes = styles({ transparentNavbar, absolute, light, isMini });\n//   // const route = useLocation().pathname.split(\"/\").slice(1);\n\n//   useEffect(() => {\n//     // Setting the navbar type\n//     if (fixedNavbar) {\n//       setNavbarType(\"sticky\");\n//     } else {\n//       setNavbarType(\"static\");\n//     }\n\n//     // A function that sets the transparent state of the navbar.\n//     function handleTransparentNavbar() {\n//       dispatch({\n//         type: \"TRANSPARENT_NAVBAR\",\n//         value: (fixedNavbar && window.scrollY === 0) || !fixedNavbar,\n//       });\n//     }\n\n//     /** \n//      The event listener that's calling the handleTransparentNavbar function when \n//      scrolling the window.\n//     */\n//     window.addEventListener(\"scroll\", handleTransparentNavbar);\n\n//     // Call the handleTransparentNavbar function to set the state with the initial value.\n//     handleTransparentNavbar();\n\n//     // Remove event listener on cleanup\n//     return () => window.removeEventListener(\"scroll\", handleTransparentNavbar);\n//   }, [dispatch, fixedNavbar]);\n\n//   const handleMiniSidenav = () => dispatch({ type: \"MINI_SIDENAV\", value: !miniSidenav });\n//   const handleConfiguratorOpen = () =>\n//     dispatch({ type: \"OPEN_CONFIGURATOR\", value: !openConfigurator });\n//   // const handleOpenMenu = (event) => setOpenMenu(event.currentTarget);\n//   const handleCloseMenu = () => setOpenMenu(false);\n\n//   // Render the notifications menu\n//   const renderMenu = () => (\n//     <Menu\n//       anchorEl={openMenu}\n//       anchorReference={null}\n//       anchorOrigin={{\n//         vertical: \"bottom\",\n//         horizontal: \"left\",\n//       }}\n//       open={Boolean(openMenu)}\n//       onClose={handleCloseMenu}\n//       sx={{ marginTop: \"1rem\" }}\n//     >\n//       <NotificationItem\n//         image={<img src={team2} alt=\"person\" />}\n//         title={[\"New message\", \"from Laur\"]}\n//         date=\"13 minutes ago\"\n//         onClick={handleCloseMenu}\n//       />\n//       <NotificationItem\n//         image={<img src={logoSpotify} alt=\"person\" />}\n//         title={[\"New album\", \"by Travis Scott\"]}\n//         date=\"1 day\"\n//         onClick={handleCloseMenu}\n//       />\n//       <NotificationItem\n//         color=\"secondary\"\n//         image={\n//           <Icon fontSize=\"small\" className=\"material-icon-round text-white\">\n//             payment\n//           </Icon>\n//         }\n//         title={[\"\", \"Payment successfully completed\"]}\n//         date=\"2 days\"\n//         onClick={handleCloseMenu}\n//       />\n//     </Menu>\n//   );\n\n//   return (\n//     <AppBar\n//       position={absolute ? \"absolute\" : navbarType}\n//       color=\"inherit\"\n//       className={classes.navbar}\n//       // style={{backgroundColor:\"rgb(249, 249, 249)\"}}\n//     >\n//       <Toolbar className={classes.navbar_container}  >\n//         {/* <SuiBox customClass={classes.navbar_row} color=\"inherit\" mb={{ xs: 1, md: 0 }}>\n//           <Breadcrumbs icon=\"home\" title={route[route.length - 1]} route={route} light={light} />\n//           <Icon\n//             className={classes.navbar_desktop_menu}\n//             fontSize=\"medium\"\n//             onClick={handleMiniSidenav}\n//           >\n//             {miniSidenav ? \"menu_open\" : \"menu\"}\n//           </Icon>\n//         </SuiBox> */}\n//         {isMini ? null : (\n//           <SuiBox customClass={classes.navbar_row}>\n//             <SuiBox pr={1} >\n//               <SuiInput\n//                 placeholder=\"Type here...\"\n//                 withIcon={{ icon: \"search\", direction: \"right\" ,  }}\n//                 customClass={classes.navbar_input}\n//               />\n//             </SuiBox>\n//             <SuiBox\n//               color={light ? \"white\" : \"inherit\"}\n//               customClass={classes.navbar_section_desktop}\n//             >\n//               <Link to=\"/authentication/sign-in/basic\">\n//                 <IconButton className={classes.navbar_icon_button} size=\"small\">\n//                   <Icon className={light ? \"text-white\" : \"text-dark\"}>account_circle</Icon>\n//                   <SuiTypography\n//                     variant=\"button\"\n//                     fontWeight=\"medium\"\n//                     textColor={light ? \"white\" : \"dark\"}\n//                   >\n//                     Sign in\n//                   </SuiTypography>\n//                 </IconButton>\n//               </Link>\n//               <IconButton\n//                 size=\"small\"\n//                 color=\"inherit\"\n//                 className={classes.navbar_mobile_menu}\n//                 onClick={handleMiniSidenav}\n//               >\n//                 <Icon className={light ? \"text-white\" : \"text-dark\"}>\n//                   {miniSidenav ? \"menu_open\" : \"menu\"}\n//                 </Icon>\n//               </IconButton>\n//               <IconButton\n//                 size=\"small\"\n//                 color=\"inherit\"\n//                 className={classes.navbar_icon_button}\n//                 onClick={handleConfiguratorOpen}\n//               >\n//                 {/* <Icon>settings</Icon> */}\n//               </IconButton>\n//               {/* <IconButton\n//                 size=\"small\"\n//                 color=\"inherit\"\n//                 className={classes.navbar_icon_button}\n//                 aria-controls=\"notification-menu\"\n//                 aria-haspopup=\"true\"\n//                 variant=\"contained\"\n//                 onClick={handleOpenMenu}\n//               >\n//                 <Icon className={light ? \"text-white\" : \"text-dark\"}     styles={{marginLeft:\"200px\"}}>notifications</Icon>\n//               </IconButton> */}\n//               {renderMenu()}\n//             </SuiBox>\n//           </SuiBox>\n//         )}\n//       </Toolbar>\n//     </AppBar>\n//   );\n// }\n\n// // Setting default values for the props of DashboardNavbar\n// DashboardNavbar.defaultProps = {\n//   absolute: false,\n//   light: false,\n//   isMini: false,\n// };\n\n// // Typechecking props for the DashboardNavbar\n// DashboardNavbar.propTypes = {\n//   absolute: PropTypes.bool,\n//   light: PropTypes.bool,\n//   isMini: PropTypes.bool,\n// };\n\n// export default DashboardNavbar;\n\n\n/**\n=========================================================\n* Soft UI Dashboard PRO React - v2.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/soft-ui-dashboard-pro-material-ui\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n\nimport { useState, useEffect } from \"react\";\n\n// react-router components\nimport { useLocation, Link } from \"react-router-dom\";\n\n// prop-types is a library for typechecking of props.\nimport PropTypes from \"prop-types\";\n\n// @material-ui core components\nimport AppBar from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Menu from \"@mui/material/Menu\";\nimport Icon from \"@mui/material/Icon\";\n\n// Soft UI Dashboard PRO React components\nimport SuiBox from \"components/SuiBox\";\nimport SuiTypography from \"components/SuiTypography\";\nimport SuiInput from \"components/SuiInput\";\n\n// Soft UI Dashboard PRO React example components\nimport Breadcrumbs from \"examples/Breadcrumbs\";\nimport NotificationItem from \"examples/Items/NotificationItem\";\n\n// Custom styles for DashboardNavbar\nimport styles from \"examples/Navbars/DashboardNavbar/styles\";\n\n// Soft UI Dashboard PRO React context\nimport { useSoftUIController } from \"context\";\n\n// Images\nimport team2 from \"assets/images/team-2.jpg\";\nimport logoSpotify from \"assets/images/small-logos/logo-spotify.svg\";\n\nfunction DashboardNavbar({ absolute, light, isMini }) {\n  const [navbarType, setNavbarType] = useState();\n  const [controller, dispatch] = useSoftUIController();\n  const { miniSidenav, transparentNavbar, fixedNavbar, openConfigurator } = controller;\n  const [openMenu, setOpenMenu] = useState(false);\n  const classes = styles({ transparentNavbar, absolute, light, isMini });\n  const route = useLocation().pathname.split(\"/\").slice(1);\n\n  useEffect(() => {\n    // Setting the navbar type\n    if (fixedNavbar) {\n      setNavbarType(\"sticky\");\n    } else {\n      setNavbarType(\"static\");\n    }\n\n    // A function that sets the transparent state of the navbar.\n    function handleTransparentNavbar() {\n      dispatch({\n        type: \"TRANSPARENT_NAVBAR\",\n        value: (fixedNavbar && window.scrollY === 0) || !fixedNavbar,\n      });\n    }\n\n    /** \n     The event listener that's calling the handleTransparentNavbar function when \n     scrolling the window.\n    */\n    window.addEventListener(\"scroll\", handleTransparentNavbar);\n\n    // Call the handleTransparentNavbar function to set the state with the initial value.\n    handleTransparentNavbar();\n\n    // Remove event listener on cleanup\n    return () => window.removeEventListener(\"scroll\", handleTransparentNavbar);\n  }, [dispatch, fixedNavbar]);\n\n  const handleMiniSidenav = () => dispatch({ type: \"MINI_SIDENAV\", value: !miniSidenav });\n  const handleConfiguratorOpen = () =>\n    dispatch({ type: \"OPEN_CONFIGURATOR\", value: !openConfigurator });\n  const handleOpenMenu = (event) => setOpenMenu(event.currentTarget);\n  const handleCloseMenu = () => setOpenMenu(false);\n\n  // Render the notifications menu\n  const renderMenu = () => (\n    <Menu\n      anchorEl={openMenu}\n      anchorReference={null}\n      anchorOrigin={{\n        vertical: \"bottom\",\n        horizontal: \"left\",\n      }}\n      open={Boolean(openMenu)}\n      onClose={handleCloseMenu}\n      sx={{ marginTop: \"1rem\" }}\n    >\n      <NotificationItem\n        image={<img src={team2} alt=\"person\" />}\n        title={[\"New message\", \"from Laur\"]}\n        date=\"13 minutes ago\"\n        onClick={handleCloseMenu}\n      />\n      <NotificationItem\n        image={<img src={logoSpotify} alt=\"person\" />}\n        title={[\"New album\", \"by Travis Scott\"]}\n        date=\"1 day\"\n        onClick={handleCloseMenu}\n      />\n      <NotificationItem\n        color=\"secondary\"\n        image={\n          <Icon fontSize=\"small\" className=\"material-icon-round text-white\">\n            payment\n          </Icon>\n        }\n        title={[\"\", \"Payment successfully completed\"]}\n        date=\"2 days\"\n        onClick={handleCloseMenu}\n      />\n    </Menu>\n  );\n\n  return (\n    <AppBar\n      position={absolute ? \"absolute\" : navbarType}\n      color=\"inherit\"\n      className={classes.navbar}\n    >\n      <Toolbar className={classes.navbar_container}>\n        <SuiBox customClass={classes.navbar_row} color=\"inherit\" mb={{ xs: 1, md: 0 }}>\n          <Breadcrumbs icon=\"home\" title={route[route.length - 1]} route={route} light={light} />\n          <Icon\n            className={classes.navbar_desktop_menu}\n            fontSize=\"medium\"\n            onClick={handleMiniSidenav}\n          >\n            {miniSidenav ? \"menu_open\" : \"menu\"}\n          </Icon>\n        </SuiBox>\n        {isMini ? null : (\n          <SuiBox customClass={classes.navbar_row}>\n            <SuiBox pr={1}>\n              <SuiInput\n                placeholder=\"Type here...\"\n                withIcon={{ icon: \"search\", direction: \"left\" }}\n                customClass={classes.navbar_input}\n              />\n            </SuiBox>\n            <SuiBox\n              color={light ? \"white\" : \"inherit\"}\n              customClass={classes.navbar_section_desktop}\n            >\n              <Link to=\"/authentication/sign-in/basic\">\n                <IconButton className={classes.navbar_icon_button} size=\"small\">\n                  <Icon className={light ? \"text-white\" : \"text-dark\"}>account_circle</Icon>\n                  <SuiTypography\n                    variant=\"button\"\n                    fontWeight=\"medium\"\n                    textColor={light ? \"white\" : \"dark\"}\n                  >\n                    Sign in\n                  </SuiTypography>\n                </IconButton>\n              </Link>\n              <IconButton\n                size=\"small\"\n                color=\"inherit\"\n                className={classes.navbar_mobile_menu}\n                onClick={handleMiniSidenav}\n              >\n                <Icon className={light ? \"text-white\" : \"text-dark\"}>\n                  {miniSidenav ? \"menu_open\" : \"menu\"}\n                </Icon>\n              </IconButton>\n              <IconButton\n                size=\"small\"\n                color=\"inherit\"\n                className={classes.navbar_icon_button}\n                onClick={handleConfiguratorOpen}\n              >\n                <Icon>settings</Icon>\n              </IconButton>\n              <IconButton\n                size=\"small\"\n                color=\"inherit\"\n                className={classes.navbar_icon_button}\n                aria-controls=\"notification-menu\"\n                aria-haspopup=\"true\"\n                variant=\"contained\"\n                onClick={handleOpenMenu}\n              >\n                <Icon className={light ? \"text-white\" : \"text-dark\"}>notifications</Icon>\n              </IconButton>\n              {renderMenu()}\n            </SuiBox>\n          </SuiBox>\n        )}\n      </Toolbar>\n    </AppBar>\n  );\n}\n\n// Setting default values for the props of DashboardNavbar\nDashboardNavbar.defaultProps = {\n  absolute: false,\n  light: false,\n  isMini: false,\n};\n\n// Typechecking props for the DashboardNavbar\nDashboardNavbar.propTypes = {\n  absolute: PropTypes.bool,\n  light: PropTypes.bool,\n  isMini: PropTypes.bool,\n};\n\nexport default DashboardNavbar;\n"]},"metadata":{},"sourceType":"module"}