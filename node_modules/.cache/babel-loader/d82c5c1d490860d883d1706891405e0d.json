{"ast":null,"code":"var _jsxFileName = \"C:\\\\Fund\\\\soft-ui-dashboard-pro-react-v2.0.0\\\\admin\\\\src\\\\examples\\\\Charts\\\\BarCharts\\\\ReportsBarChart\\\\index.js\",\n    _s = $RefreshSig$();\n\n/**\n=========================================================\n* Soft UI Dashboard PRO React - v2.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/soft-ui-dashboard-pro-material-ui\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\nimport { useMemo } from \"react\"; // porp-types is a library for typechecking of props\n\nimport PropTypes from \"prop-types\"; // react-chartjs-2 components\n\nimport { Bar } from \"react-chartjs-2\"; // @mui material components\n\nimport Card from \"@mui/material/Card\";\nimport Grid from \"@mui/material/Grid\"; // Soft UI Dashboard PRO React components\n\nimport SuiBox from \"components/SuiBox\";\nimport SuiTypography from \"components/SuiTypography\"; // Soft UI Dashboard PRO React example components\n\nimport BarReportsChartItem from \"examples/Charts/BarCharts/ReportsBarChart/ReportsBarChartItem\"; // ReportsBarChart configurations\n\nimport configs from \"examples/Charts/BarCharts/ReportsBarChart/configs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ReportsBarChart(_ref) {\n  _s();\n\n  let {\n    color,\n    title,\n    description,\n    chart,\n    items\n  } = _ref;\n  const {\n    data,\n    options\n  } = configs(chart.labels, chart.datasets);\n  const renderItems = items.map(_ref2 => {\n    let {\n      icon,\n      label,\n      progress\n    } = _ref2;\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 6,\n      sm: 3,\n      children: /*#__PURE__*/_jsxDEV(BarReportsChartItem, {\n        color: color,\n        icon: {\n          color: icon.color,\n          component: icon.component\n        },\n        label: label,\n        progress: {\n          content: progress.content,\n          percentage: progress.percentage\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this)\n    }, label, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(SuiBox, {\n      padding: \"1rem\",\n      children: [useMemo(() => /*#__PURE__*/_jsxDEV(SuiBox, {\n        backgroundColor: color,\n        borderRadius: \"lg\",\n        py: 2,\n        pr: 0.5,\n        mb: 3,\n        height: \"12.5rem\",\n        backgroundGradient: true,\n        children: /*#__PURE__*/_jsxDEV(Bar, {\n          data: data,\n          options: options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), [chart]), /*#__PURE__*/_jsxDEV(SuiBox, {\n        px: 1,\n        children: [/*#__PURE__*/_jsxDEV(SuiBox, {\n          mb: 2,\n          children: [/*#__PURE__*/_jsxDEV(SuiTypography, {\n            variant: \"h6\",\n            textTransform: \"capitalize\",\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SuiTypography, {\n            variant: \"button\",\n            textColor: \"text\",\n            fontWeight: \"regular\",\n            children: description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SuiBox, {\n          py: 1,\n          px: 0.5,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: renderItems\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n} // Setting default values for the props of ReportsBarChart\n\n\n_s(ReportsBarChart, \"nwk+m61qLgjDVUp4IGV/072DDN4=\");\n\n_c = ReportsBarChart;\nReportsBarChart.defaultProps = {\n  color: \"dark\",\n  description: \"\",\n  items: []\n}; // Typechecking props for the ReportsBarChart\n\nReportsBarChart.propTypes = {\n  color: PropTypes.oneOf([\"primary\", \"secondary\", \"info\", \"success\", \"warning\", \"error\", \"dark\"]),\n  title: PropTypes.string.isRequired,\n  description: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  chart: PropTypes.objectOf(PropTypes.oneOfType([PropTypes.array, PropTypes.object])).isRequired,\n  items: PropTypes.arrayOf(PropTypes.object)\n};\nexport default ReportsBarChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReportsBarChart\");","map":{"version":3,"sources":["C:/Fund/soft-ui-dashboard-pro-react-v2.0.0/admin/src/examples/Charts/BarCharts/ReportsBarChart/index.js"],"names":["useMemo","PropTypes","Bar","Card","Grid","SuiBox","SuiTypography","BarReportsChartItem","configs","ReportsBarChart","color","title","description","chart","items","data","options","labels","datasets","renderItems","map","icon","label","progress","component","content","percentage","defaultProps","propTypes","oneOf","string","isRequired","oneOfType","node","objectOf","array","object","arrayOf"],"mappings":"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","sourcesContent":["/**\n=========================================================\n* Soft UI Dashboard PRO React - v2.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/soft-ui-dashboard-pro-material-ui\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n\nimport { useMemo } from \"react\";\n\n// porp-types is a library for typechecking of props\nimport PropTypes from \"prop-types\";\n\n// react-chartjs-2 components\nimport { Bar } from \"react-chartjs-2\";\n\n// @mui material components\nimport Card from \"@mui/material/Card\";\nimport Grid from \"@mui/material/Grid\";\n\n// Soft UI Dashboard PRO React components\nimport SuiBox from \"components/SuiBox\";\nimport SuiTypography from \"components/SuiTypography\";\n\n// Soft UI Dashboard PRO React example components\nimport BarReportsChartItem from \"examples/Charts/BarCharts/ReportsBarChart/ReportsBarChartItem\";\n\n// ReportsBarChart configurations\nimport configs from \"examples/Charts/BarCharts/ReportsBarChart/configs\";\n\nfunction ReportsBarChart({ color, title, description, chart, items }) {\n  const { data, options } = configs(chart.labels, chart.datasets);\n\n  const renderItems = items.map(({ icon, label, progress }) => (\n    <Grid item xs={6} sm={3} key={label}>\n      <BarReportsChartItem\n        color={color}\n        icon={{ color: icon.color, component: icon.component }}\n        label={label}\n        progress={{ content: progress.content, percentage: progress.percentage }}\n      />\n    </Grid>\n  ));\n\n  return (\n    <Card>\n      <SuiBox padding=\"1rem\">\n        {useMemo(\n          () => (\n            <SuiBox\n              backgroundColor={color}\n              borderRadius=\"lg\"\n              py={2}\n              pr={0.5}\n              mb={3}\n              height=\"12.5rem\"\n              backgroundGradient\n            >\n              <Bar data={data} options={options} />\n            </SuiBox>\n          ),\n          [chart]\n        )}\n        <SuiBox px={1}>\n          <SuiBox mb={2}>\n            <SuiTypography variant=\"h6\" textTransform=\"capitalize\">\n              {title}\n            </SuiTypography>\n            <SuiTypography variant=\"button\" textColor=\"text\" fontWeight=\"regular\">\n              {description}\n            </SuiTypography>\n          </SuiBox>\n          <SuiBox py={1} px={0.5}>\n            <Grid container spacing={2}>\n              {renderItems}\n            </Grid>\n          </SuiBox>\n        </SuiBox>\n      </SuiBox>\n    </Card>\n  );\n}\n\n// Setting default values for the props of ReportsBarChart\nReportsBarChart.defaultProps = {\n  color: \"dark\",\n  description: \"\",\n  items: [],\n};\n\n// Typechecking props for the ReportsBarChart\nReportsBarChart.propTypes = {\n  color: PropTypes.oneOf([\"primary\", \"secondary\", \"info\", \"success\", \"warning\", \"error\", \"dark\"]),\n  title: PropTypes.string.isRequired,\n  description: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  chart: PropTypes.objectOf(PropTypes.oneOfType([PropTypes.array, PropTypes.object])).isRequired,\n  items: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default ReportsBarChart;\n"]},"metadata":{},"sourceType":"module"}