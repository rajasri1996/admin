{"ast":null,"code":"var _jsxFileName = \"C:\\\\Fund\\\\soft-ui-dashboard-pro-react-v2.0.0\\\\admin\\\\src\\\\components\\\\SuiBadge\\\\index.js\";\n\n/**\n=========================================================\n* Soft UI Dashboard PRO React - v2.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/soft-ui-dashboard-pro-material-ui\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\nimport { forwardRef } from \"react\"; // prop-types is a library for typechecking of props\n\nimport PropTypes from \"prop-types\"; // clsx is a utility for constructing className strings conditionally\n\nimport clsx from \"clsx\"; // @mui material components\n\nimport Badge from \"@mui/material/Badge\"; // Custom styles for the SuiBadge\n\nimport styles from \"components/SuiBadge/styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SuiBadge = /*#__PURE__*/forwardRef(_c = (_ref, ref) => {\n  let {\n    color,\n    variant,\n    size,\n    badgeContent,\n    circular,\n    indicator,\n    border,\n    container,\n    children,\n    ...rest\n  } = _ref;\n  const classes = styles({\n    color,\n    circular,\n    border,\n    size\n  });\n  return /*#__PURE__*/_jsxDEV(Badge, { ...rest,\n    ref: ref,\n    badgeContent: badgeContent,\n    color: \"default\",\n    className: clsx(`${classes[variant]}`, {\n      [classes.badge]: !indicator,\n      [classes.badge_indicator]: indicator,\n      [classes.badge_childNode]: !children && !container,\n      [classes.badge_container]: container\n    }),\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 7\n  }, this);\n}); // Setting default values for the props of SuiBadge\n\n_c2 = SuiBadge;\nSuiBadge.defaultProps = {\n  color: \"info\",\n  variant: \"gradient\",\n  size: \"small\",\n  circular: false,\n  indicator: false,\n  border: false,\n  children: false,\n  container: false\n}; // Typechecking props of the SuiBadge\n\nSuiBadge.propTypes = {\n  color: PropTypes.oneOf([\"primary\", \"secondary\", \"info\", \"success\", \"warning\", \"error\", \"light\", \"dark\"]),\n  variant: PropTypes.oneOf([\"gradient\", \"contained\"]),\n  size: PropTypes.oneOf([\"extra-small\", \"small\", \"medium\", \"large\"]),\n  badgeContent: PropTypes.node.isRequired,\n  circular: PropTypes.bool,\n  indicator: PropTypes.bool,\n  border: PropTypes.bool,\n  children: PropTypes.node,\n  container: PropTypes.bool\n};\nexport default SuiBadge;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SuiBadge$forwardRef\");\n$RefreshReg$(_c2, \"SuiBadge\");","map":{"version":3,"sources":["C:/Fund/soft-ui-dashboard-pro-react-v2.0.0/admin/src/components/SuiBadge/index.js"],"names":["forwardRef","PropTypes","clsx","Badge","styles","SuiBadge","ref","color","variant","size","badgeContent","circular","indicator","border","container","children","rest","classes","badge","badge_indicator","badge_childNode","badge_container","defaultProps","propTypes","oneOf","node","isRequired","bool"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,UAAT,QAA2B,OAA3B,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,OAAOC,IAAP,MAAiB,MAAjB,C,CAEA;;AACA,OAAOC,KAAP,MAAkB,qBAAlB,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,4BAAnB;;AAEA,MAAMC,QAAQ,gBAAGL,UAAU,MACzB,OAaEM,GAbF,KAcK;AAAA,MAbH;AACEC,IAAAA,KADF;AAEEC,IAAAA,OAFF;AAGEC,IAAAA,IAHF;AAIEC,IAAAA,YAJF;AAKEC,IAAAA,QALF;AAMEC,IAAAA,SANF;AAOEC,IAAAA,MAPF;AAQEC,IAAAA,SARF;AASEC,IAAAA,QATF;AAUE,OAAGC;AAVL,GAaG;AACH,QAAMC,OAAO,GAAGb,MAAM,CAAC;AAAEG,IAAAA,KAAF;AAASI,IAAAA,QAAT;AAAmBE,IAAAA,MAAnB;AAA2BJ,IAAAA;AAA3B,GAAD,CAAtB;AAEA,sBACE,QAAC,KAAD,OACMO,IADN;AAEE,IAAA,GAAG,EAAEV,GAFP;AAGE,IAAA,YAAY,EAAEI,YAHhB;AAIE,IAAA,KAAK,EAAC,SAJR;AAKE,IAAA,SAAS,EAAER,IAAI,CAAE,GAAEe,OAAO,CAACT,OAAD,CAAU,EAArB,EAAwB;AACrC,OAACS,OAAO,CAACC,KAAT,GAAiB,CAACN,SADmB;AAErC,OAACK,OAAO,CAACE,eAAT,GAA2BP,SAFU;AAGrC,OAACK,OAAO,CAACG,eAAT,GAA2B,CAACL,QAAD,IAAa,CAACD,SAHJ;AAIrC,OAACG,OAAO,CAACI,eAAT,GAA2BP;AAJU,KAAxB,CALjB;AAAA,cAYGC;AAZH;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAlCwB,CAA3B,C,CAqCA;;MArCMV,Q;AAsCNA,QAAQ,CAACiB,YAAT,GAAwB;AACtBf,EAAAA,KAAK,EAAE,MADe;AAEtBC,EAAAA,OAAO,EAAE,UAFa;AAGtBC,EAAAA,IAAI,EAAE,OAHgB;AAItBE,EAAAA,QAAQ,EAAE,KAJY;AAKtBC,EAAAA,SAAS,EAAE,KALW;AAMtBC,EAAAA,MAAM,EAAE,KANc;AAOtBE,EAAAA,QAAQ,EAAE,KAPY;AAQtBD,EAAAA,SAAS,EAAE;AARW,CAAxB,C,CAWA;;AACAT,QAAQ,CAACkB,SAAT,GAAqB;AACnBhB,EAAAA,KAAK,EAAEN,SAAS,CAACuB,KAAV,CAAgB,CACrB,SADqB,EAErB,WAFqB,EAGrB,MAHqB,EAIrB,SAJqB,EAKrB,SALqB,EAMrB,OANqB,EAOrB,OAPqB,EAQrB,MARqB,CAAhB,CADY;AAWnBhB,EAAAA,OAAO,EAAEP,SAAS,CAACuB,KAAV,CAAgB,CAAC,UAAD,EAAa,WAAb,CAAhB,CAXU;AAYnBf,EAAAA,IAAI,EAAER,SAAS,CAACuB,KAAV,CAAgB,CAAC,aAAD,EAAgB,OAAhB,EAAyB,QAAzB,EAAmC,OAAnC,CAAhB,CAZa;AAanBd,EAAAA,YAAY,EAAET,SAAS,CAACwB,IAAV,CAAeC,UAbV;AAcnBf,EAAAA,QAAQ,EAAEV,SAAS,CAAC0B,IAdD;AAenBf,EAAAA,SAAS,EAAEX,SAAS,CAAC0B,IAfF;AAgBnBd,EAAAA,MAAM,EAAEZ,SAAS,CAAC0B,IAhBC;AAiBnBZ,EAAAA,QAAQ,EAAEd,SAAS,CAACwB,IAjBD;AAkBnBX,EAAAA,SAAS,EAAEb,SAAS,CAAC0B;AAlBF,CAArB;AAqBA,eAAetB,QAAf","sourcesContent":["/**\n=========================================================\n* Soft UI Dashboard PRO React - v2.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/soft-ui-dashboard-pro-material-ui\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n\nimport { forwardRef } from \"react\";\n\n// prop-types is a library for typechecking of props\nimport PropTypes from \"prop-types\";\n\n// clsx is a utility for constructing className strings conditionally\nimport clsx from \"clsx\";\n\n// @mui material components\nimport Badge from \"@mui/material/Badge\";\n\n// Custom styles for the SuiBadge\nimport styles from \"components/SuiBadge/styles\";\n\nconst SuiBadge = forwardRef(\n  (\n    {\n      color,\n      variant,\n      size,\n      badgeContent,\n      circular,\n      indicator,\n      border,\n      container,\n      children,\n      ...rest\n    },\n    ref\n  ) => {\n    const classes = styles({ color, circular, border, size });\n\n    return (\n      <Badge\n        {...rest}\n        ref={ref}\n        badgeContent={badgeContent}\n        color=\"default\"\n        className={clsx(`${classes[variant]}`, {\n          [classes.badge]: !indicator,\n          [classes.badge_indicator]: indicator,\n          [classes.badge_childNode]: !children && !container,\n          [classes.badge_container]: container,\n        })}\n      >\n        {children}\n      </Badge>\n    );\n  }\n);\n\n// Setting default values for the props of SuiBadge\nSuiBadge.defaultProps = {\n  color: \"info\",\n  variant: \"gradient\",\n  size: \"small\",\n  circular: false,\n  indicator: false,\n  border: false,\n  children: false,\n  container: false,\n};\n\n// Typechecking props of the SuiBadge\nSuiBadge.propTypes = {\n  color: PropTypes.oneOf([\n    \"primary\",\n    \"secondary\",\n    \"info\",\n    \"success\",\n    \"warning\",\n    \"error\",\n    \"light\",\n    \"dark\",\n  ]),\n  variant: PropTypes.oneOf([\"gradient\", \"contained\"]),\n  size: PropTypes.oneOf([\"extra-small\", \"small\", \"medium\", \"large\"]),\n  badgeContent: PropTypes.node.isRequired,\n  circular: PropTypes.bool,\n  indicator: PropTypes.bool,\n  border: PropTypes.bool,\n  children: PropTypes.node,\n  container: PropTypes.bool,\n};\n\nexport default SuiBadge;\n"]},"metadata":{},"sourceType":"module"}