{"ast":null,"code":"var _jsxFileName = \"C:\\\\Fund\\\\soft\\\\admin\\\\src\\\\examples\\\\Charts\\\\DoughnutCharts\\\\ReportsDoughnutChart\\\\index.js\",\n    _s = $RefreshSig$();\n\n/**\n=========================================================\n* Soft UI Dashboard PRO React - v2.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/soft-ui-dashboard-pro-material-ui\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\nimport { useMemo } from \"react\"; // prop-types is a library for typechecking of props\n\nimport PropTypes from \"prop-types\"; // react-chartjs-2 components\n\nimport { Doughnut } from \"react-chartjs-2\"; // @mui material components\n\nimport Card from \"@mui/material/Card\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport Grid from \"@mui/material/Grid\";\nimport Icon from \"@mui/material/Icon\"; // Soft UI Dashboard PRO React components\n\nimport SuiBox from \"components/SuiBox\";\nimport SuiTypography from \"components/SuiTypography\";\nimport SuiButton from \"components/SuiButton\"; // Soft UI Dashboard PRO React example components\n\nimport ReportsDoughnutChartItem from \"examples/Charts/DoughnutCharts/ReportsDoughnutChart/ReportsDoughnutChartItem\"; // ReportsDoughnutChart configurations\n\nimport configs from \"examples/Charts/DoughnutCharts/ReportsDoughnutChart/configs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ReportsDoughnutChart(_ref) {\n  _s();\n\n  let {\n    title,\n    count,\n    chart,\n    tooltip\n  } = _ref;\n  const {\n    data,\n    options\n  } = configs(chart.labels, chart.datasets);\n  const renderItems = chart.labels.map((label, key) => /*#__PURE__*/_jsxDEV(ReportsDoughnutChartItem, {\n    color: chart.datasets.backgroundColors[key],\n    title: label,\n    percentage: `${chart.datasets.data[key]}%`,\n    hasBorder: key !== chart.labels.length - 1\n  }, label, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(SuiBox, {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      pt: 2,\n      px: 2,\n      children: [/*#__PURE__*/_jsxDEV(SuiTypography, {\n        variant: \"h6\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: tooltip,\n        placement: \"bottom\",\n        arrow: true,\n        children: /*#__PURE__*/_jsxDEV(SuiButton, {\n          variant: \"outlined\",\n          buttonColor: \"secondary\",\n          size: \"small\",\n          circular: true,\n          iconOnly: true,\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            className: \"\",\n            children: \"priority_high\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SuiBox, {\n      p: 2,\n      children: useMemo(() => /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 5,\n          children: /*#__PURE__*/_jsxDEV(SuiBox, {\n            height: \"100%\",\n            textAlign: \"center\",\n            position: \"relative\",\n            children: [/*#__PURE__*/_jsxDEV(SuiBox, {\n              height: {\n                xs: \"65%\",\n                sm: \"100%\"\n              },\n              mt: {\n                xs: 6,\n                sm: 0\n              },\n              children: /*#__PURE__*/_jsxDEV(Doughnut, {\n                data: data,\n                options: options\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(SuiBox, {\n              mt: {\n                xs: 0,\n                sm: -15.25\n              },\n              position: \"relative\",\n              top: {\n                xs: \"-8.25rem\",\n                sm: 0\n              },\n              children: [/*#__PURE__*/_jsxDEV(SuiTypography, {\n                variant: \"h4\",\n                fontWeight: \"medium\",\n                children: count.number\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(SuiTypography, {\n                variant: \"button\",\n                textColor: \"text\",\n                textTransform: \"uppercase\",\n                fontWeight: \"medium\",\n                children: count.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 7,\n          children: renderItems\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this), [chart])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n} // Setting default values for the props of ReportsDoughnutChart\n\n\n_s(ReportsDoughnutChart, \"nwk+m61qLgjDVUp4IGV/072DDN4=\");\n\n_c = ReportsDoughnutChart;\nReportsDoughnutChart.defaultProps = {\n  tooltip: \"\"\n}; // Typechecking props for the ReportsDoughnutChart\n\nReportsDoughnutChart.propTypes = {\n  title: PropTypes.string.isRequired,\n  count: PropTypes.shape({\n    number: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    text: PropTypes.string.isRequired\n  }).isRequired,\n  chart: PropTypes.shape({\n    labels: PropTypes.arrayOf(PropTypes.string).isRequired,\n    datasets: PropTypes.objectOf(PropTypes.oneOfType([PropTypes.object, PropTypes.array, PropTypes.string])).isRequired\n  }).isRequired,\n  tooltip: PropTypes.string\n};\nexport default ReportsDoughnutChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReportsDoughnutChart\");","map":{"version":3,"sources":["C:/Fund/soft/admin/src/examples/Charts/DoughnutCharts/ReportsDoughnutChart/index.js"],"names":["useMemo","PropTypes","Doughnut","Card","Tooltip","Grid","Icon","SuiBox","SuiTypography","SuiButton","ReportsDoughnutChartItem","configs","ReportsDoughnutChart","title","count","chart","tooltip","data","options","labels","datasets","renderItems","map","label","key","backgroundColors","length","xs","sm","number","text","defaultProps","propTypes","string","isRequired","shape","oneOfType","arrayOf","objectOf","object","array"],"mappings":"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","sourcesContent":["/**\n=========================================================\n* Soft UI Dashboard PRO React - v2.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/soft-ui-dashboard-pro-material-ui\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n\nimport { useMemo } from \"react\";\n\n// prop-types is a library for typechecking of props\nimport PropTypes from \"prop-types\";\n\n// react-chartjs-2 components\nimport { Doughnut } from \"react-chartjs-2\";\n\n// @mui material components\nimport Card from \"@mui/material/Card\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport Grid from \"@mui/material/Grid\";\nimport Icon from \"@mui/material/Icon\";\n\n// Soft UI Dashboard PRO React components\nimport SuiBox from \"components/SuiBox\";\nimport SuiTypography from \"components/SuiTypography\";\nimport SuiButton from \"components/SuiButton\";\n\n// Soft UI Dashboard PRO React example components\nimport ReportsDoughnutChartItem from \"examples/Charts/DoughnutCharts/ReportsDoughnutChart/ReportsDoughnutChartItem\";\n\n// ReportsDoughnutChart configurations\nimport configs from \"examples/Charts/DoughnutCharts/ReportsDoughnutChart/configs\";\n\nfunction ReportsDoughnutChart({ title, count, chart, tooltip }) {\n  const { data, options } = configs(chart.labels, chart.datasets);\n\n  const renderItems = chart.labels.map((label, key) => (\n    <ReportsDoughnutChartItem\n      color={chart.datasets.backgroundColors[key]}\n      title={label}\n      key={label}\n      percentage={`${chart.datasets.data[key]}%`}\n      hasBorder={key !== chart.labels.length - 1}\n    />\n  ));\n\n  return (\n    <Card>\n      <SuiBox display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" pt={2} px={2}>\n        <SuiTypography variant=\"h6\">{title}</SuiTypography>\n        <Tooltip title={tooltip} placement=\"bottom\" arrow>\n          <SuiButton variant=\"outlined\" buttonColor=\"secondary\" size=\"small\" circular iconOnly>\n            <Icon className=\"\">priority_high</Icon>\n          </SuiButton>\n        </Tooltip>\n      </SuiBox>\n      <SuiBox p={2}>\n        {useMemo(\n          () => (\n            <Grid container spacing={2}>\n              <Grid item xs={12} sm={5}>\n                <SuiBox height=\"100%\" textAlign=\"center\" position=\"relative\">\n                  <SuiBox height={{ xs: \"65%\", sm: \"100%\" }} mt={{ xs: 6, sm: 0 }}>\n                    <Doughnut data={data} options={options} />\n                  </SuiBox>\n                  <SuiBox\n                    mt={{ xs: 0, sm: -15.25 }}\n                    position=\"relative\"\n                    top={{ xs: \"-8.25rem\", sm: 0 }}\n                  >\n                    <SuiTypography variant=\"h4\" fontWeight=\"medium\">\n                      {count.number}\n                    </SuiTypography>\n                    <SuiTypography\n                      variant=\"button\"\n                      textColor=\"text\"\n                      textTransform=\"uppercase\"\n                      fontWeight=\"medium\"\n                    >\n                      {count.text}\n                    </SuiTypography>\n                  </SuiBox>\n                </SuiBox>\n              </Grid>\n              <Grid item xs={12} sm={7}>\n                {renderItems}\n              </Grid>\n            </Grid>\n          ),\n          [chart]\n        )}\n      </SuiBox>\n    </Card>\n  );\n}\n\n// Setting default values for the props of ReportsDoughnutChart\nReportsDoughnutChart.defaultProps = {\n  tooltip: \"\",\n};\n\n// Typechecking props for the ReportsDoughnutChart\nReportsDoughnutChart.propTypes = {\n  title: PropTypes.string.isRequired,\n  count: PropTypes.shape({\n    number: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    text: PropTypes.string.isRequired,\n  }).isRequired,\n  chart: PropTypes.shape({\n    labels: PropTypes.arrayOf(PropTypes.string).isRequired,\n    datasets: PropTypes.objectOf(\n      PropTypes.oneOfType([PropTypes.object, PropTypes.array, PropTypes.string])\n    ).isRequired,\n  }).isRequired,\n  tooltip: PropTypes.string,\n};\n\nexport default ReportsDoughnutChart;\n"]},"metadata":{},"sourceType":"module"}