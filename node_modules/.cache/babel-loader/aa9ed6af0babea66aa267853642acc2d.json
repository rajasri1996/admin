{"ast":null,"code":"var _jsxFileName = \"C:\\\\Fund\\\\soft-ui-dashboard-pro-react-v2.0.0\\\\admin\\\\src\\\\components\\\\SuiSnackbar\\\\index.js\";\n\n/**\n=========================================================\n* Soft UI Dashboard PRO React - v2.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/soft-ui-dashboard-pro-material-ui\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n// prop-types is a library for typechecking of props\nimport PropTypes from \"prop-types\"; // @mui material components\n\nimport Snackbar from \"@mui/material/Snackbar\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Icon from \"@mui/material/Icon\";\nimport Divider from \"@mui/material/Divider\";\nimport Fade from \"@mui/material/Fade\"; // Soft UI Dashboard PRO React components\n\nimport SuiBox from \"components/SuiBox\";\nimport SuiTypography from \"components/SuiTypography\"; // Custom styles for the SuiSnackbar\n\nimport styles from \"components/SuiSnackbar/styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SuiSnackbar(_ref) {\n  let {\n    type,\n    icon,\n    title,\n    dateTime,\n    content,\n    close,\n    ...rest\n  } = _ref;\n  const classes = styles({\n    type\n  });\n  let titleColor;\n\n  if (type === \"info\") {\n    titleColor = \"white\";\n  } else if (type === \"error\") {\n    titleColor = \"error\";\n  } else {\n    titleColor = \"dark\";\n  }\n\n  return /*#__PURE__*/_jsxDEV(Snackbar, {\n    TransitionComponent: Fade,\n    autoHideDuration: 5000,\n    anchorOrigin: {\n      vertical: \"bottom\",\n      horizontal: \"right\"\n    },\n    ...rest,\n    action: /*#__PURE__*/_jsxDEV(IconButton, {\n      size: \"small\",\n      \"aria-label\": \"close\",\n      color: \"inherit\",\n      onClick: close,\n      children: /*#__PURE__*/_jsxDEV(Icon, {\n        fontSize: \"small\",\n        children: \"close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this),\n    children: /*#__PURE__*/_jsxDEV(SuiBox, {\n      backgroundColor: type === \"info\" ? \"info\" : \"white\",\n      minWidth: \"21.875rem\",\n      maxWidth: \"100%\",\n      boxShadow: \"regular\",\n      borderRadius: \"md\",\n      backgroundGradient: true,\n      p: 1,\n      children: [/*#__PURE__*/_jsxDEV(SuiBox, {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        color: \"dark\",\n        p: 1.5,\n        children: [/*#__PURE__*/_jsxDEV(SuiBox, {\n          display: \"flex\",\n          alignItems: \"center\",\n          lineHeight: 0,\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            className: classes.suiSnackbar_icon,\n            fontSize: \"small\",\n            children: icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SuiTypography, {\n            variant: \"button\",\n            fontWeight: \"medium\",\n            textColor: titleColor,\n            textGradient: type === \"error\",\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SuiBox, {\n          display: \"flex\",\n          alignItems: \"center\",\n          lineHeight: 0,\n          children: [/*#__PURE__*/_jsxDEV(SuiTypography, {\n            variant: \"caption\",\n            textColor: type === \"info\" ? \"white\" : \"text\",\n            children: dateTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Icon, {\n            className: ` font-bold ${classes.suiSnackbar_close}`,\n            color: \"inherit\",\n            onClick: close,\n            children: \"close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        className: classes.suiSnackbar_divider,\n        light: type === \"info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SuiBox, {\n        p: 1.5,\n        customClass: classes.suiSnackbar_content,\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n} // Setting default values for the props of SuiSnackbar\n\n\n_c = SuiSnackbar;\nSuiSnackbar.defaultProps = {\n  type: \"info\"\n}; // Typechecking props for SuiSnackbar\n\nSuiSnackbar.propTypes = {\n  type: PropTypes.oneOf([\"info\", \"success\", \"warning\", \"error\"]),\n  icon: PropTypes.node.isRequired,\n  title: PropTypes.string.isRequired,\n  dateTime: PropTypes.string.isRequired,\n  content: PropTypes.node.isRequired,\n  close: PropTypes.func.isRequired\n};\nexport default SuiSnackbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SuiSnackbar\");","map":{"version":3,"sources":["C:/Fund/soft-ui-dashboard-pro-react-v2.0.0/admin/src/components/SuiSnackbar/index.js"],"names":["PropTypes","Snackbar","IconButton","Icon","Divider","Fade","SuiBox","SuiTypography","styles","SuiSnackbar","type","icon","title","dateTime","content","close","rest","classes","titleColor","vertical","horizontal","suiSnackbar_icon","suiSnackbar_close","suiSnackbar_divider","suiSnackbar_content","defaultProps","propTypes","oneOf","node","isRequired","string","func"],"mappings":"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","sourcesContent":["/**\n=========================================================\n* Soft UI Dashboard PRO React - v2.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/soft-ui-dashboard-pro-material-ui\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n\n// prop-types is a library for typechecking of props\nimport PropTypes from \"prop-types\";\n\n// @mui material components\nimport Snackbar from \"@mui/material/Snackbar\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Icon from \"@mui/material/Icon\";\nimport Divider from \"@mui/material/Divider\";\nimport Fade from \"@mui/material/Fade\";\n\n// Soft UI Dashboard PRO React components\nimport SuiBox from \"components/SuiBox\";\nimport SuiTypography from \"components/SuiTypography\";\n\n// Custom styles for the SuiSnackbar\nimport styles from \"components/SuiSnackbar/styles\";\n\nfunction SuiSnackbar({ type, icon, title, dateTime, content, close, ...rest }) {\n  const classes = styles({ type });\n  let titleColor;\n\n  if (type === \"info\") {\n    titleColor = \"white\";\n  } else if (type === \"error\") {\n    titleColor = \"error\";\n  } else {\n    titleColor = \"dark\";\n  }\n\n  return (\n    <Snackbar\n      TransitionComponent={Fade}\n      autoHideDuration={5000}\n      anchorOrigin={{\n        vertical: \"bottom\",\n        horizontal: \"right\",\n      }}\n      {...rest}\n      action={\n        <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={close}>\n          <Icon fontSize=\"small\">close</Icon>\n        </IconButton>\n      }\n    >\n      <SuiBox\n        backgroundColor={type === \"info\" ? \"info\" : \"white\"}\n        minWidth=\"21.875rem\"\n        maxWidth=\"100%\"\n        boxShadow=\"regular\"\n        borderRadius=\"md\"\n        backgroundGradient\n        p={1}\n      >\n        <SuiBox\n          display=\"flex\"\n          justifyContent=\"space-between\"\n          alignItems=\"center\"\n          color=\"dark\"\n          p={1.5}\n        >\n          <SuiBox display=\"flex\" alignItems=\"center\" lineHeight={0}>\n            <Icon className={classes.suiSnackbar_icon} fontSize=\"small\">\n              {icon}\n            </Icon>\n            <SuiTypography\n              variant=\"button\"\n              fontWeight=\"medium\"\n              textColor={titleColor}\n              textGradient={type === \"error\"}\n            >\n              {title}\n            </SuiTypography>\n          </SuiBox>\n          <SuiBox display=\"flex\" alignItems=\"center\" lineHeight={0}>\n            <SuiTypography variant=\"caption\" textColor={type === \"info\" ? \"white\" : \"text\"}>\n              {dateTime}\n            </SuiTypography>\n            <Icon\n              className={` font-bold ${classes.suiSnackbar_close}`}\n              color=\"inherit\"\n              onClick={close}\n            >\n              close\n            </Icon>\n          </SuiBox>\n        </SuiBox>\n        <Divider className={classes.suiSnackbar_divider} light={type === \"info\"} />\n        <SuiBox p={1.5} customClass={classes.suiSnackbar_content}>\n          {content}\n        </SuiBox>\n      </SuiBox>\n    </Snackbar>\n  );\n}\n\n// Setting default values for the props of SuiSnackbar\nSuiSnackbar.defaultProps = {\n  type: \"info\",\n};\n\n// Typechecking props for SuiSnackbar\nSuiSnackbar.propTypes = {\n  type: PropTypes.oneOf([\"info\", \"success\", \"warning\", \"error\"]),\n  icon: PropTypes.node.isRequired,\n  title: PropTypes.string.isRequired,\n  dateTime: PropTypes.string.isRequired,\n  content: PropTypes.node.isRequired,\n  close: PropTypes.func.isRequired,\n};\n\nexport default SuiSnackbar;\n"]},"metadata":{},"sourceType":"module"}