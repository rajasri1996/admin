{"ast":null,"code":"/**\n=========================================================\n* Soft UI Dashboard PRO React - v2.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/soft-ui-dashboard-pro-material-ui\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/import{useMemo}from\"react\";// react-router-dom components\nimport{Link}from\"react-router-dom\";// prop-types is a library for typechecking of props\n// react-chartjs-2 components\nimport{Doughnut}from\"react-chartjs-2\";// @mui material components\nimport Card from\"@mui/material/Card\";import Tooltip from\"@mui/material/Tooltip\";import Grid from\"@mui/material/Grid\";import Icon from\"@mui/material/Icon\";// Soft UI Dashboard PRO React components\nimport SuiBox from\"components/SuiBox\";import SuiTypography from\"components/SuiTypography\";import SuiButton from\"components/SuiButton\";// Soft UI Dashboard PRO React example components\nimport ComplexReportsDoughnutChartItem from\"examples/Charts/DoughnutCharts/ComplexReportsDoughnutChart/ComplexReportsDoughnutChartItem\";// ComplexReportsDoughnutChart configurations\nimport configs from\"examples/Charts/DoughnutCharts/ComplexReportsDoughnutChart/configs\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function ComplexReportsDoughnutChart(_ref){var title=_ref.title,chart=_ref.chart,tooltip=_ref.tooltip,action=_ref.action;var _configs=configs(chart.labels,chart.datasets),data=_configs.data,options=_configs.options;var renderItems=chart.labels.map(function(label,key){return/*#__PURE__*/_jsx(ComplexReportsDoughnutChartItem,{image:chart.images&&chart.images[key],title:label,percentage:\"\".concat(chart.datasets.data[key],\"%\"),hasBorder:key!==chart.labels.length-1},label);});var renderButton=function renderButton(){var template;if(action){template=action.type===\"internal\"?/*#__PURE__*/_jsx(SuiBox,{mt:3,mb:2,children:/*#__PURE__*/_jsx(SuiButton,{component:Link,to:action.route,variant:\"gradient\",buttonColor:action.color,size:\"small\",children:action.label})}):/*#__PURE__*/_jsx(SuiBox,{mt:3,mb:2,children:/*#__PURE__*/_jsx(SuiButton,{component:\"a\",href:action.route,target:\"_blank\",rel:\"noreferrer\",variant:\"gradient\",buttonColor:action.color,size:\"small\",children:action.label})});}return template;};return/*#__PURE__*/_jsxs(Card,{className:\"h-100\",children:[/*#__PURE__*/_jsxs(SuiBox,{display:\"flex\",justifyContent:\"space-between\",alignItems:\"center\",pt:2,px:2,children:[/*#__PURE__*/_jsx(SuiTypography,{variant:\"h6\",children:title}),/*#__PURE__*/_jsx(Tooltip,{title:tooltip,placement:\"right\",children:/*#__PURE__*/_jsx(SuiButton,{variant:\"outlined\",buttonColor:\"secondary\",size:\"small\",circular:true,iconOnly:true,children:/*#__PURE__*/_jsx(Icon,{className:\"\",children:\"priority_high\"})})})]}),/*#__PURE__*/_jsx(SuiBox,{position:\"relative\",p:2,children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,lg:5,className:\"text-center\",children:/*#__PURE__*/_jsxs(SuiBox,{height:\"100%\",display:\"flex\",flexDirection:\"column\",children:[/*#__PURE__*/_jsx(SuiBox,{height:\"100%\",mt:5,mx:1,children:useMemo(function(){return/*#__PURE__*/_jsx(Doughnut,{data:data,options:options});},[chart])}),renderButton()]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,lg:7,children:useMemo(function(){return renderItems;},[chart])})]})})]});}// Setting default values for the props of ComplexReportsDoughnutChart\nComplexReportsDoughnutChart.defaultProps={tooltip:\"\",action:false};// Typechecking props for the ComplexReportsDoughnutChart\nexport default ComplexReportsDoughnutChart;","map":{"version":3,"sources":["C:/Fund/soft-ui-dashboard-pro-react-v2.0.0/admin/src/examples/Charts/DoughnutCharts/ComplexReportsDoughnutChart/index.js"],"names":["useMemo","Link","Doughnut","Card","Tooltip","Grid","Icon","SuiBox","SuiTypography","SuiButton","ComplexReportsDoughnutChartItem","configs","ComplexReportsDoughnutChart","title","chart","tooltip","action","labels","datasets","data","options","renderItems","map","label","key","images","length","renderButton","template","type","route","color","defaultProps"],"mappings":"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","sourcesContent":["/**\n=========================================================\n* Soft UI Dashboard PRO React - v2.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/soft-ui-dashboard-pro-material-ui\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n\nimport { useMemo } from \"react\";\n\n// react-router-dom components\nimport { Link } from \"react-router-dom\";\n\n// prop-types is a library for typechecking of props\nimport PropTypes from \"prop-types\";\n\n// react-chartjs-2 components\nimport { Doughnut } from \"react-chartjs-2\";\n\n// @mui material components\nimport Card from \"@mui/material/Card\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport Grid from \"@mui/material/Grid\";\nimport Icon from \"@mui/material/Icon\";\n\n// Soft UI Dashboard PRO React components\nimport SuiBox from \"components/SuiBox\";\nimport SuiTypography from \"components/SuiTypography\";\nimport SuiButton from \"components/SuiButton\";\n\n// Soft UI Dashboard PRO React example components\nimport ComplexReportsDoughnutChartItem from \"examples/Charts/DoughnutCharts/ComplexReportsDoughnutChart/ComplexReportsDoughnutChartItem\";\n\n// ComplexReportsDoughnutChart configurations\nimport configs from \"examples/Charts/DoughnutCharts/ComplexReportsDoughnutChart/configs\";\n\nfunction ComplexReportsDoughnutChart({ title, chart, tooltip, action }) {\n  const { data, options } = configs(chart.labels, chart.datasets);\n\n  const renderItems = chart.labels.map((label, key) => (\n    <ComplexReportsDoughnutChartItem\n      image={chart.images && chart.images[key]}\n      title={label}\n      key={label}\n      percentage={`${chart.datasets.data[key]}%`}\n      hasBorder={key !== chart.labels.length - 1}\n    />\n  ));\n\n  const renderButton = () => {\n    let template;\n\n    if (action) {\n      template =\n        action.type === \"internal\" ? (\n          <SuiBox mt={3} mb={2}>\n            <SuiButton\n              component={Link}\n              to={action.route}\n              variant=\"gradient\"\n              buttonColor={action.color}\n              size=\"small\"\n            >\n              {action.label}\n            </SuiButton>\n          </SuiBox>\n        ) : (\n          <SuiBox mt={3} mb={2}>\n            <SuiButton\n              component=\"a\"\n              href={action.route}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              variant=\"gradient\"\n              buttonColor={action.color}\n              size=\"small\"\n            >\n              {action.label}\n            </SuiButton>\n          </SuiBox>\n        );\n    }\n\n    return template;\n  };\n\n  return (\n    <Card className=\"h-100\">\n      <SuiBox display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" pt={2} px={2}>\n        <SuiTypography variant=\"h6\">{title}</SuiTypography>\n        <Tooltip title={tooltip} placement=\"right\">\n          <SuiButton variant=\"outlined\" buttonColor=\"secondary\" size=\"small\" circular iconOnly>\n            <Icon className=\"\">priority_high</Icon>\n          </SuiButton>\n        </Tooltip>\n      </SuiBox>\n      <SuiBox position=\"relative\" p={2}>\n        <Grid container spacing={2}>\n          <Grid item xs={12} lg={5} className=\"text-center\">\n            <SuiBox height=\"100%\" display=\"flex\" flexDirection=\"column\">\n              <SuiBox height=\"100%\" mt={5} mx={1}>\n                {useMemo(\n                  () => (\n                    <Doughnut data={data} options={options} />\n                  ),\n                  [chart]\n                )}\n              </SuiBox>\n              {renderButton()}\n            </SuiBox>\n          </Grid>\n          <Grid item xs={12} lg={7}>\n            {useMemo(() => renderItems, [chart])}\n          </Grid>\n        </Grid>\n      </SuiBox>\n    </Card>\n  );\n}\n\n// Setting default values for the props of ComplexReportsDoughnutChart\nComplexReportsDoughnutChart.defaultProps = {\n  tooltip: \"\",\n  action: false,\n};\n\n// Typechecking props for the ComplexReportsDoughnutChart\nComplexReportsDoughnutChart.propTypes = {\n  title: PropTypes.string.isRequired,\n  chart: PropTypes.shape({\n    images: PropTypes.arrayOf(PropTypes.string),\n    labels: PropTypes.arrayOf(PropTypes.string).isRequired,\n    datasets: PropTypes.objectOf(\n      PropTypes.oneOfType([PropTypes.object, PropTypes.array, PropTypes.string])\n    ).isRequired,\n  }).isRequired,\n  tooltip: PropTypes.string,\n  action: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.shape({\n      type: PropTypes.oneOf([\"external\", \"internal\"]).isRequired,\n      route: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      color: PropTypes.oneOf([\n        \"primary\",\n        \"secondary\",\n        \"info\",\n        \"success\",\n        \"warning\",\n        \"error\",\n        \"dark\",\n        \"light\",\n      ]),\n    }),\n  ]),\n};\n\nexport default ComplexReportsDoughnutChart;\n"]},"metadata":{},"sourceType":"module"}