{"ast":null,"code":"var _jsxFileName = \"C:\\\\Fund\\\\soft-ui-dashboard-pro-react-v2.0.0\\\\admin\\\\src\\\\examples\\\\Charts\\\\DoughnutCharts\\\\ProgressDoughnutChart\\\\index.js\",\n    _s = $RefreshSig$();\n\n/**\n=========================================================\n* Soft UI Dashboard PRO React - v2.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/soft-ui-dashboard-pro-material-ui\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\nimport { useMemo } from \"react\"; // porp-types is a library for typechecking of props\n\nimport PropTypes from \"prop-types\"; // react-chartjs-2 components\n\nimport { Doughnut } from \"react-chartjs-2\"; // @mui material components\n\nimport Card from \"@mui/material/Card\";\nimport Icon from \"@mui/material/Icon\"; // Soft UI Dashboard PRO React components\n\nimport SuiBox from \"components/SuiBox\";\nimport SuiTypography from \"components/SuiTypography\";\nimport SuiBadgeDot from \"components/SuiBadgeDot\"; // ProgressDoughnutChart configurations\n\nimport configs from \"examples/Charts/DoughnutCharts/ProgressDoughnutChart/config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ProgressDoughnutChart(_ref) {\n  _s();\n\n  let {\n    color,\n    icon,\n    title,\n    count,\n    height,\n    chart\n  } = _ref;\n  const {\n    data,\n    options\n  } = configs(chart.labels, chart.datasets);\n  const renderBadgeDots = chart.labels.map((label, index) => {\n    const badgeDotKey = `badge-dot-${index}`;\n    return /*#__PURE__*/_jsxDEV(SuiBadgeDot, {\n      color: chart.datasets.backgroundColors[index],\n      size: \"small\",\n      badgeContent: label,\n      font: {\n        color: \"text\",\n        weight: \"medium\"\n      },\n      px: 0,\n      gradient: true\n    }, badgeDotKey, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(SuiBox, {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"flex-start\",\n      pt: 2,\n      px: 2,\n      children: [/*#__PURE__*/_jsxDEV(SuiBox, {\n        width: \"45%\",\n        children: [/*#__PURE__*/_jsxDEV(SuiBox, {\n          display: \"flex\",\n          alignItems: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(SuiBox, {\n            width: \"3rem\",\n            height: \"3rem\",\n            display: \"grid\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            borderRadius: \"md\",\n            boxShadow: \"regular\",\n            color: \"white\",\n            backgroundColor: color,\n            backgroundGradient: true,\n            children: /*#__PURE__*/_jsxDEV(Icon, {\n              className: \"\",\n              fontSize: \"default\",\n              children: icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SuiBox, {\n            ml: 2,\n            lineHeight: 1,\n            children: [/*#__PURE__*/_jsxDEV(SuiTypography, {\n              variant: \"button\",\n              fontWeight: \"medium\",\n              textTransform: \"capitalize\",\n              textColor: \"text\",\n              children: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this), count ? /*#__PURE__*/_jsxDEV(SuiTypography, {\n              variant: \"h5\",\n              fontWeight: \"bold\",\n              children: count\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SuiBox, {\n          display: \"flex\",\n          flexDirection: \"column\",\n          mt: 2,\n          children: renderBadgeDots\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), useMemo(() => /*#__PURE__*/_jsxDEV(SuiBox, {\n        width: \"55%\",\n        mb: 2,\n        children: /*#__PURE__*/_jsxDEV(Doughnut, {\n          data: data,\n          options: options,\n          sx: {\n            height\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this), [chart, height])]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n} // Setting default values for the props of ProgressDoughnutChart\n\n\n_s(ProgressDoughnutChart, \"nwk+m61qLgjDVUp4IGV/072DDN4=\");\n\n_c = ProgressDoughnutChart;\nProgressDoughnutChart.defaultProps = {\n  color: \"info\",\n  count: 0,\n  height: \"100%\"\n}; // Typechecking props for the ProgressDoughnutChart\n\nProgressDoughnutChart.propTypes = {\n  color: PropTypes.oneOf([\"primary\", \"secondary\", \"info\", \"success\", \"warning\", \"error\", \"dark\"]),\n  icon: PropTypes.node.isRequired,\n  title: PropTypes.string.isRequired,\n  count: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  chart: PropTypes.objectOf(PropTypes.oneOfType([PropTypes.array, PropTypes.object])).isRequired\n};\nexport default ProgressDoughnutChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProgressDoughnutChart\");","map":{"version":3,"sources":["C:/Fund/soft-ui-dashboard-pro-react-v2.0.0/admin/src/examples/Charts/DoughnutCharts/ProgressDoughnutChart/index.js"],"names":["useMemo","PropTypes","Doughnut","Card","Icon","SuiBox","SuiTypography","SuiBadgeDot","configs","ProgressDoughnutChart","color","icon","title","count","height","chart","data","options","labels","datasets","renderBadgeDots","map","label","index","badgeDotKey","backgroundColors","weight","defaultProps","propTypes","oneOf","node","isRequired","string","oneOfType","number","objectOf","array","object"],"mappings":"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","sourcesContent":["/**\n=========================================================\n* Soft UI Dashboard PRO React - v2.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/soft-ui-dashboard-pro-material-ui\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n\nimport { useMemo } from \"react\";\n\n// porp-types is a library for typechecking of props\nimport PropTypes from \"prop-types\";\n\n// react-chartjs-2 components\nimport { Doughnut } from \"react-chartjs-2\";\n\n// @mui material components\nimport Card from \"@mui/material/Card\";\nimport Icon from \"@mui/material/Icon\";\n\n// Soft UI Dashboard PRO React components\nimport SuiBox from \"components/SuiBox\";\nimport SuiTypography from \"components/SuiTypography\";\nimport SuiBadgeDot from \"components/SuiBadgeDot\";\n\n// ProgressDoughnutChart configurations\nimport configs from \"examples/Charts/DoughnutCharts/ProgressDoughnutChart/config\";\n\nfunction ProgressDoughnutChart({ color, icon, title, count, height, chart }) {\n  const { data, options } = configs(chart.labels, chart.datasets);\n\n  const renderBadgeDots = chart.labels.map((label, index) => {\n    const badgeDotKey = `badge-dot-${index}`;\n\n    return (\n      <SuiBadgeDot\n        key={badgeDotKey}\n        color={chart.datasets.backgroundColors[index]}\n        size=\"small\"\n        badgeContent={label}\n        font={{ color: \"text\", weight: \"medium\" }}\n        px={0}\n        gradient\n      />\n    );\n  });\n\n  return (\n    <Card>\n      <SuiBox display=\"flex\" justifyContent=\"space-between\" alignItems=\"flex-start\" pt={2} px={2}>\n        <SuiBox width=\"45%\">\n          <SuiBox display=\"flex\" alignItems=\"center\">\n            <SuiBox\n              width=\"3rem\"\n              height=\"3rem\"\n              display=\"grid\"\n              justifyContent=\"center\"\n              alignItems=\"center\"\n              borderRadius=\"md\"\n              boxShadow=\"regular\"\n              color=\"white\"\n              backgroundColor={color}\n              backgroundGradient\n            >\n              <Icon className=\"\" fontSize=\"default\">\n                {icon}\n              </Icon>\n            </SuiBox>\n            <SuiBox ml={2} lineHeight={1}>\n              <SuiTypography\n                variant=\"button\"\n                fontWeight=\"medium\"\n                textTransform=\"capitalize\"\n                textColor=\"text\"\n              >\n                {title}\n              </SuiTypography>\n              {count ? (\n                <SuiTypography variant=\"h5\" fontWeight=\"bold\">\n                  {count}\n                </SuiTypography>\n              ) : null}\n            </SuiBox>\n          </SuiBox>\n          <SuiBox display=\"flex\" flexDirection=\"column\" mt={2}>\n            {renderBadgeDots}\n          </SuiBox>\n        </SuiBox>\n        {useMemo(\n          () => (\n            <SuiBox width=\"55%\" mb={2}>\n              <Doughnut data={data} options={options} sx={{ height }} />\n            </SuiBox>\n          ),\n          [chart, height]\n        )}\n      </SuiBox>\n    </Card>\n  );\n}\n\n// Setting default values for the props of ProgressDoughnutChart\nProgressDoughnutChart.defaultProps = {\n  color: \"info\",\n  count: 0,\n  height: \"100%\",\n};\n\n// Typechecking props for the ProgressDoughnutChart\nProgressDoughnutChart.propTypes = {\n  color: PropTypes.oneOf([\"primary\", \"secondary\", \"info\", \"success\", \"warning\", \"error\", \"dark\"]),\n  icon: PropTypes.node.isRequired,\n  title: PropTypes.string.isRequired,\n  count: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  chart: PropTypes.objectOf(PropTypes.oneOfType([PropTypes.array, PropTypes.object])).isRequired,\n};\n\nexport default ProgressDoughnutChart;\n"]},"metadata":{},"sourceType":"module"}