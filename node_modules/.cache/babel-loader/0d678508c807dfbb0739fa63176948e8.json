{"ast":null,"code":"var _jsxFileName = \"C:\\\\Fund\\\\soft-ui-dashboard-pro-react-v2.0.0\\\\admin\\\\src\\\\examples\\\\Charts\\\\BarCharts\\\\ThinBarChart\\\\index.js\",\n    _s = $RefreshSig$();\n\n/**\n=========================================================\n* Soft UI Dashboard PRO React - v2.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/soft-ui-dashboard-pro-material-ui\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\nimport { useMemo } from \"react\"; // prop-types is a library for typechecking of props\n\nimport PropTypes from \"prop-types\"; // react-chartjs-2 components\n\nimport { Bar } from \"react-chartjs-2\"; // @mui material components\n\nimport Card from \"@mui/material/Card\"; // Soft UI Dashboard PRO React components\n\nimport SuiBox from \"components/SuiBox\";\nimport SuiTypography from \"components/SuiTypography\"; // ThinBarChart configuration\n\nimport configs from \"examples/Charts/BarCharts/ThinBarChart/configs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ThinBarChart(_ref) {\n  _s();\n\n  let {\n    color,\n    title,\n    height,\n    chart\n  } = _ref;\n  const {\n    data,\n    options\n  } = configs(color, chart.labels, chart.datasets);\n\n  const renderChart = /*#__PURE__*/_jsxDEV(SuiBox, {\n    p: 2,\n    children: [title && /*#__PURE__*/_jsxDEV(SuiBox, {\n      mb: 1,\n      children: /*#__PURE__*/_jsxDEV(SuiTypography, {\n        variant: \"h6\",\n        textColor: color,\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), useMemo(() => /*#__PURE__*/_jsxDEV(SuiBox, {\n      height: height,\n      pt: 2,\n      children: /*#__PURE__*/_jsxDEV(Bar, {\n        data: data,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }, this), [chart, height])]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n\n  return title ? /*#__PURE__*/_jsxDEV(Card, {\n    children: renderChart\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 18\n  }, this) : renderChart;\n} // Setting default values for the props of ThinBarChart\n\n\n_s(ThinBarChart, \"nwk+m61qLgjDVUp4IGV/072DDN4=\");\n\n_c = ThinBarChart;\nThinBarChart.defaultProps = {\n  color: \"dark\",\n  title: \"\",\n  height: \"12.5rem\"\n}; // Typechecking props for the ThinBarChart\n\nThinBarChart.propTypes = {\n  color: PropTypes.oneOf([\"primary\", \"secondary\", \"info\", \"success\", \"warning\", \"error\", \"dark\"]),\n  title: PropTypes.string,\n  chart: PropTypes.shape({\n    labels: PropTypes.arrayOf(PropTypes.string).isRequired,\n    datasets: PropTypes.objectOf(PropTypes.oneOfType([PropTypes.object, PropTypes.array, PropTypes.string])).isRequired\n  }).isRequired,\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nexport default ThinBarChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThinBarChart\");","map":{"version":3,"sources":["C:/Fund/soft-ui-dashboard-pro-react-v2.0.0/admin/src/examples/Charts/BarCharts/ThinBarChart/index.js"],"names":["useMemo","PropTypes","Bar","Card","SuiBox","SuiTypography","configs","ThinBarChart","color","title","height","chart","data","options","labels","datasets","renderChart","defaultProps","propTypes","oneOf","string","shape","arrayOf","isRequired","objectOf","oneOfType","object","array","number"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,OAAT,QAAwB,OAAxB,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,SAASC,GAAT,QAAoB,iBAApB,C,CAEA;;AACA,OAAOC,IAAP,MAAiB,oBAAjB,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,aAAP,MAA0B,0BAA1B,C,CAEA;;AACA,OAAOC,OAAP,MAAoB,gDAApB;;;AAEA,SAASC,YAAT,OAAuD;AAAA;;AAAA,MAAjC;AAAEC,IAAAA,KAAF;AAASC,IAAAA,KAAT;AAAgBC,IAAAA,MAAhB;AAAwBC,IAAAA;AAAxB,GAAiC;AACrD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBP,OAAO,CAACE,KAAD,EAAQG,KAAK,CAACG,MAAd,EAAsBH,KAAK,CAACI,QAA5B,CAAjC;;AAEA,QAAMC,WAAW,gBACf,QAAC,MAAD;AAAQ,IAAA,CAAC,EAAE,CAAX;AAAA,eACGP,KAAK,iBACJ,QAAC,MAAD;AAAQ,MAAA,EAAE,EAAE,CAAZ;AAAA,6BACE,QAAC,aAAD;AAAe,QAAA,OAAO,EAAC,IAAvB;AAA4B,QAAA,SAAS,EAAED,KAAvC;AAAA,kBACGC;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFJ,EAQGT,OAAO,CACN,mBACE,QAAC,MAAD;AAAQ,MAAA,MAAM,EAAEU,MAAhB;AAAwB,MAAA,EAAE,EAAE,CAA5B;AAAA,6BACE,QAAC,GAAD;AAAK,QAAA,IAAI,EAAEE,IAAX;AAAiB,QAAA,OAAO,EAAEC;AAA1B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFI,EAMN,CAACF,KAAD,EAAQD,MAAR,CANM,CARV;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAoBA,SAAOD,KAAK,gBAAG,QAAC,IAAD;AAAA,cAAOO;AAAP;AAAA;AAAA;AAAA;AAAA,UAAH,GAAgCA,WAA5C;AACD,C,CAED;;;GA1BST,Y;;KAAAA,Y;AA2BTA,YAAY,CAACU,YAAb,GAA4B;AAC1BT,EAAAA,KAAK,EAAE,MADmB;AAE1BC,EAAAA,KAAK,EAAE,EAFmB;AAG1BC,EAAAA,MAAM,EAAE;AAHkB,CAA5B,C,CAMA;;AACAH,YAAY,CAACW,SAAb,GAAyB;AACvBV,EAAAA,KAAK,EAAEP,SAAS,CAACkB,KAAV,CAAgB,CAAC,SAAD,EAAY,WAAZ,EAAyB,MAAzB,EAAiC,SAAjC,EAA4C,SAA5C,EAAuD,OAAvD,EAAgE,MAAhE,CAAhB,CADgB;AAEvBV,EAAAA,KAAK,EAAER,SAAS,CAACmB,MAFM;AAGvBT,EAAAA,KAAK,EAAEV,SAAS,CAACoB,KAAV,CAAgB;AACrBP,IAAAA,MAAM,EAAEb,SAAS,CAACqB,OAAV,CAAkBrB,SAAS,CAACmB,MAA5B,EAAoCG,UADvB;AAErBR,IAAAA,QAAQ,EAAEd,SAAS,CAACuB,QAAV,CACRvB,SAAS,CAACwB,SAAV,CAAoB,CAACxB,SAAS,CAACyB,MAAX,EAAmBzB,SAAS,CAAC0B,KAA7B,EAAoC1B,SAAS,CAACmB,MAA9C,CAApB,CADQ,EAERG;AAJmB,GAAhB,EAKJA,UARoB;AASvBb,EAAAA,MAAM,EAAET,SAAS,CAACwB,SAAV,CAAoB,CAACxB,SAAS,CAACmB,MAAX,EAAmBnB,SAAS,CAAC2B,MAA7B,CAApB;AATe,CAAzB;AAYA,eAAerB,YAAf","sourcesContent":["/**\n=========================================================\n* Soft UI Dashboard PRO React - v2.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/soft-ui-dashboard-pro-material-ui\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n\nimport { useMemo } from \"react\";\n\n// prop-types is a library for typechecking of props\nimport PropTypes from \"prop-types\";\n\n// react-chartjs-2 components\nimport { Bar } from \"react-chartjs-2\";\n\n// @mui material components\nimport Card from \"@mui/material/Card\";\n\n// Soft UI Dashboard PRO React components\nimport SuiBox from \"components/SuiBox\";\nimport SuiTypography from \"components/SuiTypography\";\n\n// ThinBarChart configuration\nimport configs from \"examples/Charts/BarCharts/ThinBarChart/configs\";\n\nfunction ThinBarChart({ color, title, height, chart }) {\n  const { data, options } = configs(color, chart.labels, chart.datasets);\n\n  const renderChart = (\n    <SuiBox p={2}>\n      {title && (\n        <SuiBox mb={1}>\n          <SuiTypography variant=\"h6\" textColor={color}>\n            {title}\n          </SuiTypography>\n        </SuiBox>\n      )}\n      {useMemo(\n        () => (\n          <SuiBox height={height} pt={2}>\n            <Bar data={data} options={options} />\n          </SuiBox>\n        ),\n        [chart, height]\n      )}\n    </SuiBox>\n  );\n\n  return title ? <Card>{renderChart}</Card> : renderChart;\n}\n\n// Setting default values for the props of ThinBarChart\nThinBarChart.defaultProps = {\n  color: \"dark\",\n  title: \"\",\n  height: \"12.5rem\",\n};\n\n// Typechecking props for the ThinBarChart\nThinBarChart.propTypes = {\n  color: PropTypes.oneOf([\"primary\", \"secondary\", \"info\", \"success\", \"warning\", \"error\", \"dark\"]),\n  title: PropTypes.string,\n  chart: PropTypes.shape({\n    labels: PropTypes.arrayOf(PropTypes.string).isRequired,\n    datasets: PropTypes.objectOf(\n      PropTypes.oneOfType([PropTypes.object, PropTypes.array, PropTypes.string])\n    ).isRequired,\n  }).isRequired,\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nexport default ThinBarChart;\n"]},"metadata":{},"sourceType":"module"}