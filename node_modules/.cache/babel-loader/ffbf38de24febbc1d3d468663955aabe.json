{"ast":null,"code":"import _objectSpread from\"C:/Fund/soft-ui-dashboard-pro-react-v2.0.0/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _defineProperty from\"C:/Fund/soft-ui-dashboard-pro-react-v2.0.0/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectWithoutProperties from\"C:/Fund/soft-ui-dashboard-pro-react-v2.0.0/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";var _excluded=[\"buttonColor\",\"variant\",\"size\",\"circular\",\"iconOnly\",\"children\",\"customClass\"];/**\n=========================================================\n* Soft UI Dashboard PRO React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/soft-ui-dashboard-pro-material-ui\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/import{forwardRef}from\"react\";// prop-types is a library for typechecking of props\n// clsx is a utility for constructing className strings conditionally\nimport clsx from\"clsx\";// @mui material components\nimport Button from\"@mui/material/Button\";// Custom styles for SuiButton\nimport styles from\"components/SuiButton/styles\";import{jsx as _jsx}from\"react/jsx-runtime\";var SuiButton=/*#__PURE__*/forwardRef(function(_ref,ref){var _clsx;var buttonColor=_ref.buttonColor,variant=_ref.variant,size=_ref.size,circular=_ref.circular,iconOnly=_ref.iconOnly,children=_ref.children,customClass=_ref.customClass,rest=_objectWithoutProperties(_ref,_excluded);var classes=styles({buttonColor:buttonColor,variant:variant,size:size,iconOnly:iconOnly});return/*#__PURE__*/_jsx(Button,_objectSpread(_objectSpread({},rest),{},{ref:ref,color:\"primary\",variant:variant===\"gradient\"?\"contained\":variant,size:size,className:clsx(classes[variant],customClass,(_clsx={},_defineProperty(_clsx,classes.circular,circular),_defineProperty(_clsx,classes.iconOnly,iconOnly),_clsx)),children:children}));});// Setting default values for the props of SuiButton\nSuiButton.defaultProps={size:\"medium\",variant:\"contained\",buttonColor:\"white\",circular:false,iconOnly:false,customClass:\"\"};// Typechecking props for the SuiButton\nexport default SuiButton;","map":{"version":3,"sources":["C:/Fund/soft-ui-dashboard-pro-react-v2.0.0/admin/src/components/SuiButton/index.js"],"names":["forwardRef","clsx","Button","styles","SuiButton","ref","buttonColor","variant","size","circular","iconOnly","children","customClass","rest","classes","defaultProps"],"mappings":"wmBAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAEA,OAASA,UAAT,KAA2B,OAA3B,CAEA;AAGA;AACA,MAAOC,CAAAA,IAAP,KAAiB,MAAjB,CAEA;AACA,MAAOC,CAAAA,MAAP,KAAmB,sBAAnB,CAEA;AACA,MAAOC,CAAAA,MAAP,KAAmB,6BAAnB,C,2CAEA,GAAMC,CAAAA,SAAS,cAAGJ,UAAU,CAC1B,cAAqFK,GAArF,CAA6F,cAA1FC,CAAAA,WAA0F,MAA1FA,WAA0F,CAA7EC,OAA6E,MAA7EA,OAA6E,CAApEC,IAAoE,MAApEA,IAAoE,CAA9DC,QAA8D,MAA9DA,QAA8D,CAApDC,QAAoD,MAApDA,QAAoD,CAA1CC,QAA0C,MAA1CA,QAA0C,CAAhCC,WAAgC,MAAhCA,WAAgC,CAAhBC,IAAgB,0CAC3F,GAAMC,CAAAA,OAAO,CAAGX,MAAM,CAAC,CAAEG,WAAW,CAAXA,WAAF,CAAeC,OAAO,CAAPA,OAAf,CAAwBC,IAAI,CAAJA,IAAxB,CAA8BE,QAAQ,CAARA,QAA9B,CAAD,CAAtB,CACA,mBACE,KAAC,MAAD,gCACMG,IADN,MAEE,GAAG,CAAER,GAFP,CAGE,KAAK,CAAC,SAHR,CAIE,OAAO,CAAEE,OAAO,GAAK,UAAZ,CAAyB,WAAzB,CAAuCA,OAJlD,CAKE,IAAI,CAAEC,IALR,CAME,SAAS,CAAEP,IAAI,CAACa,OAAO,CAACP,OAAD,CAAR,CAAmBK,WAAnB,iCACZE,OAAO,CAACL,QADI,CACOA,QADP,wBAEZK,OAAO,CAACJ,QAFI,CAEOA,QAFP,SANjB,UAWGC,QAXH,GADF,CAeD,CAlByB,CAA5B,CAqBA;AACAP,SAAS,CAACW,YAAV,CAAyB,CACvBP,IAAI,CAAE,QADiB,CAEvBD,OAAO,CAAE,WAFc,CAGvBD,WAAW,CAAE,OAHU,CAIvBG,QAAQ,CAAE,KAJa,CAKvBC,QAAQ,CAAE,KALa,CAMvBE,WAAW,CAAE,EANU,CAAzB,CASA;AAqBA,cAAeR,CAAAA,SAAf","sourcesContent":["/**\n=========================================================\n* Soft UI Dashboard PRO React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/soft-ui-dashboard-pro-material-ui\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n\nimport { forwardRef } from \"react\";\n\n// prop-types is a library for typechecking of props\nimport PropTypes from \"prop-types\";\n\n// clsx is a utility for constructing className strings conditionally\nimport clsx from \"clsx\";\n\n// @mui material components\nimport Button from \"@mui/material/Button\";\n\n// Custom styles for SuiButton\nimport styles from \"components/SuiButton/styles\";\n\nconst SuiButton = forwardRef(\n  ({ buttonColor, variant, size, circular, iconOnly, children, customClass, ...rest }, ref) => {\n    const classes = styles({ buttonColor, variant, size, iconOnly });\n    return (\n      <Button\n        {...rest}\n        ref={ref}\n        color=\"primary\"\n        variant={variant === \"gradient\" ? \"contained\" : variant}\n        size={size}\n        className={clsx(classes[variant], customClass, {\n          [classes.circular]: circular,\n          [classes.iconOnly]: iconOnly,\n        })}\n      >\n        {children}\n      </Button>\n    );\n  }\n);\n\n// Setting default values for the props of SuiButton\nSuiButton.defaultProps = {\n  size: \"medium\",\n  variant: \"contained\",\n  buttonColor: \"white\",\n  circular: false,\n  iconOnly: false,\n  customClass: \"\",\n};\n\n// Typechecking props for the SuiButton\nSuiButton.propTypes = {\n  size: PropTypes.oneOf([\"small\", \"medium\", \"large\"]),\n  variant: PropTypes.oneOf([\"text\", \"contained\", \"outlined\", \"gradient\"]),\n  buttonColor: PropTypes.oneOf([\n    \"white\",\n    \"primary\",\n    \"secondary\",\n    \"info\",\n    \"success\",\n    \"warning\",\n    \"error\",\n    \"light\",\n    \"dark\",\n  ]),\n  circular: PropTypes.bool,\n  iconOnly: PropTypes.bool,\n  children: PropTypes.node.isRequired,\n  customClass: PropTypes.string,\n};\n\nexport default SuiButton;\n"]},"metadata":{},"sourceType":"module"}