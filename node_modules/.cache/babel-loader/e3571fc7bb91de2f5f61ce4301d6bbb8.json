{"ast":null,"code":"var _jsxFileName = \"C:\\\\Fund\\\\soft\\\\admin\\\\src\\\\examples\\\\Charts\\\\LineCharts\\\\GradientLineChart\\\\index.js\",\n    _s = $RefreshSig$();\n\n/**\n=========================================================\n* Soft UI Dashboard PRO React - v2.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/soft-ui-dashboard-pro-material-ui\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\nimport { useRef, useEffect, useState, useMemo } from \"react\"; // porp-types is a library for typechecking of props\n\nimport PropTypes from \"prop-types\"; // react-chartjs-2 components\n\nimport { Line } from \"react-chartjs-2\"; // @mui material components\n\nimport Card from \"@mui/material/Card\"; // Soft UI Dashboard PRO React components\n\nimport SuiBox from \"components/SuiBox\";\nimport SuiTypography from \"components/SuiTypography\"; // Soft UI Dashboard PRO React helper functions\n\nimport gradientChartLine from \"assets/theme/functions/gradientChartLine\"; // GradientLineChart configurations\n\nimport configs from \"examples/Charts/LineCharts/GradientLineChart/configs\"; // Soft UI Dashboard PRO React base styles\n\nimport colors from \"assets/theme/base/colors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction GradientLineChart(_ref) {\n  _s();\n\n  let {\n    title,\n    description,\n    height,\n    chart\n  } = _ref;\n  const chartRef = useRef(null);\n  const [chartData, setChartData] = useState({});\n  const {\n    data,\n    options\n  } = chartData;\n  useEffect(() => {\n    const chartDatasets = chart.datasets.map(dataset => ({ ...dataset,\n      tension: 0.4,\n      pointRadius: 0,\n      borderWidth: 3,\n      borderColor: colors[dataset.color].main,\n      fill: true,\n      maxBarThickness: 6,\n      backgroundColor: gradientChartLine(chartRef.current.children[0], colors[dataset.color].main)\n    }));\n    setChartData(configs(chart.labels, chartDatasets));\n  }, [chart]);\n\n  const renderChart = /*#__PURE__*/_jsxDEV(SuiBox, {\n    p: 2,\n    children: [title || description ? /*#__PURE__*/_jsxDEV(SuiBox, {\n      px: description ? 1 : 0,\n      pt: description ? 1 : 0,\n      children: [title && /*#__PURE__*/_jsxDEV(SuiBox, {\n        mb: 1,\n        children: /*#__PURE__*/_jsxDEV(SuiTypography, {\n          variant: \"h6\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(SuiBox, {\n        mb: 2,\n        children: /*#__PURE__*/_jsxDEV(SuiTypography, {\n          variant: \"button\",\n          fontWeight: \"regular\",\n          textColor: \"text\",\n          children: description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this) : null, useMemo(() => /*#__PURE__*/_jsxDEV(SuiBox, {\n      ref: chartRef,\n      sx: {\n        height\n      },\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: data,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }, this), [chartData, height])]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n\n  return title || description ? /*#__PURE__*/_jsxDEV(Card, {\n    children: renderChart\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 33\n  }, this) : renderChart;\n} // Setting default values for the props of GradientLineChart\n\n\n_s(GradientLineChart, \"n3wPcHgMRERcqUWkVtpcWGQ3sy8=\");\n\n_c = GradientLineChart;\nGradientLineChart.defaultProps = {\n  title: \"\",\n  description: \"\",\n  height: \"19.125rem\"\n}; // Typechecking props for the GradientLineChart\n\nGradientLineChart.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  chart: PropTypes.objectOf(PropTypes.array).isRequired\n};\nexport default GradientLineChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"GradientLineChart\");","map":{"version":3,"sources":["C:/Fund/soft/admin/src/examples/Charts/LineCharts/GradientLineChart/index.js"],"names":["useRef","useEffect","useState","useMemo","PropTypes","Line","Card","SuiBox","SuiTypography","gradientChartLine","configs","colors","GradientLineChart","title","description","height","chart","chartRef","chartData","setChartData","data","options","chartDatasets","datasets","map","dataset","tension","pointRadius","borderWidth","borderColor","color","main","fill","maxBarThickness","backgroundColor","current","children","labels","renderChart","defaultProps","propTypes","string","oneOfType","node","number","objectOf","array","isRequired"],"mappings":"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","sourcesContent":["/**\n=========================================================\n* Soft UI Dashboard PRO React - v2.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/soft-ui-dashboard-pro-material-ui\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n\nimport { useRef, useEffect, useState, useMemo } from \"react\";\n\n// porp-types is a library for typechecking of props\nimport PropTypes from \"prop-types\";\n\n// react-chartjs-2 components\nimport { Line } from \"react-chartjs-2\";\n\n// @mui material components\nimport Card from \"@mui/material/Card\";\n\n// Soft UI Dashboard PRO React components\nimport SuiBox from \"components/SuiBox\";\nimport SuiTypography from \"components/SuiTypography\";\n\n// Soft UI Dashboard PRO React helper functions\nimport gradientChartLine from \"assets/theme/functions/gradientChartLine\";\n\n// GradientLineChart configurations\nimport configs from \"examples/Charts/LineCharts/GradientLineChart/configs\";\n\n// Soft UI Dashboard PRO React base styles\nimport colors from \"assets/theme/base/colors\";\n\nfunction GradientLineChart({ title, description, height, chart }) {\n  const chartRef = useRef(null);\n  const [chartData, setChartData] = useState({});\n  const { data, options } = chartData;\n\n  useEffect(() => {\n    const chartDatasets = chart.datasets.map((dataset) => ({\n      ...dataset,\n      tension: 0.4,\n      pointRadius: 0,\n      borderWidth: 3,\n      borderColor: colors[dataset.color].main,\n      fill: true,\n      maxBarThickness: 6,\n      backgroundColor: gradientChartLine(chartRef.current.children[0], colors[dataset.color].main),\n    }));\n\n    setChartData(configs(chart.labels, chartDatasets));\n  }, [chart]);\n\n  const renderChart = (\n    <SuiBox p={2}>\n      {title || description ? (\n        <SuiBox px={description ? 1 : 0} pt={description ? 1 : 0}>\n          {title && (\n            <SuiBox mb={1}>\n              <SuiTypography variant=\"h6\">{title}</SuiTypography>\n            </SuiBox>\n          )}\n          <SuiBox mb={2}>\n            <SuiTypography variant=\"button\" fontWeight=\"regular\" textColor=\"text\">\n              {description}\n            </SuiTypography>\n          </SuiBox>\n        </SuiBox>\n      ) : null}\n      {useMemo(\n        () => (\n          <SuiBox ref={chartRef} sx={{ height }}>\n            <Line data={data} options={options} />\n          </SuiBox>\n        ),\n        [chartData, height]\n      )}\n    </SuiBox>\n  );\n\n  return title || description ? <Card>{renderChart}</Card> : renderChart;\n}\n\n// Setting default values for the props of GradientLineChart\nGradientLineChart.defaultProps = {\n  title: \"\",\n  description: \"\",\n  height: \"19.125rem\",\n};\n\n// Typechecking props for the GradientLineChart\nGradientLineChart.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  chart: PropTypes.objectOf(PropTypes.array).isRequired,\n};\n\nexport default GradientLineChart;\n"]},"metadata":{},"sourceType":"module"}