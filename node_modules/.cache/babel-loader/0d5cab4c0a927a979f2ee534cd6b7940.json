{"ast":null,"code":"/**\n=========================================================\n* Soft UI Dashboard PRO React - v2.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/soft-ui-dashboard-pro-material-ui\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n// @mui material components\nimport { makeStyles } from \"@mui/styles\";\nexport default _c2 = makeStyles(_c = _ref => {\n  let {\n    palette,\n    functions,\n    borders,\n    boxShadows\n  } = _ref;\n  const {\n    gradients,\n    grey\n  } = palette;\n  const {\n    linearGradient\n  } = functions;\n  const {\n    borderRadius: radius\n  } = borders;\n  const greyColors = {\n    \"grey-100\": grey[100],\n    \"grey-200\": grey[200],\n    \"grey-300\": grey[300],\n    \"grey-400\": grey[400],\n    \"grey-500\": grey[500],\n    \"grey-600\": grey[600],\n    \"grey-700\": grey[700],\n    \"grey-800\": grey[800],\n    \"grey-900\": grey[900]\n  };\n  const validGradients = [\"primary\", \"secondary\", \"info\", \"success\", \"warning\", \"error\", \"dark\", \"light\"];\n  const validColors = [\"transparent\", \"white\", \"black\", \"primary\", \"secondary\", \"info\", \"success\", \"warning\", \"error\", \"light\", \"dark\", \"text\", \"grey-100\", \"grey-200\", \"grey-300\", \"grey-400\", \"grey-500\", \"grey-600\", \"grey-700\", \"grey-800\", \"grey-900\"];\n  const validBorderRadius = [\"xs\", \"sm\", \"md\", \"lg\", \"xl\", \"xxl\", \"section\"];\n  const validBoxShadows = [\"xs\", \"sm\", \"regular\", \"lg\", \"xl\", \"xxl\", \"inset\"];\n  return {\n    suiBox: {\n      opacity: _ref2 => {\n        let {\n          opacity\n        } = _ref2;\n        return opacity;\n      },\n      backgroundColor: _ref3 => {\n        let {\n          backgroundColor\n        } = _ref3;\n        let backgroundColorValue;\n\n        if (validColors.find(el => el === backgroundColor)) {\n          backgroundColorValue = palette[backgroundColor] ? palette[backgroundColor].main : greyColors[backgroundColor];\n        } else {\n          backgroundColorValue = backgroundColor;\n        }\n\n        return backgroundColorValue;\n      },\n      color: _ref4 => {\n        let {\n          color\n        } = _ref4;\n        let colorValue;\n\n        if (validColors.find(el => el === color)) {\n          colorValue = palette[color] ? palette[color].main : greyColors[color];\n        } else {\n          colorValue = color;\n        }\n\n        return colorValue;\n      },\n      borderRadius: _ref5 => {\n        let {\n          borderRadius\n        } = _ref5;\n        let borderRadiusValue;\n\n        if (validBorderRadius.find(el => el === borderRadius)) {\n          borderRadiusValue = radius[borderRadius];\n        } else {\n          borderRadiusValue = borderRadius;\n        }\n\n        return borderRadiusValue;\n      },\n      boxShadow: _ref6 => {\n        let {\n          boxShadow\n        } = _ref6;\n        let boxShadowValue;\n\n        if (validBoxShadows.find(el => el === boxShadow)) {\n          boxShadowValue = boxShadows[boxShadow];\n        } else {\n          boxShadowValue = boxShadows;\n        }\n\n        return boxShadowValue;\n      }\n    },\n    suiBox_backgroundGradient: {\n      backgroundImage: _ref7 => {\n        let {\n          backgroundColor\n        } = _ref7;\n        let backgroundValue;\n\n        if (validGradients.find(el => el === backgroundColor)) {\n          backgroundValue = linearGradient(gradients[backgroundColor].main, gradients[backgroundColor].state);\n        } else {\n          backgroundValue = \"none\";\n        }\n\n        return backgroundValue;\n      }\n    }\n  };\n});\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"%default%$makeStyles\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Fund/soft/admin/src/components/SuiBox/styles.js"],"names":["makeStyles","palette","functions","borders","boxShadows","gradients","grey","linearGradient","borderRadius","radius","greyColors","validGradients","validColors","validBorderRadius","validBoxShadows","suiBox","opacity","backgroundColor","backgroundColorValue","find","el","main","color","colorValue","borderRadiusValue","boxShadow","boxShadowValue","suiBox_backgroundGradient","backgroundImage","backgroundValue","state"],"mappings":"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","sourcesContent":["/**\n=========================================================\n* Soft UI Dashboard PRO React - v2.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/soft-ui-dashboard-pro-material-ui\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n\n// @mui material components\nimport { makeStyles } from \"@mui/styles\";\n\nexport default makeStyles(({ palette, functions, borders, boxShadows }) => {\n  const { gradients, grey } = palette;\n  const { linearGradient } = functions;\n  const { borderRadius: radius } = borders;\n\n  const greyColors = {\n    \"grey-100\": grey[100],\n    \"grey-200\": grey[200],\n    \"grey-300\": grey[300],\n    \"grey-400\": grey[400],\n    \"grey-500\": grey[500],\n    \"grey-600\": grey[600],\n    \"grey-700\": grey[700],\n    \"grey-800\": grey[800],\n    \"grey-900\": grey[900],\n  };\n\n  const validGradients = [\n    \"primary\",\n    \"secondary\",\n    \"info\",\n    \"success\",\n    \"warning\",\n    \"error\",\n    \"dark\",\n    \"light\",\n  ];\n\n  const validColors = [\n    \"transparent\",\n    \"white\",\n    \"black\",\n    \"primary\",\n    \"secondary\",\n    \"info\",\n    \"success\",\n    \"warning\",\n    \"error\",\n    \"light\",\n    \"dark\",\n    \"text\",\n    \"grey-100\",\n    \"grey-200\",\n    \"grey-300\",\n    \"grey-400\",\n    \"grey-500\",\n    \"grey-600\",\n    \"grey-700\",\n    \"grey-800\",\n    \"grey-900\",\n  ];\n\n  const validBorderRadius = [\"xs\", \"sm\", \"md\", \"lg\", \"xl\", \"xxl\", \"section\"];\n  const validBoxShadows = [\"xs\", \"sm\", \"regular\", \"lg\", \"xl\", \"xxl\", \"inset\"];\n\n  return {\n    suiBox: {\n      opacity: ({ opacity }) => opacity,\n      backgroundColor: ({ backgroundColor }) => {\n        let backgroundColorValue;\n\n        if (validColors.find((el) => el === backgroundColor)) {\n          backgroundColorValue = palette[backgroundColor]\n            ? palette[backgroundColor].main\n            : greyColors[backgroundColor];\n        } else {\n          backgroundColorValue = backgroundColor;\n        }\n\n        return backgroundColorValue;\n      },\n      color: ({ color }) => {\n        let colorValue;\n\n        if (validColors.find((el) => el === color)) {\n          colorValue = palette[color] ? palette[color].main : greyColors[color];\n        } else {\n          colorValue = color;\n        }\n\n        return colorValue;\n      },\n      borderRadius: ({ borderRadius }) => {\n        let borderRadiusValue;\n\n        if (validBorderRadius.find((el) => el === borderRadius)) {\n          borderRadiusValue = radius[borderRadius];\n        } else {\n          borderRadiusValue = borderRadius;\n        }\n\n        return borderRadiusValue;\n      },\n      boxShadow: ({ boxShadow }) => {\n        let boxShadowValue;\n\n        if (validBoxShadows.find((el) => el === boxShadow)) {\n          boxShadowValue = boxShadows[boxShadow];\n        } else {\n          boxShadowValue = boxShadows;\n        }\n\n        return boxShadowValue;\n      },\n    },\n\n    suiBox_backgroundGradient: {\n      backgroundImage: ({ backgroundColor }) => {\n        let backgroundValue;\n\n        if (validGradients.find((el) => el === backgroundColor)) {\n          backgroundValue = linearGradient(\n            gradients[backgroundColor].main,\n            gradients[backgroundColor].state\n          );\n        } else {\n          backgroundValue = \"none\";\n        }\n\n        return backgroundValue;\n      },\n    },\n  };\n});\n"]},"metadata":{},"sourceType":"module"}