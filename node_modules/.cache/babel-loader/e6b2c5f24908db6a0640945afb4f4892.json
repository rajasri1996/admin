{"ast":null,"code":"var _jsxFileName = \"C:\\\\Fund\\\\soft-ui-dashboard-pro-react-v2.0.0\\\\admin\\\\src\\\\context\\\\index.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\n/**\n=========================================================\n* Soft UI Dashboard PRO React - v2.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/soft-ui-dashboard-pro-material-ui\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n\n/**\n  This file is used for controlling the global states of the components,\n  you can customize the states for the different components here.\n*/\nimport { createContext, useContext, useReducer } from \"react\"; // prop-types is a library for typechecking of props\n\nimport PropTypes from \"prop-types\"; // The Soft UI Dashboard PRO Material main context\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SoftUI = /*#__PURE__*/createContext(); // Soft UI Dashboard PRO React reducer\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"MINI_SIDENAV\":\n      {\n        return { ...state,\n          miniSidenav: action.value\n        };\n      }\n\n    case \"TRANSPARENT_SIDENAV\":\n      {\n        return { ...state,\n          transparentSidenav: action.value\n        };\n      }\n\n    case \"SIDENAV_COLOR\":\n      {\n        return { ...state,\n          sidenavColor: action.value\n        };\n      }\n\n    case \"TRANSPARENT_NAVBAR\":\n      {\n        return { ...state,\n          transparentNavbar: action.value\n        };\n      }\n\n    case \"FIXED_NAVBAR\":\n      {\n        return { ...state,\n          fixedNavbar: action.value\n        };\n      }\n\n    case \"OPEN_CONFIGURATOR\":\n      {\n        return { ...state,\n          openConfigurator: action.value\n        };\n      }\n\n    case \"DIRECTION\":\n      {\n        return { ...state,\n          direction: action.value\n        };\n      }\n\n    case \"LAYOUT\":\n      {\n        return { ...state,\n          layout: action.value\n        };\n      }\n\n    default:\n      {\n        throw new Error(`Unhandled action type: ${action.type}`);\n      }\n  }\n} // Soft UI Dashboard PRO React context provider\n\n\nfunction SoftUIControllerProvider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const initialState = {\n    miniSidenav: false,\n    transparentSidenav: true,\n    sidenavColor: \"info\",\n    transparentNavbar: true,\n    fixedNavbar: true,\n    openConfigurator: false,\n    direction: \"ltr\",\n    layout: \"dashboard\"\n  };\n  const [controller, dispatch] = useReducer(reducer, initialState);\n  return /*#__PURE__*/_jsxDEV(SoftUI.Provider, {\n    value: [controller, dispatch],\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 10\n  }, this);\n} // Soft UI Dashboard PRO React custom hook for using context\n\n\n_s(SoftUIControllerProvider, \"fjjd7ZydehFye+0mKR7LjXUdcMg=\");\n\n_c = SoftUIControllerProvider;\n\nfunction useSoftUIController() {\n  _s2();\n\n  return useContext(SoftUI);\n} // Typechecking props for the SoftUIControllerProvider\n\n\n_s2(useSoftUIController, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nSoftUIControllerProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport { SoftUIControllerProvider, useSoftUIController };\n\nvar _c;\n\n$RefreshReg$(_c, \"SoftUIControllerProvider\");","map":{"version":3,"sources":["C:/Fund/soft-ui-dashboard-pro-react-v2.0.0/admin/src/context/index.js"],"names":["createContext","useContext","useReducer","PropTypes","SoftUI","reducer","state","action","type","miniSidenav","value","transparentSidenav","sidenavColor","transparentNavbar","fixedNavbar","openConfigurator","direction","layout","Error","SoftUIControllerProvider","children","initialState","controller","dispatch","useSoftUIController","propTypes","node","isRequired"],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAEA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,UAApC,QAAsD,OAAtD,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;;AACA,MAAMC,MAAM,gBAAGJ,aAAa,EAA5B,C,CAEA;;AACA,SAASK,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC9B,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,cAAL;AAAqB;AACnB,eAAO,EAAE,GAAGF,KAAL;AAAYG,UAAAA,WAAW,EAAEF,MAAM,CAACG;AAAhC,SAAP;AACD;;AACD,SAAK,qBAAL;AAA4B;AAC1B,eAAO,EAAE,GAAGJ,KAAL;AAAYK,UAAAA,kBAAkB,EAAEJ,MAAM,CAACG;AAAvC,SAAP;AACD;;AACD,SAAK,eAAL;AAAsB;AACpB,eAAO,EAAE,GAAGJ,KAAL;AAAYM,UAAAA,YAAY,EAAEL,MAAM,CAACG;AAAjC,SAAP;AACD;;AACD,SAAK,oBAAL;AAA2B;AACzB,eAAO,EAAE,GAAGJ,KAAL;AAAYO,UAAAA,iBAAiB,EAAEN,MAAM,CAACG;AAAtC,SAAP;AACD;;AACD,SAAK,cAAL;AAAqB;AACnB,eAAO,EAAE,GAAGJ,KAAL;AAAYQ,UAAAA,WAAW,EAAEP,MAAM,CAACG;AAAhC,SAAP;AACD;;AACD,SAAK,mBAAL;AAA0B;AACxB,eAAO,EAAE,GAAGJ,KAAL;AAAYS,UAAAA,gBAAgB,EAAER,MAAM,CAACG;AAArC,SAAP;AACD;;AACD,SAAK,WAAL;AAAkB;AAChB,eAAO,EAAE,GAAGJ,KAAL;AAAYU,UAAAA,SAAS,EAAET,MAAM,CAACG;AAA9B,SAAP;AACD;;AACD,SAAK,QAAL;AAAe;AACb,eAAO,EAAE,GAAGJ,KAAL;AAAYW,UAAAA,MAAM,EAAEV,MAAM,CAACG;AAA3B,SAAP;AACD;;AACD;AAAS;AACP,cAAM,IAAIQ,KAAJ,CAAW,0BAAyBX,MAAM,CAACC,IAAK,EAAhD,CAAN;AACD;AA3BH;AA6BD,C,CAED;;;AACA,SAASW,wBAAT,OAAgD;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AAC9C,QAAMC,YAAY,GAAG;AACnBZ,IAAAA,WAAW,EAAE,KADM;AAEnBE,IAAAA,kBAAkB,EAAE,IAFD;AAGnBC,IAAAA,YAAY,EAAE,MAHK;AAInBC,IAAAA,iBAAiB,EAAE,IAJA;AAKnBC,IAAAA,WAAW,EAAE,IALM;AAMnBC,IAAAA,gBAAgB,EAAE,KANC;AAOnBC,IAAAA,SAAS,EAAE,KAPQ;AAQnBC,IAAAA,MAAM,EAAE;AARW,GAArB;AAWA,QAAM,CAACK,UAAD,EAAaC,QAAb,IAAyBrB,UAAU,CAACG,OAAD,EAAUgB,YAAV,CAAzC;AAEA,sBAAO,QAAC,MAAD,CAAQ,QAAR;AAAiB,IAAA,KAAK,EAAE,CAACC,UAAD,EAAaC,QAAb,CAAxB;AAAA,cAAiDH;AAAjD;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,C,CAED;;;GAjBSD,wB;;KAAAA,wB;;AAkBT,SAASK,mBAAT,GAA+B;AAAA;;AAC7B,SAAOvB,UAAU,CAACG,MAAD,CAAjB;AACD,C,CAED;;;IAJSoB,mB;;AAKTL,wBAAwB,CAACM,SAAzB,GAAqC;AACnCL,EAAAA,QAAQ,EAAEjB,SAAS,CAACuB,IAAV,CAAeC;AADU,CAArC;AAIA,SAASR,wBAAT,EAAmCK,mBAAnC","sourcesContent":["/**\n=========================================================\n* Soft UI Dashboard PRO React - v2.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/soft-ui-dashboard-pro-material-ui\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n\n/**\n  This file is used for controlling the global states of the components,\n  you can customize the states for the different components here.\n*/\n\nimport { createContext, useContext, useReducer } from \"react\";\n\n// prop-types is a library for typechecking of props\nimport PropTypes from \"prop-types\";\n\n// The Soft UI Dashboard PRO Material main context\nconst SoftUI = createContext();\n\n// Soft UI Dashboard PRO React reducer\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"MINI_SIDENAV\": {\n      return { ...state, miniSidenav: action.value };\n    }\n    case \"TRANSPARENT_SIDENAV\": {\n      return { ...state, transparentSidenav: action.value };\n    }\n    case \"SIDENAV_COLOR\": {\n      return { ...state, sidenavColor: action.value };\n    }\n    case \"TRANSPARENT_NAVBAR\": {\n      return { ...state, transparentNavbar: action.value };\n    }\n    case \"FIXED_NAVBAR\": {\n      return { ...state, fixedNavbar: action.value };\n    }\n    case \"OPEN_CONFIGURATOR\": {\n      return { ...state, openConfigurator: action.value };\n    }\n    case \"DIRECTION\": {\n      return { ...state, direction: action.value };\n    }\n    case \"LAYOUT\": {\n      return { ...state, layout: action.value };\n    }\n    default: {\n      throw new Error(`Unhandled action type: ${action.type}`);\n    }\n  }\n}\n\n// Soft UI Dashboard PRO React context provider\nfunction SoftUIControllerProvider({ children }) {\n  const initialState = {\n    miniSidenav: false,\n    transparentSidenav: true,\n    sidenavColor: \"info\",\n    transparentNavbar: true,\n    fixedNavbar: true,\n    openConfigurator: false,\n    direction: \"ltr\",\n    layout: \"dashboard\",\n  };\n\n  const [controller, dispatch] = useReducer(reducer, initialState);\n\n  return <SoftUI.Provider value={[controller, dispatch]}>{children}</SoftUI.Provider>;\n}\n\n// Soft UI Dashboard PRO React custom hook for using context\nfunction useSoftUIController() {\n  return useContext(SoftUI);\n}\n\n// Typechecking props for the SoftUIControllerProvider\nSoftUIControllerProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport { SoftUIControllerProvider, useSoftUIController };\n"]},"metadata":{},"sourceType":"module"}