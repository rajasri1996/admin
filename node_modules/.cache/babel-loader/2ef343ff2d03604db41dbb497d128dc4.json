{"ast":null,"code":"var _jsxFileName = \"C:\\\\Fund\\\\soft\\\\admin\\\\src\\\\layouts\\\\pages\\\\account\\\\components\\\\Tab3\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\"; // prop-types is a library for typechecking of props\n\nimport PropTypes from \"prop-types\"; // @mui material components\n\nimport Grid from \"@mui/material/Grid\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Tabs from \"@mui/material/Tabs\";\nimport Tab from \"@mui/material/Tab\"; // Soft UI Dashboard PRO React components\n\nimport SuiBox from \"components/SuiBox\"; // Soft UI Dashboard PRO React base styles\n\nimport breakpoints from \"assets/theme/base/breakpoints\";\nimport General from \"layouts/pages/projects/general\";\nimport Timeline from \"layouts/pages/projects/timeline\"; // Soft UI Dashboard PRO React example components\n\nimport DashboardLayout from \"examples/LayoutContainers/DashboardLayout\";\nimport DashboardNavbar from \"examples/Navbars/DashboardNavbar\";\nimport Footer from \"examples/Footer\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction BaseLayout(_ref) {\n  _s();\n\n  let {\n    stickyNavbar,\n    children\n  } = _ref;\n  const [tabsOrientation, setTabsOrientation] = useState(\"horizontal\");\n  const [tabValue, setTabValue] = useState(0);\n  onst[(tabsOrientation, setTabsOrientation)] = useState(\"horizontal\"); // const [camera, setCamera] = useState(0);\n\n  useEffect(() => {\n    // A function that sets the orientation state of the tabs.\n    function handleTabsOrientation() {\n      return window.innerWidth < breakpoints.values.md ? setTabsOrientation(\"vertical\") : setTabsOrientation(\"horizontal\");\n    }\n    /** \r\n     The event listener that's calling the handleTabsOrientation function when resizing the window.\r\n    */\n\n\n    window.addEventListener(\"resize\", handleTabsOrientation); // Call the handleTabsOrientation function to set the state with the initial value.\n\n    handleTabsOrientation(); // Remove event listener on cleanup\n\n    return () => window.removeEventListener(\"resize\", handleTabsOrientation);\n  }, [tabsOrientation]); // const handleSetCamera = (event, newCamera) => setCamera(newCamera);\n\n  useEffect(() => {\n    // A function that sets the orientation state of the tabs.\n    function handleTabsOrientation() {\n      return window.innerWidth < breakpoints.values.sm ? setTabsOrientation(\"vertical\") : setTabsOrientation(\"horizontal\");\n    }\n    /** \r\n     The event listener that's calling the handleTabsOrientation function when resizing the window.\r\n    */\n\n\n    window.addEventListener(\"resize\", handleTabsOrientation); // Call the handleTabsOrientation function to set the state with the initial value.\n\n    handleTabsOrientation(); // Remove event listener on cleanup\n\n    return () => window.removeEventListener(\"resize\", handleTabsOrientation);\n  }, [tabsOrientation]);\n\n  const handleSetTabValue = (event, newValue) => setTabValue(newValue);\n\n  return /*#__PURE__*/_jsxDEV(DashboardLayout, {\n    children: [/*#__PURE__*/_jsxDEV(DashboardNavbar, {\n      absolute: !stickyNavbar,\n      isMini: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SuiBox, {\n      children: /*#__PURE__*/_jsxDEV(SuiBox, {\n        mt: stickyNavbar ? 3 : 10,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          p: 1,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 10,\n            sm: 12,\n            lg: 12,\n            children: /*#__PURE__*/_jsxDEV(AppBar, {\n              position: \"static\",\n              children: /*#__PURE__*/_jsxDEV(Tabs, {\n                orientation: tabsOrientation,\n                value: tabValue,\n                onChange: handleSetTabValue,\n                children: [/*#__PURE__*/_jsxDEV(Tab, {\n                  label: \" AUM (RTA Wise)\",\n                  style: {\n                    fontWeight: \"bold\",\n                    fontSize: \"18px\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Tab, {\n                  label: \"AUM (AMC Wise)\",\n                  style: {\n                    fontWeight: \"bold\",\n                    fontSize: \"18px\"\n                  },\n                  children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n                    to: \"/holding/ amcwiseaum\",\n                    children: \"AUM (AMC Wise)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 88,\n                    columnNumber: 115\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Tab, {\n                  label: \"AUM (User Wise)\",\n                  style: {\n                    fontWeight: \"bold\",\n                    fontSize: \"18px\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Tab, {\n                  label: \"AUM (Scheme Type Wise)\",\n                  style: {\n                    fontWeight: \"bold\",\n                    fontSize: \"18px\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Tab, {\n                  label: \"AUM (Scheme Wise) \",\n                  style: {\n                    fontWeight: \"bold\",\n                    fontSize: \"18px\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), children]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SuiBox, {\n      p: 1,\n      mt: 1,\n      width: \"100%\",\n      height: \"25rem\",\n      children: [/*#__PURE__*/_jsxDEV(General, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Timeline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n} // Setting default values for the props of BaseLayout\n\n\n_s(BaseLayout, \"7P02OybaTfNSCyJfVo6VuKO53Q0=\");\n\n_c = BaseLayout;\nBaseLayout.defaultProps = {\n  stickyNavbar: false\n}; // Typechecking props for BaseLayout\n\nBaseLayout.propTypes = {\n  stickyNavbar: PropTypes.bool,\n  children: PropTypes.node.isRequired\n};\nexport default BaseLayout; // import { useState, useEffect } from \"react\";\n// import Card from \"@mui/material/Card\";\n// import AppBar from \"@mui/material/AppBar\";\n// import Tabs from \"@mui/material/Tabs\";\n// import Tab from \"@mui/material/Tab\";\n// import SuiBox from \"components/SuiBox\";\n// import breakpoints from \"assets/theme/base/breakpoints\";\n// import DashboardLayout from \"examples/LayoutContainers/DashboardLayout\";\n// import DashboardNavbar from \"examples/Navbars/DashboardNavbar\";\n// import General from \"layouts/pages/projects/general\";\n// import Timeline from \"layouts/pages/projects/timeline\";\n// function Camera() {\n//     const [tabsOrientation, setTabsOrientation] = useState(\"horizontal\");\n//     const [camera, setCamera] = useState(0);\n//     useEffect(() => {\n//         // A function that sets the orientation state of the tabs.\n//         function handleTabsOrientation() {\n//             return window.innerWidth < breakpoints.values.md\n//                 ? setTabsOrientation(\"vertical\")\n//                 : setTabsOrientation(\"horizontal\");\n//         }\n//         /** \n//          The event listener that's calling the handleTabsOrientation function when resizing the window.\n//         */\n//         window.addEventListener(\"resize\", handleTabsOrientation);\n//         // Call the handleTabsOrientation function to set the state with the initial value.\n//         handleTabsOrientation();\n//         // Remove event listener on cleanup\n//         return () => window.removeEventListener(\"resize\", handleTabsOrientation);\n//     }, [tabsOrientation]);\n//     const handleSetCamera = (event, newCamera) => setCamera(newCamera);\n//     return (\n//         <DashboardLayout>\n//             <DashboardNavbar />\n//             <Card>\n//                 <SuiBox display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" pt={2} px={2}>\n//                     <SuiBox display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" width=\"100%\">\n//                         <SuiBox width=\"100%\">\n//                             <AppBar position=\"static\">\n//                                 <Tabs orientation={tabsOrientation} value={camera} onChange={handleSetCamera}>\n//                                     <Tab label=\"AUM (RTA wise) \" style={{ fontWeight: \"bold\" }} />\n//                                     <Tab label=\"AUM (AMC Wise)\" style={{ fontWeight: \"bold\" }} />\n//                                     <Tab label=\"AUM (User Wise)\" style={{ fontWeight: \"bold\" }} />\n//                                     <Tab label=\" AUM (Scheme Type Wise)\" style={{ fontWeight: \"bold\" }} />\n//                                     <Tab label=\" AUM (Scheme Wise)\" style={{ fontWeight: \"bold\" }} />\n//                                 </Tabs>\n//                             </AppBar>\n//                         </SuiBox>\n//                     </SuiBox>\n//                 </SuiBox>\n//                 <SuiBox p={1} mt={1} width=\"100%\" height=\"25rem\">\n//                     <General />\n//                     <Timeline />\n//                 </SuiBox>\n//             </Card>\n//         </DashboardLayout>\n//     );\n// }\n// export default Camera;\n\nvar _c;\n\n$RefreshReg$(_c, \"BaseLayout\");","map":{"version":3,"sources":["C:/Fund/soft/admin/src/layouts/pages/account/components/Tab3/index.js"],"names":["useState","useEffect","PropTypes","Grid","AppBar","Tabs","Tab","SuiBox","breakpoints","General","Timeline","DashboardLayout","DashboardNavbar","Footer","Link","BaseLayout","stickyNavbar","children","tabsOrientation","setTabsOrientation","tabValue","setTabValue","onst","handleTabsOrientation","window","innerWidth","values","md","addEventListener","removeEventListener","sm","handleSetTabValue","event","newValue","fontWeight","fontSize","defaultProps","propTypes","bool","node","isRequired"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\r\n// prop-types is a library for typechecking of props\r\nimport PropTypes from \"prop-types\";\r\n// @mui material components\r\nimport Grid from \"@mui/material/Grid\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Tabs from \"@mui/material/Tabs\";\r\nimport Tab from \"@mui/material/Tab\";\r\n\r\n// Soft UI Dashboard PRO React components\r\nimport SuiBox from \"components/SuiBox\";\r\n\r\n// Soft UI Dashboard PRO React base styles\r\nimport breakpoints from \"assets/theme/base/breakpoints\";\r\nimport General from \"layouts/pages/projects/general\";\r\nimport Timeline from \"layouts/pages/projects/timeline\";\r\n// Soft UI Dashboard PRO React example components\r\nimport DashboardLayout from \"examples/LayoutContainers/DashboardLayout\";\r\nimport DashboardNavbar from \"examples/Navbars/DashboardNavbar\";\r\nimport Footer from \"examples/Footer\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction BaseLayout({ stickyNavbar, children }) {\r\n    \r\n    const [tabsOrientation, setTabsOrientation] = useState(\"horizontal\");\r\n    const [tabValue, setTabValue] = useState(0);\r\n\r\n    onst[tabsOrientation, setTabsOrientation] = useState(\"horizontal\");\r\n\r\n    // const [camera, setCamera] = useState(0);\r\n\r\n    useEffect(() => {\r\n        // A function that sets the orientation state of the tabs.\r\n        function handleTabsOrientation() {\r\n            return window.innerWidth < breakpoints.values.md\r\n                ? setTabsOrientation(\"vertical\")\r\n                : setTabsOrientation(\"horizontal\");\r\n        }\r\n\r\n        /** \r\n         The event listener that's calling the handleTabsOrientation function when resizing the window.\r\n        */\r\n        window.addEventListener(\"resize\", handleTabsOrientation);\r\n\r\n        // Call the handleTabsOrientation function to set the state with the initial value.\r\n        handleTabsOrientation();\r\n\r\n        // Remove event listener on cleanup\r\n        return () => window.removeEventListener(\"resize\", handleTabsOrientation);\r\n    }, [tabsOrientation]);\r\n\r\n    // const handleSetCamera = (event, newCamera) => setCamera(newCamera);\r\n\r\n    useEffect(() => {\r\n        // A function that sets the orientation state of the tabs.\r\n        function handleTabsOrientation() {\r\n            return window.innerWidth < breakpoints.values.sm\r\n                ? setTabsOrientation(\"vertical\")\r\n                : setTabsOrientation(\"horizontal\");\r\n        }\r\n\r\n        /** \r\n         The event listener that's calling the handleTabsOrientation function when resizing the window.\r\n        */\r\n        window.addEventListener(\"resize\", handleTabsOrientation);\r\n\r\n        // Call the handleTabsOrientation function to set the state with the initial value.\r\n        handleTabsOrientation();\r\n\r\n        // Remove event listener on cleanup\r\n        return () => window.removeEventListener(\"resize\", handleTabsOrientation);\r\n    }, [tabsOrientation]);\r\n\r\n    const handleSetTabValue = (event, newValue) => setTabValue(newValue);\r\n\r\n    return (\r\n\r\n        <DashboardLayout>\r\n            <DashboardNavbar absolute={!stickyNavbar} isMini />\r\n            <SuiBox>\r\n                <SuiBox mt={stickyNavbar ? 3 : 10}>\r\n                    <Grid container p={1}>\r\n                        <Grid item xs={10} sm={12} lg={12}>\r\n                            <AppBar position=\"static\">\r\n                                <Tabs orientation={tabsOrientation} value={tabValue} onChange={handleSetTabValue} >\r\n                                    <Tab label=\" AUM (RTA Wise)\" style={{ fontWeight: \"bold\", fontSize: \"18px\" }} />\r\n\r\n                                    <Tab label=\"AUM (AMC Wise)\" style={{ fontWeight: \"bold\", fontSize: \"18px\" }}> <Link to=\"/holding/ amcwiseaum\">AUM (AMC Wise)</Link></Tab>\r\n\r\n                                    <Tab label=\"AUM (User Wise)\" style={{ fontWeight: \"bold\", fontSize: \"18px\" }} />\r\n\r\n                                    <Tab label=\"AUM (Scheme Type Wise)\" style={{ fontWeight: \"bold\", fontSize: \"18px\" }} />\r\n\r\n                                    <Tab label=\"AUM (Scheme Wise) \" style={{ fontWeight: \"bold\", fontSize: \"18px\" }} />\r\n\r\n\r\n                                </Tabs>\r\n                            </AppBar>\r\n                        </Grid>\r\n                    </Grid>\r\n                    {children}\r\n                </SuiBox>\r\n            </SuiBox>\r\n            <SuiBox p={1} mt={1} width=\"100%\" height=\"25rem\">\r\n                <General />\r\n                <Timeline />\r\n            </SuiBox>\r\n            <Footer />\r\n        </DashboardLayout>\r\n    );\r\n}\r\n\r\n// Setting default values for the props of BaseLayout\r\nBaseLayout.defaultProps = {\r\n    stickyNavbar: false,\r\n};\r\n\r\n// Typechecking props for BaseLayout\r\nBaseLayout.propTypes = {\r\n    stickyNavbar: PropTypes.bool,\r\n    children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default BaseLayout;\r\n\r\n// import { useState, useEffect } from \"react\";\r\n// import Card from \"@mui/material/Card\";\r\n// import AppBar from \"@mui/material/AppBar\";\r\n// import Tabs from \"@mui/material/Tabs\";\r\n// import Tab from \"@mui/material/Tab\";\r\n// import SuiBox from \"components/SuiBox\";\r\n// import breakpoints from \"assets/theme/base/breakpoints\";\r\n// import DashboardLayout from \"examples/LayoutContainers/DashboardLayout\";\r\n// import DashboardNavbar from \"examples/Navbars/DashboardNavbar\";\r\n\r\n// import General from \"layouts/pages/projects/general\";\r\n// import Timeline from \"layouts/pages/projects/timeline\";\r\n\r\n\r\n// function Camera() {\r\n//     const [tabsOrientation, setTabsOrientation] = useState(\"horizontal\");\r\n\r\n//     const [camera, setCamera] = useState(0);\r\n\r\n//     useEffect(() => {\r\n//         // A function that sets the orientation state of the tabs.\r\n//         function handleTabsOrientation() {\r\n//             return window.innerWidth < breakpoints.values.md\r\n//                 ? setTabsOrientation(\"vertical\")\r\n//                 : setTabsOrientation(\"horizontal\");\r\n//         }\r\n\r\n//         /** \r\n//          The event listener that's calling the handleTabsOrientation function when resizing the window.\r\n//         */\r\n//         window.addEventListener(\"resize\", handleTabsOrientation);\r\n\r\n//         // Call the handleTabsOrientation function to set the state with the initial value.\r\n//         handleTabsOrientation();\r\n\r\n//         // Remove event listener on cleanup\r\n//         return () => window.removeEventListener(\"resize\", handleTabsOrientation);\r\n//     }, [tabsOrientation]);\r\n\r\n//     const handleSetCamera = (event, newCamera) => setCamera(newCamera);\r\n\r\n\r\n\r\n//     return (\r\n\r\n//         <DashboardLayout>\r\n//             <DashboardNavbar />\r\n//             <Card>\r\n//                 <SuiBox display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" pt={2} px={2}>\r\n//                     <SuiBox display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" width=\"100%\">\r\n//                         <SuiBox width=\"100%\">\r\n//                             <AppBar position=\"static\">\r\n//                                 <Tabs orientation={tabsOrientation} value={camera} onChange={handleSetCamera}>\r\n//                                     <Tab label=\"AUM (RTA wise) \" style={{ fontWeight: \"bold\" }} />\r\n\r\n//                                     <Tab label=\"AUM (AMC Wise)\" style={{ fontWeight: \"bold\" }} />\r\n\r\n//                                     <Tab label=\"AUM (User Wise)\" style={{ fontWeight: \"bold\" }} />\r\n\r\n//                                     <Tab label=\" AUM (Scheme Type Wise)\" style={{ fontWeight: \"bold\" }} />\r\n\r\n//                                     <Tab label=\" AUM (Scheme Wise)\" style={{ fontWeight: \"bold\" }} />\r\n\r\n//                                 </Tabs>\r\n//                             </AppBar>\r\n//                         </SuiBox>\r\n\r\n//                     </SuiBox>\r\n//                 </SuiBox>\r\n//                 <SuiBox p={1} mt={1} width=\"100%\" height=\"25rem\">\r\n//                     <General />\r\n//                     <Timeline />\r\n//                 </SuiBox>\r\n//             </Card>\r\n\r\n//         </DashboardLayout>\r\n//     );\r\n// }\r\n\r\n// export default Camera;\r\n"]},"metadata":{},"sourceType":"module"}