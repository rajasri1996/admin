{"ast":null,"code":"var _jsxFileName = \"C:\\\\Fund\\\\soft\\\\admin\\\\src\\\\examples\\\\Charts\\\\PieChart\\\\index.js\",\n    _s = $RefreshSig$();\n\n/**\n=========================================================\n* Soft UI Dashboard PRO React - v2.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/soft-ui-dashboard-pro-material-ui\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\nimport { useMemo } from \"react\"; // porp-types is a library for typechecking of props\n\nimport PropTypes from \"prop-types\"; // react-chartjs-2 components\n\nimport { Pie } from \"react-chartjs-2\"; // @mui material components\n\nimport Card from \"@mui/material/Card\"; // Soft UI Dashboard PRO React components\n\nimport SuiBox from \"components/SuiBox\";\nimport SuiTypography from \"components/SuiTypography\"; // PieChart configurations\n\nimport configs from \"examples/Charts/PieChart/configs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PieChart(_ref) {\n  _s();\n\n  let {\n    title,\n    description,\n    height,\n    chart\n  } = _ref;\n  const {\n    data,\n    options\n  } = configs(chart.labels, chart.datasets);\n\n  const renderChart = /*#__PURE__*/_jsxDEV(SuiBox, {\n    p: 2,\n    children: [title || description ? /*#__PURE__*/_jsxDEV(SuiBox, {\n      px: description ? 1 : 0,\n      pt: description ? 1 : 0,\n      children: [title && /*#__PURE__*/_jsxDEV(SuiBox, {\n        mb: 1,\n        children: /*#__PURE__*/_jsxDEV(SuiTypography, {\n          variant: \"h6\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(SuiBox, {\n        mb: 2,\n        children: /*#__PURE__*/_jsxDEV(SuiTypography, {\n          variant: \"button\",\n          fontWeight: \"regular\",\n          textColor: \"text\",\n          children: description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this) : null, useMemo(() => /*#__PURE__*/_jsxDEV(SuiBox, {\n      height: height,\n      children: /*#__PURE__*/_jsxDEV(Pie, {\n        data: data,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }, this), [chart, height])]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n\n  return title || description ? /*#__PURE__*/_jsxDEV(Card, {\n    children: renderChart\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 33\n  }, this) : renderChart;\n} // Setting default values for the props of PieChart\n\n\n_s(PieChart, \"nwk+m61qLgjDVUp4IGV/072DDN4=\");\n\n_c = PieChart;\nPieChart.defaultProps = {\n  title: \"\",\n  description: \"\",\n  height: \"19.125rem\"\n}; // Typechecking props for the PieChart\n\nPieChart.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  chart: PropTypes.objectOf(PropTypes.oneOfType([PropTypes.array, PropTypes.object])).isRequired\n};\nexport default PieChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"PieChart\");","map":{"version":3,"sources":["C:/Fund/soft/admin/src/examples/Charts/PieChart/index.js"],"names":["useMemo","PropTypes","Pie","Card","SuiBox","SuiTypography","configs","PieChart","title","description","height","chart","data","options","labels","datasets","renderChart","defaultProps","propTypes","string","oneOfType","node","number","objectOf","array","object","isRequired"],"mappings":"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","sourcesContent":["/**\n=========================================================\n* Soft UI Dashboard PRO React - v2.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/soft-ui-dashboard-pro-material-ui\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n\nimport { useMemo } from \"react\";\n\n// porp-types is a library for typechecking of props\nimport PropTypes from \"prop-types\";\n\n// react-chartjs-2 components\nimport { Pie } from \"react-chartjs-2\";\n\n// @mui material components\nimport Card from \"@mui/material/Card\";\n\n// Soft UI Dashboard PRO React components\nimport SuiBox from \"components/SuiBox\";\nimport SuiTypography from \"components/SuiTypography\";\n\n// PieChart configurations\nimport configs from \"examples/Charts/PieChart/configs\";\n\nfunction PieChart({ title, description, height, chart }) {\n  const { data, options } = configs(chart.labels, chart.datasets);\n\n  const renderChart = (\n    <SuiBox p={2}>\n      {title || description ? (\n        <SuiBox px={description ? 1 : 0} pt={description ? 1 : 0}>\n          {title && (\n            <SuiBox mb={1}>\n              <SuiTypography variant=\"h6\">{title}</SuiTypography>\n            </SuiBox>\n          )}\n          <SuiBox mb={2}>\n            <SuiTypography variant=\"button\" fontWeight=\"regular\" textColor=\"text\">\n              {description}\n            </SuiTypography>\n          </SuiBox>\n        </SuiBox>\n      ) : null}\n      {useMemo(\n        () => (\n          <SuiBox height={height}>\n            <Pie data={data} options={options} />\n          </SuiBox>\n        ),\n        [chart, height]\n      )}\n    </SuiBox>\n  );\n\n  return title || description ? <Card>{renderChart}</Card> : renderChart;\n}\n\n// Setting default values for the props of PieChart\nPieChart.defaultProps = {\n  title: \"\",\n  description: \"\",\n  height: \"19.125rem\",\n};\n\n// Typechecking props for the PieChart\nPieChart.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  chart: PropTypes.objectOf(PropTypes.oneOfType([PropTypes.array, PropTypes.object])).isRequired,\n};\n\nexport default PieChart;\n"]},"metadata":{},"sourceType":"module"}