{"ast":null,"code":"var _jsxFileName = \"C:\\\\Fund\\\\soft\\\\admin\\\\src\\\\examples\\\\Cards\\\\PlaceholderCard\\\\index.js\";\n\n/**\n=========================================================\n* Soft UI Dashboard PRO React - v2.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/soft-ui-dashboard-pro-material-ui\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n// prop-types is a library for typechecking of props\nimport PropTypes from \"prop-types\"; // clsx is a utility for constructing className strings conditionally\n\nimport clsx from \"clsx\"; // @mui material components\n\nimport Card from \"@mui/material/Card\";\nimport Icon from \"@mui/material/Icon\"; // Soft UI Dashboard PRO React components\n\nimport SuiBox from \"components/SuiBox\";\nimport SuiTypography from \"components/SuiTypography\"; // Custom styles for PlaceholderCard\n\nimport styles from \"examples/Cards/PlaceholderCard/styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PlaceholderCard(_ref) {\n  let {\n    icon,\n    title,\n    hasBorder,\n    outlined\n  } = _ref;\n  const classes = styles({\n    hasBorder\n  });\n  return /*#__PURE__*/_jsxDEV(Card, {\n    raised: true,\n    className: clsx(classes.placeholderCard, {\n      [classes.placeholderCard_outlined]: outlined\n    }),\n    children: /*#__PURE__*/_jsxDEV(SuiBox, {\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      textAlign: \"center\",\n      height: \"100%\",\n      p: 3,\n      children: [/*#__PURE__*/_jsxDEV(SuiBox, {\n        color: \"secondary\",\n        mb: 0.5,\n        children: /*#__PURE__*/_jsxDEV(Icon, {\n          fontSize: \"default\",\n          className: \" font-bold\",\n          children: icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SuiTypography, {\n        variant: title.variant,\n        textColor: \"secondary\",\n        children: title.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n} // Setting default values for the props of PlaceholderCard\n\n\n_c = PlaceholderCard;\nPlaceholderCard.defaultProps = {\n  icon: \"add\",\n  hasBorder: false,\n  outlined: false\n}; // Typechecking props for the PlaceholderCard\n\nPlaceholderCard.propTypes = {\n  icon: PropTypes.node,\n  title: PropTypes.shape({\n    variant: PropTypes.string.isRequired,\n    text: PropTypes.string.isRequired\n  }).isRequired,\n  hasBorder: PropTypes.bool,\n  outlined: PropTypes.bool\n};\nexport default PlaceholderCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlaceholderCard\");","map":{"version":3,"sources":["C:/Fund/soft/admin/src/examples/Cards/PlaceholderCard/index.js"],"names":["PropTypes","clsx","Card","Icon","SuiBox","SuiTypography","styles","PlaceholderCard","icon","title","hasBorder","outlined","classes","placeholderCard","placeholderCard_outlined","variant","text","defaultProps","propTypes","node","shape","string","isRequired","bool"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,OAAOA,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,OAAOC,IAAP,MAAiB,MAAjB,C,CAEA;;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,IAAP,MAAiB,oBAAjB,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,aAAP,MAA0B,0BAA1B,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,uCAAnB;;;AAEA,SAASC,eAAT,OAA+D;AAAA,MAAtC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,SAAf;AAA0BC,IAAAA;AAA1B,GAAsC;AAC7D,QAAMC,OAAO,GAAGN,MAAM,CAAC;AAAEI,IAAAA;AAAF,GAAD,CAAtB;AAEA,sBACE,QAAC,IAAD;AACE,IAAA,MAAM,MADR;AAEE,IAAA,SAAS,EAAET,IAAI,CAACW,OAAO,CAACC,eAAT,EAA0B;AACvC,OAACD,OAAO,CAACE,wBAAT,GAAoCH;AADG,KAA1B,CAFjB;AAAA,2BAME,QAAC,MAAD;AACE,MAAA,OAAO,EAAC,MADV;AAEE,MAAA,aAAa,EAAC,QAFhB;AAGE,MAAA,cAAc,EAAC,QAHjB;AAIE,MAAA,SAAS,EAAC,QAJZ;AAKE,MAAA,MAAM,EAAC,MALT;AAME,MAAA,CAAC,EAAE,CANL;AAAA,8BAQE,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,WAAd;AAA0B,QAAA,EAAE,EAAE,GAA9B;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,QAAQ,EAAC,SAAf;AAAyB,UAAA,SAAS,EAAC,YAAnC;AAAA,oBACGH;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cARF,eAaE,QAAC,aAAD;AAAe,QAAA,OAAO,EAAEC,KAAK,CAACM,OAA9B;AAAuC,QAAA,SAAS,EAAC,WAAjD;AAAA,kBACGN,KAAK,CAACO;AADT;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD,C,CAED;;;KA/BST,e;AAgCTA,eAAe,CAACU,YAAhB,GAA+B;AAC7BT,EAAAA,IAAI,EAAE,KADuB;AAE7BE,EAAAA,SAAS,EAAE,KAFkB;AAG7BC,EAAAA,QAAQ,EAAE;AAHmB,CAA/B,C,CAMA;;AACAJ,eAAe,CAACW,SAAhB,GAA4B;AAC1BV,EAAAA,IAAI,EAAER,SAAS,CAACmB,IADU;AAE1BV,EAAAA,KAAK,EAAET,SAAS,CAACoB,KAAV,CAAgB;AACrBL,IAAAA,OAAO,EAAEf,SAAS,CAACqB,MAAV,CAAiBC,UADL;AAErBN,IAAAA,IAAI,EAAEhB,SAAS,CAACqB,MAAV,CAAiBC;AAFF,GAAhB,EAGJA,UALuB;AAM1BZ,EAAAA,SAAS,EAAEV,SAAS,CAACuB,IANK;AAO1BZ,EAAAA,QAAQ,EAAEX,SAAS,CAACuB;AAPM,CAA5B;AAUA,eAAehB,eAAf","sourcesContent":["/**\n=========================================================\n* Soft UI Dashboard PRO React - v2.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/soft-ui-dashboard-pro-material-ui\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n\n// prop-types is a library for typechecking of props\nimport PropTypes from \"prop-types\";\n\n// clsx is a utility for constructing className strings conditionally\nimport clsx from \"clsx\";\n\n// @mui material components\nimport Card from \"@mui/material/Card\";\nimport Icon from \"@mui/material/Icon\";\n\n// Soft UI Dashboard PRO React components\nimport SuiBox from \"components/SuiBox\";\nimport SuiTypography from \"components/SuiTypography\";\n\n// Custom styles for PlaceholderCard\nimport styles from \"examples/Cards/PlaceholderCard/styles\";\n\nfunction PlaceholderCard({ icon, title, hasBorder, outlined }) {\n  const classes = styles({ hasBorder });\n\n  return (\n    <Card\n      raised\n      className={clsx(classes.placeholderCard, {\n        [classes.placeholderCard_outlined]: outlined,\n      })}\n    >\n      <SuiBox\n        display=\"flex\"\n        flexDirection=\"column\"\n        justifyContent=\"center\"\n        textAlign=\"center\"\n        height=\"100%\"\n        p={3}\n      >\n        <SuiBox color=\"secondary\" mb={0.5}>\n          <Icon fontSize=\"default\" className=\" font-bold\">\n            {icon}\n          </Icon>\n        </SuiBox>\n        <SuiTypography variant={title.variant} textColor=\"secondary\">\n          {title.text}\n        </SuiTypography>\n      </SuiBox>\n    </Card>\n  );\n}\n\n// Setting default values for the props of PlaceholderCard\nPlaceholderCard.defaultProps = {\n  icon: \"add\",\n  hasBorder: false,\n  outlined: false,\n};\n\n// Typechecking props for the PlaceholderCard\nPlaceholderCard.propTypes = {\n  icon: PropTypes.node,\n  title: PropTypes.shape({\n    variant: PropTypes.string.isRequired,\n    text: PropTypes.string.isRequired,\n  }).isRequired,\n  hasBorder: PropTypes.bool,\n  outlined: PropTypes.bool,\n};\n\nexport default PlaceholderCard;\n"]},"metadata":{},"sourceType":"module"}