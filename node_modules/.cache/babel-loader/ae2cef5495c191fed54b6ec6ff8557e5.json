{"ast":null,"code":"// /**\n// =========================================================\n// * Soft UI Dashboard PRO React - v2.0.0\n// =========================================================\n// * Product Page: https://www.creative-tim.com/product/soft-ui-dashboard-pro-material-ui\n// * Copyright 2021 Creative Tim (https://www.creative-tim.com)\n// Coded by www.creative-tim.com\n//  =========================================================\n// * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n// */\n// import { useState } from \"react\";\n// // formik components\n// import { Formik, Form } from \"formik\";\n// // @mui material components\n// import Grid from \"@mui/material/Grid\";\n// import Card from \"@mui/material/Card\";\n// import Stepper from \"@mui/material/Stepper\";\n// import Step from \"@mui/material/Step\";\n// import StepLabel from \"@mui/material/StepLabel\";\n// // Soft UI Dashboard PRO React components\n// import SuiBox from \"components/SuiBox\";\n// import SuiButton from \"components/SuiButton\";\n// // Soft UI Dashboard PRO React example components\n// import DashboardLayout from \"examples/LayoutContainers/DashboardLayout\";\n// import DashboardNavbar from \"examples/Navbars/DashboardNavbar\";\n// import Footer from \"examples/Footer\";\n// // NewUser page components\n// import UserInfo from \"layouts/pages/users/new-user/components/UserInfo\";\n// import Address from \"layouts/pages/users/new-user/components/Address\";\n// import Socials from \"layouts/pages/users/new-user/components/Socials\";\n// import Profile from \"layouts/pages/users/new-user/components/Profile\";\n// // NewUser layout schemas for form and form feilds\n// import validations from \"layouts/pages/users/new-user/schemas/validations\";\n// import form from \"layouts/pages/users/new-user/schemas/form\";\n// import initialValues from \"layouts/pages/users/new-user/schemas/initialValues\";\n// function getSteps() {\n//   return [\"User Info\", \"Address\", \"Social\", \"Profile\"];\n// }\n// function getStepContent(stepIndex, formData) {\n//   switch (stepIndex) {\n//     case 0:\n//       return <UserInfo formData={formData} />;\n//     case 1:\n//       return <Address formData={formData} />;\n//     case 2:\n//       return <Socials formData={formData} />;\n//     case 3:\n//       return <Profile formData={formData} />;\n//     default:\n//       return null;\n//   }\n// }\n// function NewUser() {\n//   const [activeStep, setActiveStep] = useState(0);\n//   const steps = getSteps();\n//   const { formId, formField } = form;\n//   const currentValidation = validations[activeStep];\n//   const isLastStep = activeStep === steps.length - 1;\n//   const sleep = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\n//   const handleBack = () => setActiveStep(activeStep - 1);\n//   const submitForm = async (values, actions) => {\n//     await sleep(1000);\n//     // eslint-disable-next-line no-alert\n//     alert(JSON.stringify(values, null, 2));\n//     actions.setSubmitting(false);\n//     actions.resetForm();\n//     setActiveStep(0);\n//   };\n//   const handleSubmit = (values, actions) => {\n//     if (isLastStep) {\n//       submitForm(values, actions);\n//     } else {\n//       setActiveStep(activeStep + 1);\n//       actions.setTouched({});\n//       actions.setSubmitting(false);\n//     }\n//   };\n//   return (\n//     <DashboardLayout>\n//       <DashboardNavbar />\n//       <SuiBox py={3} mb={20}>\n//         <Grid container justifyContent=\"center\" className=\"h-100\">\n//           <Grid item xs={12} lg={8}>\n//             <Stepper activeStep={activeStep} alternativeLabel>\n//               {steps.map((label) => (\n//                 <Step key={label}>\n//                   <StepLabel>{label}</StepLabel>\n//                 </Step>\n//               ))}\n//             </Stepper>\n//             <Formik\n//               initialValues={initialValues}\n//               validationSchema={currentValidation}\n//               onSubmit={handleSubmit}\n//             >\n//               {({ values, errors, touched, isSubmitting }) => (\n//                 <Form id={formId} autoComplete=\"off\">\n//                   <Card className=\"h-100\">\n//                     <SuiBox p={2}>\n//                       <SuiBox>\n//                         {getStepContent(activeStep, {\n//                           values,\n//                           touched,\n//                           formField,\n//                           errors,\n//                         })}\n//                         <SuiBox mt={2} width=\"100%\" display=\"flex\" justifyContent=\"space-between\">\n//                           {activeStep === 0 ? (\n//                             <SuiBox />\n//                           ) : (\n//                             <SuiButton variant=\"gradient\" buttonColor=\"light\" onClick={handleBack}>\n//                               back\n//                             </SuiButton>\n//                           )}\n//                           <SuiButton\n//                             disabled={isSubmitting}\n//                             type=\"submit\"\n//                             variant=\"gradient\"\n//                             buttonColor=\"dark\"\n//                           >\n//                             {isLastStep ? \"send\" : \"next\"}\n//                           </SuiButton>\n//                         </SuiBox>\n//                       </SuiBox>\n//                     </SuiBox>\n//                   </Card>\n//                 </Form>\n//               )}\n//             </Formik>\n//           </Grid>\n//         </Grid>\n//       </SuiBox>\n//       <Footer />\n//     </DashboardLayout>\n//   );\n// }\n// export default NewUser;","map":{"version":3,"sources":["C:/Fund/soft/admin/src/layouts/pages/users/new-user/index.js"],"names":[],"mappingssourcesContent":["// /**\n// =========================================================\n// * Soft UI Dashboard PRO React - v2.0.0\n// =========================================================\n\n// * Product Page: https://www.creative-tim.com/product/soft-ui-dashboard-pro-material-ui\n// * Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\n// Coded by www.creative-tim.com\n\n//  =========================================================\n\n// * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n// */\n\n// import { useState } from \"react\";\n\n// // formik components\n// import { Formik, Form } from \"formik\";\n\n// // @mui material components\n// import Grid from \"@mui/material/Grid\";\n// import Card from \"@mui/material/Card\";\n// import Stepper from \"@mui/material/Stepper\";\n// import Step from \"@mui/material/Step\";\n// import StepLabel from \"@mui/material/StepLabel\";\n\n// // Soft UI Dashboard PRO React components\n// import SuiBox from \"components/SuiBox\";\n// import SuiButton from \"components/SuiButton\";\n\n// // Soft UI Dashboard PRO React example components\n// import DashboardLayout from \"examples/LayoutContainers/DashboardLayout\";\n// import DashboardNavbar from \"examples/Navbars/DashboardNavbar\";\n// import Footer from \"examples/Footer\";\n\n// // NewUser page components\n// import UserInfo from \"layouts/pages/users/new-user/components/UserInfo\";\n// import Address from \"layouts/pages/users/new-user/components/Address\";\n// import Socials from \"layouts/pages/users/new-user/components/Socials\";\n// import Profile from \"layouts/pages/users/new-user/components/Profile\";\n\n// // NewUser layout schemas for form and form feilds\n// import validations from \"layouts/pages/users/new-user/schemas/validations\";\n// import form from \"layouts/pages/users/new-user/schemas/form\";\n// import initialValues from \"layouts/pages/users/new-user/schemas/initialValues\";\n\n// function getSteps() {\n//   return [\"User Info\", \"Address\", \"Social\", \"Profile\"];\n// }\n\n// function getStepContent(stepIndex, formData) {\n//   switch (stepIndex) {\n//     case 0:\n//       return <UserInfo formData={formData} />;\n//     case 1:\n//       return <Address formData={formData} />;\n//     case 2:\n//       return <Socials formData={formData} />;\n//     case 3:\n//       return <Profile formData={formData} />;\n//     default:\n//       return null;\n//   }\n// }\n\n// function NewUser() {\n//   const [activeStep, setActiveStep] = useState(0);\n//   const steps = getSteps();\n//   const { formId, formField } = form;\n//   const currentValidation = validations[activeStep];\n//   const isLastStep = activeStep === steps.length - 1;\n\n//   const sleep = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\n//   const handleBack = () => setActiveStep(activeStep - 1);\n\n//   const submitForm = async (values, actions) => {\n//     await sleep(1000);\n\n//     // eslint-disable-next-line no-alert\n//     alert(JSON.stringify(values, null, 2));\n\n//     actions.setSubmitting(false);\n//     actions.resetForm();\n\n//     setActiveStep(0);\n//   };\n\n//   const handleSubmit = (values, actions) => {\n//     if (isLastStep) {\n//       submitForm(values, actions);\n//     } else {\n//       setActiveStep(activeStep + 1);\n//       actions.setTouched({});\n//       actions.setSubmitting(false);\n//     }\n//   };\n\n//   return (\n//     <DashboardLayout>\n//       <DashboardNavbar />\n//       <SuiBox py={3} mb={20}>\n//         <Grid container justifyContent=\"center\" className=\"h-100\">\n//           <Grid item xs={12} lg={8}>\n//             <Stepper activeStep={activeStep} alternativeLabel>\n//               {steps.map((label) => (\n//                 <Step key={label}>\n//                   <StepLabel>{label}</StepLabel>\n//                 </Step>\n//               ))}\n//             </Stepper>\n//             <Formik\n//               initialValues={initialValues}\n//               validationSchema={currentValidation}\n//               onSubmit={handleSubmit}\n//             >\n//               {({ values, errors, touched, isSubmitting }) => (\n//                 <Form id={formId} autoComplete=\"off\">\n//                   <Card className=\"h-100\">\n//                     <SuiBox p={2}>\n//                       <SuiBox>\n//                         {getStepContent(activeStep, {\n//                           values,\n//                           touched,\n//                           formField,\n//                           errors,\n//                         })}\n//                         <SuiBox mt={2} width=\"100%\" display=\"flex\" justifyContent=\"space-between\">\n//                           {activeStep === 0 ? (\n//                             <SuiBox />\n//                           ) : (\n//                             <SuiButton variant=\"gradient\" buttonColor=\"light\" onClick={handleBack}>\n//                               back\n//                             </SuiButton>\n//                           )}\n//                           <SuiButton\n//                             disabled={isSubmitting}\n//                             type=\"submit\"\n//                             variant=\"gradient\"\n//                             buttonColor=\"dark\"\n//                           >\n//                             {isLastStep ? \"send\" : \"next\"}\n//                           </SuiButton>\n//                         </SuiBox>\n//                       </SuiBox>\n//                     </SuiBox>\n//                   </Card>\n//                 </Form>\n//               )}\n//             </Formik>\n//           </Grid>\n//         </Grid>\n//       </SuiBox>\n//       <Footer />\n//     </DashboardLayout>\n//   );\n// }\n\n// export default NewUser;\n"]},"metadata":{},"sourceType":"module"}