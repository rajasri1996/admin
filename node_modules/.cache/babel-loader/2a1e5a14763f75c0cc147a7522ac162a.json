{"ast":null,"code":"var _jsxFileName = \"C:\\\\Fund\\\\soft\\\\admin\\\\src\\\\examples\\\\Charts\\\\DoughnutCharts\\\\ComplexReportsDoughnutChart\\\\index.js\",\n    _s = $RefreshSig$();\n\n/**\n=========================================================\n* Soft UI Dashboard PRO React - v2.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/soft-ui-dashboard-pro-material-ui\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\nimport { useMemo } from \"react\"; // react-router-dom components\n\nimport { Link } from \"react-router-dom\"; // prop-types is a library for typechecking of props\n\nimport PropTypes from \"prop-types\"; // react-chartjs-2 components\n\nimport { Doughnut } from \"react-chartjs-2\"; // @mui material components\n\nimport Card from \"@mui/material/Card\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport Grid from \"@mui/material/Grid\";\nimport Icon from \"@mui/material/Icon\"; // Soft UI Dashboard PRO React components\n\nimport SuiBox from \"components/SuiBox\";\nimport SuiTypography from \"components/SuiTypography\";\nimport SuiButton from \"components/SuiButton\"; // Soft UI Dashboard PRO React example components\n\nimport ComplexReportsDoughnutChartItem from \"examples/Charts/DoughnutCharts/ComplexReportsDoughnutChart/ComplexReportsDoughnutChartItem\"; // ComplexReportsDoughnutChart configurations\n\nimport configs from \"examples/Charts/DoughnutCharts/ComplexReportsDoughnutChart/configs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ComplexReportsDoughnutChart(_ref) {\n  _s();\n\n  let {\n    title,\n    chart,\n    tooltip,\n    action\n  } = _ref;\n  const {\n    data,\n    options\n  } = configs(chart.labels, chart.datasets);\n  const renderItems = chart.labels.map((label, key) => /*#__PURE__*/_jsxDEV(ComplexReportsDoughnutChartItem, {\n    image: chart.images && chart.images[key],\n    title: label,\n    percentage: `${chart.datasets.data[key]}%`,\n    hasBorder: key !== chart.labels.length - 1\n  }, label, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this));\n\n  const renderButton = () => {\n    let template;\n\n    if (action) {\n      template = action.type === \"internal\" ? /*#__PURE__*/_jsxDEV(SuiBox, {\n        mt: 3,\n        mb: 2,\n        children: /*#__PURE__*/_jsxDEV(SuiButton, {\n          component: Link,\n          to: action.route,\n          variant: \"gradient\",\n          buttonColor: action.color,\n          size: \"small\",\n          children: action.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(SuiBox, {\n        mt: 3,\n        mb: 2,\n        children: /*#__PURE__*/_jsxDEV(SuiButton, {\n          component: \"a\",\n          href: action.route,\n          target: \"_blank\",\n          rel: \"noreferrer\",\n          variant: \"gradient\",\n          buttonColor: action.color,\n          size: \"small\",\n          children: action.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this);\n    }\n\n    return template;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"h-100\",\n    children: [/*#__PURE__*/_jsxDEV(SuiBox, {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      pt: 2,\n      px: 2,\n      children: [/*#__PURE__*/_jsxDEV(SuiTypography, {\n        variant: \"h6\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: tooltip,\n        placement: \"right\",\n        children: /*#__PURE__*/_jsxDEV(SuiButton, {\n          variant: \"outlined\",\n          buttonColor: \"secondary\",\n          size: \"small\",\n          circular: true,\n          iconOnly: true,\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            className: \"\",\n            children: \"priority_high\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SuiBox, {\n      position: \"relative\",\n      p: 2,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          lg: 5,\n          className: \"text-center\",\n          children: /*#__PURE__*/_jsxDEV(SuiBox, {\n            height: \"100%\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            children: [/*#__PURE__*/_jsxDEV(SuiBox, {\n              height: \"100%\",\n              mt: 5,\n              mx: 1,\n              children: useMemo(() => /*#__PURE__*/_jsxDEV(Doughnut, {\n                data: data,\n                options: options\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 21\n              }, this), [chart])\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this), renderButton()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          lg: 7,\n          children: useMemo(() => renderItems, [chart])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n} // Setting default values for the props of ComplexReportsDoughnutChart\n\n\n_s(ComplexReportsDoughnutChart, \"g63yf/1Nl96vf48KnWV58o4AYmI=\");\n\n_c = ComplexReportsDoughnutChart;\nComplexReportsDoughnutChart.defaultProps = {\n  tooltip: \"\",\n  action: false\n}; // Typechecking props for the ComplexReportsDoughnutChart\n\nComplexReportsDoughnutChart.propTypes = {\n  title: PropTypes.string.isRequired,\n  chart: PropTypes.shape({\n    images: PropTypes.arrayOf(PropTypes.string),\n    labels: PropTypes.arrayOf(PropTypes.string).isRequired,\n    datasets: PropTypes.objectOf(PropTypes.oneOfType([PropTypes.object, PropTypes.array, PropTypes.string])).isRequired\n  }).isRequired,\n  tooltip: PropTypes.string,\n  action: PropTypes.oneOfType([PropTypes.bool, PropTypes.shape({\n    type: PropTypes.oneOf([\"external\", \"internal\"]).isRequired,\n    route: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    color: PropTypes.oneOf([\"primary\", \"secondary\", \"info\", \"success\", \"warning\", \"error\", \"dark\", \"light\"])\n  })])\n};\nexport default ComplexReportsDoughnutChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"ComplexReportsDoughnutChart\");","map":{"version":3,"sources":["C:/Fund/soft/admin/src/examples/Charts/DoughnutCharts/ComplexReportsDoughnutChart/index.js"],"names":["useMemo","Link","PropTypes","Doughnut","Card","Tooltip","Grid","Icon","SuiBox","SuiTypography","SuiButton","ComplexReportsDoughnutChartItem","configs","ComplexReportsDoughnutChart","title","chart","tooltip","action","data","options","labels","datasets","renderItems","map","label","key","images","length","renderButton","template","type","route","color","defaultProps","propTypes","string","isRequired","shape","arrayOf","objectOf","oneOfType","object","array","bool","oneOf"],"mappings":"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","sourcesContent":["/**\n=========================================================\n* Soft UI Dashboard PRO React - v2.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/soft-ui-dashboard-pro-material-ui\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n\nimport { useMemo } from \"react\";\n\n// react-router-dom components\nimport { Link } from \"react-router-dom\";\n\n// prop-types is a library for typechecking of props\nimport PropTypes from \"prop-types\";\n\n// react-chartjs-2 components\nimport { Doughnut } from \"react-chartjs-2\";\n\n// @mui material components\nimport Card from \"@mui/material/Card\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport Grid from \"@mui/material/Grid\";\nimport Icon from \"@mui/material/Icon\";\n\n// Soft UI Dashboard PRO React components\nimport SuiBox from \"components/SuiBox\";\nimport SuiTypography from \"components/SuiTypography\";\nimport SuiButton from \"components/SuiButton\";\n\n// Soft UI Dashboard PRO React example components\nimport ComplexReportsDoughnutChartItem from \"examples/Charts/DoughnutCharts/ComplexReportsDoughnutChart/ComplexReportsDoughnutChartItem\";\n\n// ComplexReportsDoughnutChart configurations\nimport configs from \"examples/Charts/DoughnutCharts/ComplexReportsDoughnutChart/configs\";\n\nfunction ComplexReportsDoughnutChart({ title, chart, tooltip, action }) {\n  const { data, options } = configs(chart.labels, chart.datasets);\n\n  const renderItems = chart.labels.map((label, key) => (\n    <ComplexReportsDoughnutChartItem\n      image={chart.images && chart.images[key]}\n      title={label}\n      key={label}\n      percentage={`${chart.datasets.data[key]}%`}\n      hasBorder={key !== chart.labels.length - 1}\n    />\n  ));\n\n  const renderButton = () => {\n    let template;\n\n    if (action) {\n      template =\n        action.type === \"internal\" ? (\n          <SuiBox mt={3} mb={2}>\n            <SuiButton\n              component={Link}\n              to={action.route}\n              variant=\"gradient\"\n              buttonColor={action.color}\n              size=\"small\"\n            >\n              {action.label}\n            </SuiButton>\n          </SuiBox>\n        ) : (\n          <SuiBox mt={3} mb={2}>\n            <SuiButton\n              component=\"a\"\n              href={action.route}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              variant=\"gradient\"\n              buttonColor={action.color}\n              size=\"small\"\n            >\n              {action.label}\n            </SuiButton>\n          </SuiBox>\n        );\n    }\n\n    return template;\n  };\n\n  return (\n    <Card className=\"h-100\">\n      <SuiBox display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" pt={2} px={2}>\n        <SuiTypography variant=\"h6\">{title}</SuiTypography>\n        <Tooltip title={tooltip} placement=\"right\">\n          <SuiButton variant=\"outlined\" buttonColor=\"secondary\" size=\"small\" circular iconOnly>\n            <Icon className=\"\">priority_high</Icon>\n          </SuiButton>\n        </Tooltip>\n      </SuiBox>\n      <SuiBox position=\"relative\" p={2}>\n        <Grid container spacing={2}>\n          <Grid item xs={12} lg={5} className=\"text-center\">\n            <SuiBox height=\"100%\" display=\"flex\" flexDirection=\"column\">\n              <SuiBox height=\"100%\" mt={5} mx={1}>\n                {useMemo(\n                  () => (\n                    <Doughnut data={data} options={options} />\n                  ),\n                  [chart]\n                )}\n              </SuiBox>\n              {renderButton()}\n            </SuiBox>\n          </Grid>\n          <Grid item xs={12} lg={7}>\n            {useMemo(() => renderItems, [chart])}\n          </Grid>\n        </Grid>\n      </SuiBox>\n    </Card>\n  );\n}\n\n// Setting default values for the props of ComplexReportsDoughnutChart\nComplexReportsDoughnutChart.defaultProps = {\n  tooltip: \"\",\n  action: false,\n};\n\n// Typechecking props for the ComplexReportsDoughnutChart\nComplexReportsDoughnutChart.propTypes = {\n  title: PropTypes.string.isRequired,\n  chart: PropTypes.shape({\n    images: PropTypes.arrayOf(PropTypes.string),\n    labels: PropTypes.arrayOf(PropTypes.string).isRequired,\n    datasets: PropTypes.objectOf(\n      PropTypes.oneOfType([PropTypes.object, PropTypes.array, PropTypes.string])\n    ).isRequired,\n  }).isRequired,\n  tooltip: PropTypes.string,\n  action: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.shape({\n      type: PropTypes.oneOf([\"external\", \"internal\"]).isRequired,\n      route: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      color: PropTypes.oneOf([\n        \"primary\",\n        \"secondary\",\n        \"info\",\n        \"success\",\n        \"warning\",\n        \"error\",\n        \"dark\",\n        \"light\",\n      ]),\n    }),\n  ]),\n};\n\nexport default ComplexReportsDoughnutChart;\n"]},"metadata":{},"sourceType":"module"}