{"ast":null,"code":"var _jsxFileName = \"C:\\\\Fund\\\\soft\\\\admin\\\\src\\\\layouts\\\\pages\\\\account\\\\components\\\\Tab4\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Grid from \"@mui/material/Grid\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Tabs from \"@mui/material/Tabs\";\nimport Tab from \"@mui/material/Tab\";\nimport SuiBox from \"components/SuiBox\"; // import breakpoints from \"assets/theme/base/breakpoints\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction BaseLayout(_ref) {\n  _s();\n\n  let {\n    stickyNavbar\n  } = _ref;\n  // const [tabsOrientation, setTabsOrientation] = useState(\"horizontal\");\n  const [tabValue, setTabValue] = useState(0);\n  useEffect(() => {\n    // A function that sets the orientation state of the tabs.\n    // function handleTabsOrientation() {\n    //     return window.innerWidth < breakpoints.values.sm\n    //         ? setTabsOrientation(\"vertical\")\n    //         : setTabsOrientation(\"horizontal\");\n    // }\n\n    /** \r\n     The event listener that's calling the handleTabsOrientation function when resizing the window.\r\n    */\n    window.addEventListener(\"resize\"); // Call the handleTabsOrientation function to set the state with the initial value.\n    // handleTabsOrientation();\n    // Remove event listener on cleanup\n\n    return () => window.removeEventListener(\"resize\");\n  });\n\n  const handleSetTabValue = (event, newValue) => setTabValue(newValue);\n\n  return /*#__PURE__*/_jsxDEV(SuiBox, {\n    children: /*#__PURE__*/_jsxDEV(SuiBox, {\n      mt: stickyNavbar ? 3 : 10,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        p: 1,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 12,\n          lg: 12,\n          children: /*#__PURE__*/_jsxDEV(AppBar, {\n            position: \"static\",\n            children: /*#__PURE__*/_jsxDEV(Tabs, {\n              children: [/*#__PURE__*/_jsxDEV(Tab, {\n                label: \" AMC\",\n                style: {\n                  fontWeight: \"bold\",\n                  fontSize: \"18px\",\n                  margin: '10px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Tab, {\n                label: \"Invested Amount\",\n                style: {\n                  fontWeight: \"bold\",\n                  fontSize: \"18px\",\n                  margin: '10px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Tab, {\n                label: \"AUM\",\n                style: {\n                  fontWeight: \"bold\",\n                  fontSize: \"18px\",\n                  margin: '10px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n} // Setting default values for the props of BaseLayout\n\n\n_s(BaseLayout, \"Pjh32KQrx15h2aek57ilz0VmJbg=\");\n\n_c = BaseLayout;\nBaseLayout.defaultProps = {\n  stickyNavbar: false\n}; // Typechecking props for BaseLayout\n\nBaseLayout.propTypes = {\n  stickyNavbar: PropTypes.bool\n};\nexport default BaseLayout;\n\nvar _c;\n\n$RefreshReg$(_c, \"BaseLayout\");","map":{"version":3,"sources":["C:/Fund/soft/admin/src/layouts/pages/account/components/Tab4/index.js"],"names":["useState","useEffect","PropTypes","Grid","AppBar","Tabs","Tab","SuiBox","BaseLayout","stickyNavbar","tabValue","setTabValue","window","addEventListener","removeEventListener","handleSetTabValue","event","newValue","fontWeight","fontSize","margin","defaultProps","propTypes","bool"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,MAAP,MAAmB,mBAAnB,C,CACA;;;;AAGA,SAASC,UAAT,OAAsC;AAAA;;AAAA,MAAlB;AAAEC,IAAAA;AAAF,GAAkB;AAClC;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,CAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACR;AACA;AACQW,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAXY,CAaZ;AACA;AAEA;;AACA,WAAO,MAAMD,MAAM,CAACE,mBAAP,CAA2B,QAA3B,CAAb;AACH,GAlBQ,CAAT;;AAoBA,QAAMC,iBAAiB,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqBN,WAAW,CAACM,QAAD,CAA1D;;AAEA,sBAEI,QAAC,MAAD;AAAA,2BACI,QAAC,MAAD;AAAQ,MAAA,EAAE,EAAER,YAAY,GAAG,CAAH,GAAO,EAA/B;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,CAAC,EAAE,CAAnB;AAAA,+BACI,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAmB,UAAA,EAAE,EAAE,EAAvB;AAA2B,UAAA,EAAE,EAAE,EAA/B;AAAA,iCACI,QAAC,MAAD;AAAQ,YAAA,QAAQ,EAAC,QAAjB;AAAA,mCACI,QAAC,IAAD;AAAA,sCACI,QAAC,GAAD;AAAK,gBAAA,KAAK,EAAC,MAAX;AAAkB,gBAAA,KAAK,EAAE;AAAES,kBAAAA,UAAU,EAAE,MAAd;AAAsBC,kBAAAA,QAAQ,EAAE,MAAhC;AAAyCC,kBAAAA,MAAM,EAAE;AAAjD;AAAzB;AAAA;AAAA;AAAA;AAAA,sBADJ,eAGI,QAAC,GAAD;AAAK,gBAAA,KAAK,EAAC,iBAAX;AAA6B,gBAAA,KAAK,EAAE;AAAEF,kBAAAA,UAAU,EAAE,MAAd;AAAsBC,kBAAAA,QAAQ,EAAE,MAAhC;AAAyCC,kBAAAA,MAAM,EAAE;AAAjD;AAApC;AAAA;AAAA;AAAA;AAAA,sBAHJ,eAKI,QAAC,GAAD;AAAK,gBAAA,KAAK,EAAC,KAAX;AAAiB,gBAAA,KAAK,EAAE;AAAEF,kBAAAA,UAAU,EAAE,MAAd;AAAsBC,kBAAAA,QAAQ,EAAE,MAAhC;AAAyCC,kBAAAA,MAAM,EAAE;AAAjD;AAAxB;AAAA;AAAA;AAAA;AAAA,sBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UAFJ;AAsBH,C,CAED;;;GAlDSZ,U;;KAAAA,U;AAmDTA,UAAU,CAACa,YAAX,GAA0B;AACtBZ,EAAAA,YAAY,EAAE;AADQ,CAA1B,C,CAIA;;AACAD,UAAU,CAACc,SAAX,GAAuB;AACnBb,EAAAA,YAAY,EAAEP,SAAS,CAACqB;AADL,CAAvB;AAKA,eAAef,UAAf","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Tabs from \"@mui/material/Tabs\";\r\nimport Tab from \"@mui/material/Tab\";\r\nimport SuiBox from \"components/SuiBox\";\r\n// import breakpoints from \"assets/theme/base/breakpoints\";\r\n\r\n\r\nfunction BaseLayout({ stickyNavbar }) {\r\n    // const [tabsOrientation, setTabsOrientation] = useState(\"horizontal\");\r\n    const [tabValue, setTabValue] = useState(0);\r\n\r\n    useEffect(() => {\r\n        // A function that sets the orientation state of the tabs.\r\n        // function handleTabsOrientation() {\r\n        //     return window.innerWidth < breakpoints.values.sm\r\n        //         ? setTabsOrientation(\"vertical\")\r\n        //         : setTabsOrientation(\"horizontal\");\r\n        // }\r\n\r\n        /** \r\n         The event listener that's calling the handleTabsOrientation function when resizing the window.\r\n        */\r\n        window.addEventListener(\"resize\");\r\n\r\n        // Call the handleTabsOrientation function to set the state with the initial value.\r\n        // handleTabsOrientation();\r\n\r\n        // Remove event listener on cleanup\r\n        return () => window.removeEventListener(\"resize\");\r\n    });\r\n\r\n    const handleSetTabValue = (event, newValue) => setTabValue(newValue);\r\n\r\n    return (\r\n\r\n        <SuiBox>\r\n            <SuiBox mt={stickyNavbar ? 3 : 10}>\r\n                <Grid container p={1}>\r\n                    <Grid item xs={12} sm={12} lg={12}>\r\n                        <AppBar position=\"static\">\r\n                            <Tabs>\r\n                                <Tab label=\" AMC\" style={{ fontWeight: \"bold\", fontSize: \"18px\" , margin: '10px'}} />\r\n\r\n                                <Tab label=\"Invested Amount\" style={{ fontWeight: \"bold\", fontSize: \"18px\" , margin: '10px'}} />\r\n\r\n                                <Tab label=\"AUM\" style={{ fontWeight: \"bold\", fontSize: \"18px\" , margin: '10px'}} />\r\n\r\n                            </Tabs>\r\n                        </AppBar>\r\n                    </Grid>\r\n                </Grid>\r\n            </SuiBox>\r\n        </SuiBox>\r\n\r\n    );\r\n}\r\n\r\n// Setting default values for the props of BaseLayout\r\nBaseLayout.defaultProps = {\r\n    stickyNavbar: false,\r\n};\r\n\r\n// Typechecking props for BaseLayout\r\nBaseLayout.propTypes = {\r\n    stickyNavbar: PropTypes.bool,\r\n\r\n};\r\n\r\nexport default BaseLayout;\r\n"]},"metadata":{},"sourceType":"module"}