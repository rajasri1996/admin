{"ast":null,"code":"var _jsxFileName = \"C:\\\\Fund\\\\soft\\\\admin\\\\src\\\\examples\\\\Tables\\\\Table\\\\index.js\",\n    _s = $RefreshSig$();\n\n/**\n=========================================================\n* Soft UI Dashboard PRO React - v2.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/soft-ui-dashboard-pro-material-ui\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\nimport { useMemo } from \"react\"; // prop-types is a library for typechecking of props\n\nimport PropTypes from \"prop-types\"; // @mui material components\n\nimport { Table as MuiTable } from \"@mui/material\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableRow from \"@mui/material/TableRow\"; // Soft UI Dashboard PRO React components\n\nimport SuiBox from \"components/SuiBox\";\nimport SuiAvatar from \"components/SuiAvatar\";\nimport SuiTypography from \"components/SuiTypography\"; // Soft UI Dashboard PRO React base styles\n\nimport colors from \"assets/theme/base/colors\";\nimport typography from \"assets/theme/base/typography\";\nimport borders from \"assets/theme/base/borders\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Table(_ref) {\n  _s();\n\n  let {\n    columns,\n    rows\n  } = _ref;\n  const {\n    light\n  } = colors;\n  const {\n    size,\n    fontWeightBold\n  } = typography;\n  const {\n    borderWidth\n  } = borders;\n  const renderColumns = columns.map((_ref2, key) => {\n    let {\n      name,\n      align\n    } = _ref2;\n    let pl;\n    let pr;\n\n    if (key === 0) {\n      pl = 3;\n      pr = 3;\n    } else if (key === columns.length - 1) {\n      pl = 3;\n      pr = 3;\n    } else {\n      pl = 1;\n      pr = 1;\n    }\n\n    return /*#__PURE__*/_jsxDEV(SuiBox, {\n      component: \"th\",\n      pt: 1.5,\n      pb: 1.25,\n      pl: align === \"left\" ? pl : 3,\n      pr: align === \"right\" ? pr : 3,\n      textAlign: align,\n      fontSize: size.xxs,\n      fontWeight: fontWeightBold,\n      color: \"secondary\",\n      opacity: 0.7,\n      borderBottom: `${borderWidth[1]} solid ${light.main}`,\n      children: name.toUpperCase()\n    }, name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  });\n  const renderRows = rows.map((row, key) => {\n    const rowKey = `row-${key}`;\n    const tableRow = columns.map(_ref3 => {\n      let {\n        name,\n        align\n      } = _ref3;\n      let template;\n\n      if (Array.isArray(row[name])) {\n        template = /*#__PURE__*/_jsxDEV(SuiBox, {\n          component: \"td\",\n          p: 1,\n          children: /*#__PURE__*/_jsxDEV(SuiBox, {\n            display: \"flex\",\n            alignItems: \"center\",\n            py: 0.5,\n            px: 1,\n            children: [/*#__PURE__*/_jsxDEV(SuiBox, {\n              mr: 2,\n              children: /*#__PURE__*/_jsxDEV(SuiAvatar, {\n                src: row[name][0],\n                name: row[name][1],\n                variant: \"rounded\",\n                size: \"sm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(SuiTypography, {\n              variant: \"button\",\n              fontWeight: \"medium\",\n              customClass: \"w-max\",\n              children: row[name][1]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)\n        }, row[name][1], false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this);\n      } else {\n        template = /*#__PURE__*/_jsxDEV(SuiBox, {\n          component: \"td\",\n          p: 1,\n          textAlign: align,\n          children: /*#__PURE__*/_jsxDEV(SuiTypography, {\n            variant: \"button\",\n            fontWeight: \"regular\",\n            textColor: \"secondary\",\n            customClass: \"d-inline-block w-max\",\n            children: row[name]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)\n        }, row[name], false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this);\n      }\n\n      return template;\n    });\n    return /*#__PURE__*/_jsxDEV(TableRow, {\n      children: tableRow\n    }, rowKey, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 12\n    }, this);\n  });\n  return useMemo(() => /*#__PURE__*/_jsxDEV(TableContainer, {\n    children: /*#__PURE__*/_jsxDEV(MuiTable, {\n      children: [/*#__PURE__*/_jsxDEV(SuiBox, {\n        component: \"thead\",\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: renderColumns\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: renderRows\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 7\n  }, this), [columns, rows]);\n} // Setting default values for the props of Table\n\n\n_s(Table, \"nwk+m61qLgjDVUp4IGV/072DDN4=\");\n\n_c = Table;\nTable.defaultProps = {\n  columns: [],\n  rows: [{}]\n}; // Typechecking props for the Table\n\nTable.propTypes = {\n  columns: PropTypes.arrayOf(PropTypes.object),\n  rows: PropTypes.arrayOf(PropTypes.object)\n};\nexport default Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["C:/Fund/soft/admin/src/examples/Tables/Table/index.js"],"names":["useMemo","PropTypes","Table","MuiTable","TableBody","TableContainer","TableRow","SuiBox","SuiAvatar","SuiTypography","colors","typography","borders","columns","rows","light","size","fontWeightBold","borderWidth","renderColumns","map","key","name","align","pl","pr","length","xxs","main","toUpperCase","renderRows","row","rowKey","tableRow","template","Array","isArray","defaultProps","propTypes","arrayOf","object"],"mappings":"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","sourcesContent":["/**\n=========================================================\n* Soft UI Dashboard PRO React - v2.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/soft-ui-dashboard-pro-material-ui\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n\nimport { useMemo } from \"react\";\n\n// prop-types is a library for typechecking of props\nimport PropTypes from \"prop-types\";\n\n// @mui material components\nimport { Table as MuiTable } from \"@mui/material\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableRow from \"@mui/material/TableRow\";\n\n// Soft UI Dashboard PRO React components\nimport SuiBox from \"components/SuiBox\";\nimport SuiAvatar from \"components/SuiAvatar\";\nimport SuiTypography from \"components/SuiTypography\";\n\n// Soft UI Dashboard PRO React base styles\nimport colors from \"assets/theme/base/colors\";\nimport typography from \"assets/theme/base/typography\";\nimport borders from \"assets/theme/base/borders\";\n\nfunction Table({ columns, rows }) {\n  const { light } = colors;\n  const { size, fontWeightBold } = typography;\n  const { borderWidth } = borders;\n\n  const renderColumns = columns.map(({ name, align }, key) => {\n    let pl;\n    let pr;\n\n    if (key === 0) {\n      pl = 3;\n      pr = 3;\n    } else if (key === columns.length - 1) {\n      pl = 3;\n      pr = 3;\n    } else {\n      pl = 1;\n      pr = 1;\n    }\n\n    return (\n      <SuiBox\n        key={name}\n        component=\"th\"\n        pt={1.5}\n        pb={1.25}\n        pl={align === \"left\" ? pl : 3}\n        pr={align === \"right\" ? pr : 3}\n        textAlign={align}\n        fontSize={size.xxs}\n        fontWeight={fontWeightBold}\n        color=\"secondary\"\n        opacity={0.7}\n        borderBottom={`${borderWidth[1]} solid ${light.main}`}\n      >\n        {name.toUpperCase()}\n      </SuiBox>\n    );\n  });\n\n  const renderRows = rows.map((row, key) => {\n    const rowKey = `row-${key}`;\n\n    const tableRow = columns.map(({ name, align }) => {\n      let template;\n\n      if (Array.isArray(row[name])) {\n        template = (\n          <SuiBox key={row[name][1]} component=\"td\" p={1}>\n            <SuiBox display=\"flex\" alignItems=\"center\" py={0.5} px={1}>\n              <SuiBox mr={2}>\n                <SuiAvatar src={row[name][0]} name={row[name][1]} variant=\"rounded\" size=\"sm\" />\n              </SuiBox>\n              <SuiTypography variant=\"button\" fontWeight=\"medium\" customClass=\"w-max\">\n                {row[name][1]}\n              </SuiTypography>\n            </SuiBox>\n          </SuiBox>\n        );\n      } else {\n        template = (\n          <SuiBox key={row[name]} component=\"td\" p={1} textAlign={align}>\n            <SuiTypography\n              variant=\"button\"\n              fontWeight=\"regular\"\n              textColor=\"secondary\"\n              customClass=\"d-inline-block w-max\"\n            >\n              {row[name]}\n            </SuiTypography>\n          </SuiBox>\n        );\n      }\n\n      return template;\n    });\n\n    return <TableRow key={rowKey}>{tableRow}</TableRow>;\n  });\n\n  return useMemo(\n    () => (\n      <TableContainer>\n        <MuiTable>\n          <SuiBox component=\"thead\">\n            <TableRow>{renderColumns}</TableRow>\n          </SuiBox>\n          <TableBody>{renderRows}</TableBody>\n        </MuiTable>\n      </TableContainer>\n    ),\n    [columns, rows]\n  );\n}\n\n// Setting default values for the props of Table\nTable.defaultProps = {\n  columns: [],\n  rows: [{}],\n};\n\n// Typechecking props for the Table\nTable.propTypes = {\n  columns: PropTypes.arrayOf(PropTypes.object),\n  rows: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}