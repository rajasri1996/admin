{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst circularGeometry_1 = require(\"./circularGeometry\");\n\nfunction getStartAndEndPosition(opts) {\n  const {\n    startAngle,\n    endAngle,\n    radius,\n    svgSize,\n    angleType\n  } = opts;\n  let isCircle = false;\n\n  if (startAngle !== endAngle && startAngle % 360 === endAngle % 360) {\n    isCircle = true;\n  }\n\n  const startPosition = circularGeometry_1.angleToPosition(Object.assign({\n    degree: startAngle\n  }, angleType), radius, svgSize);\n  const endPosition = circularGeometry_1.angleToPosition(Object.assign({\n    degree: isCircle ? endAngle - 0.001 : endAngle\n  }, angleType), radius, svgSize);\n  return {\n    startPosition,\n    endPosition,\n    isCircle\n  };\n}\n\nfunction pieShapedPath(opts) {\n  const {\n    radius,\n    svgSize,\n    direction\n  } = opts;\n  const {\n    startPosition,\n    endPosition\n  } = getStartAndEndPosition(opts);\n  return `\n    M ${svgSize / 2},${svgSize / 2}\n    L ${startPosition.x},${startPosition.y}\n    A ${radius} ${radius} 0 ${direction === \"cw\" ? \"1 1\" : \"0 0\"}\n      ${endPosition.x} ${endPosition.y}\n    Z\n  `;\n}\n\nexports.pieShapedPath = pieShapedPath;\n\nfunction arcShapedPath(opts) {\n  const {\n    startAngle,\n    endAngle,\n    radius,\n    direction\n  } = opts;\n  const {\n    startPosition,\n    endPosition,\n    isCircle\n  } = getStartAndEndPosition(opts);\n  const largeArc = endAngle - startAngle >= 180;\n  return `\n      M ${startPosition.x},${startPosition.y}\n      A ${radius} ${radius} 0\n        ${largeArc ? \"1\" : \"0\"}\n        ${direction === \"cw\" ? \"1\" : \"0\"}\n        ${endPosition.x} ${endPosition.y}\n        ${isCircle ? \"Z\" : \"\"}\n    `;\n}\n\nexports.arcShapedPath = arcShapedPath;\n\nfunction arcPathWithRoundedEnds(opts) {\n  const {\n    startAngle,\n    innerRadius,\n    thickness,\n    direction,\n    angleType,\n    svgSize\n  } = opts;\n  let {\n    endAngle\n  } = opts;\n\n  if (startAngle % 360 === endAngle % 360 && startAngle !== endAngle) {\n    endAngle = endAngle - 0.001;\n  }\n\n  const largeArc = endAngle - startAngle >= 180;\n  const outerRadius = innerRadius + thickness;\n  const innerArcStart = circularGeometry_1.angleToPosition(Object.assign({\n    degree: startAngle\n  }, angleType), innerRadius, svgSize);\n  const startPoint = `\n    M ${innerArcStart.x},${innerArcStart.y}\n  `;\n  const innerArcEnd = circularGeometry_1.angleToPosition(Object.assign({\n    degree: endAngle\n  }, angleType), innerRadius, svgSize);\n  const innerArc = `\n    A ${innerRadius} ${innerRadius} 0\n      ${largeArc ? \"1\" : \"0\"}\n      ${direction === \"cw\" ? \"1\" : \"0\"}\n      ${innerArcEnd.x} ${innerArcEnd.y}\n  `;\n  const outerArcStart = circularGeometry_1.angleToPosition(Object.assign({\n    degree: endAngle\n  }, angleType), outerRadius, svgSize);\n  const firstButt = `\n    A ${thickness / 2} ${thickness / 2} 0\n      ${largeArc ? \"1\" : \"0\"}\n      ${direction === \"cw\" ? \"0\" : \"1\"}\n      ${outerArcStart.x} ${outerArcStart.y}\n  `;\n  const outerArcEnd = circularGeometry_1.angleToPosition(Object.assign({\n    degree: startAngle\n  }, angleType), outerRadius, svgSize);\n  const outerArc = `\n    A ${outerRadius} ${outerRadius} 0\n      ${largeArc ? \"1\" : \"0\"}\n      ${direction === \"cw\" ? \"0\" : \"1\"}\n      ${outerArcEnd.x} ${outerArcEnd.y}\n  `;\n  const secondButt = `\n    A ${thickness / 2} ${thickness / 2} 0\n      ${largeArc ? \"1\" : \"0\"}\n      ${direction === \"cw\" ? \"0\" : \"1\"}\n      ${innerArcStart.x} ${innerArcStart.y}\n  `;\n  return startPoint + innerArc + firstButt + outerArc + secondButt + \" Z\";\n}\n\nexports.arcPathWithRoundedEnds = arcPathWithRoundedEnds;","map":{"version":3,"sources":["C:/Fund/soft-ui-dashboard-pro-react-v2.0.0/admin/node_modules/react-circular-slider-svg/dist/svgPaths.js"],"names":["Object","defineProperty","exports","value","circularGeometry_1","require","getStartAndEndPosition","opts","startAngle","endAngle","radius","svgSize","angleType","isCircle","startPosition","angleToPosition","assign","degree","endPosition","pieShapedPath","direction","x","y","arcShapedPath","largeArc","arcPathWithRoundedEnds","innerRadius","thickness","outerRadius","innerArcStart","startPoint","innerArcEnd","innerArc","outerArcStart","firstButt","outerArcEnd","outerArc","secondButt"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst circularGeometry_1 = require(\"./circularGeometry\");\nfunction getStartAndEndPosition(opts) {\n    const { startAngle, endAngle, radius, svgSize, angleType } = opts;\n    let isCircle = false;\n    if (startAngle !== endAngle && startAngle % 360 === endAngle % 360) {\n        isCircle = true;\n    }\n    const startPosition = circularGeometry_1.angleToPosition(Object.assign({ degree: startAngle }, angleType), radius, svgSize);\n    const endPosition = circularGeometry_1.angleToPosition(Object.assign({ degree: isCircle ? endAngle - 0.001 : endAngle }, angleType), radius, svgSize);\n    return { startPosition, endPosition, isCircle };\n}\nfunction pieShapedPath(opts) {\n    const { radius, svgSize, direction } = opts;\n    const { startPosition, endPosition } = getStartAndEndPosition(opts);\n    return `\n    M ${svgSize / 2},${svgSize / 2}\n    L ${startPosition.x},${startPosition.y}\n    A ${radius} ${radius} 0 ${direction === \"cw\" ? \"1 1\" : \"0 0\"}\n      ${endPosition.x} ${endPosition.y}\n    Z\n  `;\n}\nexports.pieShapedPath = pieShapedPath;\nfunction arcShapedPath(opts) {\n    const { startAngle, endAngle, radius, direction } = opts;\n    const { startPosition, endPosition, isCircle } = getStartAndEndPosition(opts);\n    const largeArc = endAngle - startAngle >= 180;\n    return `\n      M ${startPosition.x},${startPosition.y}\n      A ${radius} ${radius} 0\n        ${largeArc ? \"1\" : \"0\"}\n        ${direction === \"cw\" ? \"1\" : \"0\"}\n        ${endPosition.x} ${endPosition.y}\n        ${isCircle ? \"Z\" : \"\"}\n    `;\n}\nexports.arcShapedPath = arcShapedPath;\nfunction arcPathWithRoundedEnds(opts) {\n    const { startAngle, innerRadius, thickness, direction, angleType, svgSize } = opts;\n    let { endAngle } = opts;\n    if (startAngle % 360 === endAngle % 360 && startAngle !== endAngle) {\n        endAngle = endAngle - 0.001;\n    }\n    const largeArc = endAngle - startAngle >= 180;\n    const outerRadius = innerRadius + thickness;\n    const innerArcStart = circularGeometry_1.angleToPosition(Object.assign({ degree: startAngle }, angleType), innerRadius, svgSize);\n    const startPoint = `\n    M ${innerArcStart.x},${innerArcStart.y}\n  `;\n    const innerArcEnd = circularGeometry_1.angleToPosition(Object.assign({ degree: endAngle }, angleType), innerRadius, svgSize);\n    const innerArc = `\n    A ${innerRadius} ${innerRadius} 0\n      ${largeArc ? \"1\" : \"0\"}\n      ${direction === \"cw\" ? \"1\" : \"0\"}\n      ${innerArcEnd.x} ${innerArcEnd.y}\n  `;\n    const outerArcStart = circularGeometry_1.angleToPosition(Object.assign({ degree: endAngle }, angleType), outerRadius, svgSize);\n    const firstButt = `\n    A ${thickness / 2} ${thickness / 2} 0\n      ${largeArc ? \"1\" : \"0\"}\n      ${direction === \"cw\" ? \"0\" : \"1\"}\n      ${outerArcStart.x} ${outerArcStart.y}\n  `;\n    const outerArcEnd = circularGeometry_1.angleToPosition(Object.assign({ degree: startAngle }, angleType), outerRadius, svgSize);\n    const outerArc = `\n    A ${outerRadius} ${outerRadius} 0\n      ${largeArc ? \"1\" : \"0\"}\n      ${direction === \"cw\" ? \"0\" : \"1\"}\n      ${outerArcEnd.x} ${outerArcEnd.y}\n  `;\n    const secondButt = `\n    A ${thickness / 2} ${thickness / 2} 0\n      ${largeArc ? \"1\" : \"0\"}\n      ${direction === \"cw\" ? \"0\" : \"1\"}\n      ${innerArcStart.x} ${innerArcStart.y}\n  `;\n    return startPoint + innerArc + firstButt + outerArc + secondButt + \" Z\";\n}\nexports.arcPathWithRoundedEnds = arcPathWithRoundedEnds;\n"]},"metadata":{},"sourceType":"script"}